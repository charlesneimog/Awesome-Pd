{
    "AI": {
        "Machine Learning": [],
        "Deep Learning": [
            "test/deep_learning/index.md",
            {
                "nn~": "test/deep_learning/nn~.md"
            },
            {
                "nn~": "objects/nn~.md"
            }
        ],
        "Neural Networks": [
            "test/neural_networks/index.md",
            {
                "neuralnet": "test/neural_networks/neuralnet.md"
            },
            {
                "neuralnet": "objects/neuralnet.md"
            }
        ],
        "Statistical Models": []
    },
    "Composition": {
        "Algorithmic": [
            "test/algorithmic/index.md",
            {
                "loop": "test/algorithmic/loop.md"
            },
            {
                "loop": "objects/loop.md"
            }
        ],
        "Procedural": [
            "test/procedural/index.md",
            {
                "l.readsvg": "test/procedural/l.readsvg.md"
            },
            {
                "chance~": "test/procedural/chance~.md"
            },
            {
                "segregate": "test/procedural/segregate.md"
            },
            {
                "drunkard": "test/procedural/drunkard.md"
            },
            {
                "loop": "test/procedural/loop.md"
            },
            {
                "rec": "test/procedural/rec.md"
            },
            {
                "drip": "test/procedural/drip.md"
            },
            {
                "l.attrfilter": "test/procedural/l.attrfilter.md"
            },
            {
                "mono~": "test/procedural/mono~.md"
            },
            {
                "niagara": "test/procedural/niagara.md"
            },
            {
                "speedlim": "test/procedural/speedlim.md"
            },
            {
                "part_targetsize": "test/procedural/part_targetsize.md"
            },
            {
                "count": "test/procedural/count.md"
            },
            {
                "nmess": "test/procedural/nmess.md"
            },
            {
                "euclid": "test/procedural/euclid.md"
            },
            {
                "abs.pd~": "test/procedural/abs.pd~.md"
            },
            {
                "counter": "test/procedural/counter.md"
            },
            {
                "timed.gate~": "test/procedural/timed.gate~.md"
            },
            {
                "loadbanger": "test/procedural/loadbanger.md"
            },
            {
                "repeat": "test/procedural/repeat.md"
            },
            {
                "tempo": "test/procedural/tempo.md"
            },
            {
                "speed": "test/procedural/speed.md"
            },
            {
                "loadmess": "test/procedural/loadmess.md"
            },
            {
                "limit": "test/procedural/limit.md"
            },
            {
                "mono": "test/procedural/mono.md"
            },
            {
                "chrono": "test/procedural/chrono.md"
            },
            {
                "voices": "test/procedural/voices.md"
            },
            {
                "uzi": "test/procedural/uzi.md"
            },
            {
                "clock": "test/procedural/clock.md"
            },
            {
                "sequencer~": "test/procedural/sequencer~.md"
            },
            {
                "l.readsvg": "objects/l.readsvg.md"
            },
            {
                "chance~": "objects/chance~.md"
            },
            {
                "segregate": "objects/segregate.md"
            },
            {
                "drunkard": "objects/drunkard.md"
            },
            {
                "loop": "objects/loop.md"
            },
            {
                "rec": "objects/rec.md"
            },
            {
                "drip": "objects/drip.md"
            },
            {
                "l.attrfilter": "objects/l.attrfilter.md"
            },
            {
                "mono~": "objects/mono~.md"
            },
            {
                "niagara": "objects/niagara.md"
            },
            {
                "speedlim": "objects/speedlim.md"
            },
            {
                "part_targetsize": "objects/part_targetsize.md"
            },
            {
                "count": "objects/count.md"
            },
            {
                "nmess": "objects/nmess.md"
            },
            {
                "euclid": "objects/euclid.md"
            },
            {
                "abs.pd~": "objects/abs.pd~.md"
            },
            {
                "counter": "objects/counter.md"
            },
            {
                "timed.gate~": "objects/timed.gate~.md"
            },
            {
                "loadbanger": "objects/loadbanger.md"
            },
            {
                "repeat": "objects/repeat.md"
            },
            {
                "tempo": "objects/tempo.md"
            },
            {
                "speed": "objects/speed.md"
            },
            {
                "loadmess": "objects/loadmess.md"
            },
            {
                "limit": "objects/limit.md"
            },
            {
                "mono": "objects/mono.md"
            },
            {
                "chrono": "objects/chrono.md"
            },
            {
                "voices": "objects/voices.md"
            },
            {
                "uzi": "objects/uzi.md"
            },
            {
                "clock": "objects/clock.md"
            },
            {
                "sequencer~": "objects/sequencer~.md"
            }
        ],
        "Stochastic / Probabilistic": [],
        "Score-based": []
    },
    "Control": {
        "Logic": [
            "test/logic/index.md",
            {
                "greaterthaneq~": "test/logic/greaterthaneq~.md"
            },
            {
                "schmitt~": "test/logic/schmitt~.md"
            },
            {
                "op": "test/logic/op.md"
            },
            {
                "equal": "test/logic/equal.md"
            },
            {
                "bitxor~": "test/logic/bitxor~.md"
            },
            {
                "changed": "test/logic/changed.md"
            },
            {
                "equals~": "test/logic/equals~.md"
            },
            {
                "peak": "test/logic/peak.md"
            },
            {
                "match~": "test/logic/match~.md"
            },
            {
                "mono~": "test/logic/mono~.md"
            },
            {
                "schmitt": "test/logic/schmitt.md"
            },
            {
                "regex": "test/logic/regex.md"
            },
            {
                "notequals~": "test/logic/notequals~.md"
            },
            {
                "above": "test/logic/above.md"
            },
            {
                "bitnot~": "test/logic/bitnot~.md"
            },
            {
                "togedge": "test/logic/togedge.md"
            },
            {
                "0x3e0x7e": "test/logic/0x3e0x7e.md"
            },
            {
                "nmess": "test/logic/nmess.md"
            },
            {
                "thresh~": "test/logic/thresh~.md"
            },
            {
                "strcmp": "test/logic/strcmp.md"
            },
            {
                "matchbox": "test/logic/matchbox.md"
            },
            {
                "routeall": "test/logic/routeall.md"
            },
            {
                "bitand~": "test/logic/bitand~.md"
            },
            {
                "&&~": "test/logic/&&~.md"
            },
            {
                "bitor~": "test/logic/bitor~.md"
            },
            {
                "split": "test/logic/split.md"
            },
            {
                "zigbinops": "test/logic/zigbinops.md"
            },
            {
                "cyclone": "test/logic/cyclone.md"
            },
            {
                "0x7c0x7c0x7e": "test/logic/0x7c0x7c0x7e.md"
            },
            {
                "gaterelease~": "test/logic/gaterelease~.md"
            },
            {
                "tSphere3D": "test/logic/tSphere3D.md"
            },
            {
                "tCube3D": "test/logic/tCube3D.md"
            },
            {
                "status~": "test/logic/status~.md"
            },
            {
                "edge~": "test/logic/edge~.md"
            },
            {
                "match": "test/logic/match.md"
            },
            {
                "mono": "test/logic/mono.md"
            },
            {
                "==~": "test/logic/==~.md"
            },
            {
                "onebang": "test/logic/onebang.md"
            },
            {
                "0x3c0x7e": "test/logic/0x3c0x7e.md"
            },
            {
                "lessthaneq~": "test/logic/lessthaneq~.md"
            },
            {
                "greaterthan~": "test/logic/greaterthan~.md"
            },
            {
                "op~": "test/logic/op~.md"
            },
            {
                "lessthan~": "test/logic/lessthan~.md"
            },
            {
                "bitshift~": "test/logic/bitshift~.md"
            },
            {
                "greaterthaneq~": "objects/greaterthaneq~.md"
            },
            {
                "schmitt~": "objects/schmitt~.md"
            },
            {
                "op": "objects/op.md"
            },
            {
                "equal": "objects/equal.md"
            },
            {
                "bitxor~": "objects/bitxor~.md"
            },
            {
                "changed": "objects/changed.md"
            },
            {
                "equals~": "objects/equals~.md"
            },
            {
                "peak": "objects/peak.md"
            },
            {
                "match~": "objects/match~.md"
            },
            {
                "mono~": "objects/mono~.md"
            },
            {
                "schmitt": "objects/schmitt.md"
            },
            {
                "regex": "objects/regex.md"
            },
            {
                "notequals~": "objects/notequals~.md"
            },
            {
                "above": "objects/above.md"
            },
            {
                "bitnot~": "objects/bitnot~.md"
            },
            {
                "togedge": "objects/togedge.md"
            },
            {
                "0x3e0x7e": "objects/0x3e0x7e.md"
            },
            {
                "nmess": "objects/nmess.md"
            },
            {
                "thresh~": "objects/thresh~.md"
            },
            {
                "strcmp": "objects/strcmp.md"
            },
            {
                "matchbox": "objects/matchbox.md"
            },
            {
                "routeall": "objects/routeall.md"
            },
            {
                "bitand~": "objects/bitand~.md"
            },
            {
                "&&~": "objects/&&~.md"
            },
            {
                "bitor~": "objects/bitor~.md"
            },
            {
                "split": "objects/split.md"
            },
            {
                "zigbinops": "objects/zigbinops.md"
            },
            {
                "cyclone": "objects/cyclone.md"
            },
            {
                "0x7c0x7c0x7e": "objects/0x7c0x7c0x7e.md"
            },
            {
                "gaterelease~": "objects/gaterelease~.md"
            },
            {
                "tSphere3D": "objects/tSphere3D.md"
            },
            {
                "tCube3D": "objects/tCube3D.md"
            },
            {
                "status~": "objects/status~.md"
            },
            {
                "edge~": "objects/edge~.md"
            },
            {
                "match": "objects/match.md"
            },
            {
                "mono": "objects/mono.md"
            },
            {
                "==~": "objects/==~.md"
            },
            {
                "onebang": "objects/onebang.md"
            },
            {
                "0x3c0x7e": "objects/0x3c0x7e.md"
            },
            {
                "lessthaneq~": "objects/lessthaneq~.md"
            },
            {
                "greaterthan~": "objects/greaterthan~.md"
            },
            {
                "op~": "objects/op~.md"
            },
            {
                "lessthan~": "objects/lessthan~.md"
            },
            {
                "bitshift~": "objects/bitshift~.md"
            }
        ],
        "Math": [
            "test/math/index.md",
            {
                "quantizer~": "test/math/quantizer~.md"
            },
            {
                "acos": "test/math/acos.md"
            },
            {
                "mavg": "test/math/mavg.md"
            },
            {
                "allpass.2nd~": "test/math/allpass.2nd~.md"
            },
            {
                "pix_threshold_bernsen": "test/math/pix_threshold_bernsen.md"
            },
            {
                "ratio2cents": "test/math/ratio2cents.md"
            },
            {
                "pdf~": "test/math/pdf~.md"
            },
            {
                "trunc~": "test/math/trunc~.md"
            },
            {
                "pow~": "test/math/pow~.md"
            },
            {
                "car2pol~": "test/math/car2pol~.md"
            },
            {
                "cents2frac": "test/math/cents2frac.md"
            },
            {
                "coeff2pz": "test/math/coeff2pz.md"
            },
            {
                "pz2coeff": "test/math/pz2coeff.md"
            },
            {
                "prime": "test/math/prime.md"
            },
            {
                "mean": "test/math/mean.md"
            },
            {
                "cents2scale": "test/math/cents2scale.md"
            },
            {
                "pmpd2d": "test/math/pmpd2d.md"
            },
            {
                "pol2cart": "test/math/pol2cart.md"
            },
            {
                "rdiv~": "test/math/rdiv~.md"
            },
            {
                "ikeda~": "test/math/ikeda~.md"
            },
            {
                "op": "test/math/op.md"
            },
            {
                "gemlist_info": "test/math/gemlist_info.md"
            },
            {
                "floor~": "test/math/floor~.md"
            },
            {
                "autotune2": "test/math/autotune2.md"
            },
            {
                "henon~": "test/math/henon~.md"
            },
            {
                "wave~": "test/math/wave~.md"
            },
            {
                "hsv2rgb": "test/math/hsv2rgb.md"
            },
            {
                "asin~": "test/math/asin~.md"
            },
            {
                "rdiv": "test/math/rdiv.md"
            },
            {
                "pix_add": "test/math/pix_add.md"
            },
            {
                "dbtoa~": "test/math/dbtoa~.md"
            },
            {
                "add": "test/math/add.md"
            },
            {
                "frac2cents": "test/math/frac2cents.md"
            },
            {
                "maximum": "test/math/maximum.md"
            },
            {
                "cosx~": "test/math/cosx~.md"
            },
            {
                "bitxor~": "test/math/bitxor~.md"
            },
            {
                "linedrive": "test/math/linedrive.md"
            },
            {
                "round": "test/math/round.md"
            },
            {
                "car2pol": "test/math/car2pol.md"
            },
            {
                "bicoeff2": "test/math/bicoeff2.md"
            },
            {
                "atodb~": "test/math/atodb~.md"
            },
            {
                "sph2cart": "test/math/sph2cart.md"
            },
            {
                "mag~": "test/math/mag~.md"
            },
            {
                "ceil": "test/math/ceil.md"
            },
            {
                "coordinates": "test/math/coordinates.md"
            },
            {
                "deg2rad": "test/math/deg2rad.md"
            },
            {
                "lincong~": "test/math/lincong~.md"
            },
            {
                "atodb": "test/math/atodb.md"
            },
            {
                "mov.rms~": "test/math/mov.rms~.md"
            },
            {
                "mass3D": "test/math/mass3D.md"
            },
            {
                "sampstoms~": "test/math/sampstoms~.md"
            },
            {
                "peak": "test/math/peak.md"
            },
            {
                "tanh~": "test/math/tanh~.md"
            },
            {
                "asinh~": "test/math/asinh~.md"
            },
            {
                "tCylinder3D": "test/math/tCylinder3D.md"
            },
            {
                "rgb2hsv": "test/math/rgb2hsv.md"
            },
            {
                "pong~": "test/math/pong~.md"
            },
            {
                "polymetro": "test/math/polymetro.md"
            },
            {
                "atan2~": "test/math/atan2~.md"
            },
            {
                "asinh": "test/math/asinh.md"
            },
            {
                "mass2D": "test/math/mass2D.md"
            },
            {
                "fold~": "test/math/fold~.md"
            },
            {
                "shaper~": "test/math/shaper~.md"
            },
            {
                "factor": "test/math/factor.md"
            },
            {
                "add~": "test/math/add~.md"
            },
            {
                "phasewrap~": "test/math/phasewrap~.md"
            },
            {
                "iCircle2D": "test/math/iCircle2D.md"
            },
            {
                "delta~": "test/math/delta~.md"
            },
            {
                "minmax": "test/math/minmax.md"
            },
            {
                "function~": "test/math/function~.md"
            },
            {
                "minimum~": "test/math/minimum~.md"
            },
            {
                "bpm": "test/math/bpm.md"
            },
            {
                "sin~": "test/math/sin~.md"
            },
            {
                "scale2freq": "test/math/scale2freq.md"
            },
            {
                "cartopol": "test/math/cartopol.md"
            },
            {
                "rminus~": "test/math/rminus~.md"
            },
            {
                "hann~": "test/math/hann~.md"
            },
            {
                "cosh~": "test/math/cosh~.md"
            },
            {
                "iAmbient2D": "test/math/iAmbient2D.md"
            },
            {
                "rminus": "test/math/rminus.md"
            },
            {
                "ceil~": "test/math/ceil~.md"
            },
            {
                "euclid": "test/math/euclid.md"
            },
            {
                "wrap": "test/math/wrap.md"
            },
            {
                "tanh": "test/math/tanh.md"
            },
            {
                "db2lin~": "test/math/db2lin~.md"
            },
            {
                "dec2frac": "test/math/dec2frac.md"
            },
            {
                "link": "test/math/link.md"
            },
            {
                "rand.f": "test/math/rand.f.md"
            },
            {
                "clip~": "test/math/clip~.md"
            },
            {
                "interpolate": "test/math/interpolate.md"
            },
            {
                "sinx~": "test/math/sinx~.md"
            },
            {
                "asin": "test/math/asin.md"
            },
            {
                "acosh": "test/math/acosh.md"
            },
            {
                "floor": "test/math/floor.md"
            },
            {
                "lorenz~": "test/math/lorenz~.md"
            },
            {
                "spread~": "test/math/spread~.md"
            },
            {
                "hz2rad": "test/math/hz2rad.md"
            },
            {
                "polyfun": "test/math/polyfun.md"
            },
            {
                "pol2car~": "test/math/pol2car~.md"
            },
            {
                "poltocar": "test/math/poltocar.md"
            },
            {
                "list.inc": "test/math/list.inc.md"
            },
            {
                "bitand~": "test/math/bitand~.md"
            },
            {
                "dbtoa": "test/math/dbtoa.md"
            },
            {
                "anal": "test/math/anal.md"
            },
            {
                "round~": "test/math/round~.md"
            },
            {
                "pulse": "test/math/pulse.md"
            },
            {
                "maximum~": "test/math/maximum~.md"
            },
            {
                "sum~": "test/math/sum~.md"
            },
            {
                "wrap2": "test/math/wrap2.md"
            },
            {
                "cusp~": "test/math/cusp~.md"
            },
            {
                "wrap2~": "test/math/wrap2~.md"
            },
            {
                "mov.avg": "test/math/mov.avg.md"
            },
            {
                "rand.u": "test/math/rand.u.md"
            },
            {
                "ms2samps": "test/math/ms2samps.md"
            },
            {
                "frameaccum~": "test/math/frameaccum~.md"
            },
            {
                "acosh~": "test/math/acosh~.md"
            },
            {
                "rint": "test/math/rint.md"
            },
            {
                "cartopol~": "test/math/cartopol~.md"
            },
            {
                "abs~": "test/math/abs~.md"
            },
            {
                "lin2db": "test/math/lin2db.md"
            },
            {
                "trunc": "test/math/trunc.md"
            },
            {
                "sgn~": "test/math/sgn~.md"
            },
            {
                "rad2hz": "test/math/rad2hz.md"
            },
            {
                "latoocarfian~": "test/math/latoocarfian~.md"
            },
            {
                "zigbinops": "test/math/zigbinops.md"
            },
            {
                "frac.mul": "test/math/frac.mul.md"
            },
            {
                "cyclone": "test/math/cyclone.md"
            },
            {
                "amean": "test/math/amean.md"
            },
            {
                "tLine2D": "test/math/tLine2D.md"
            },
            {
                "rgb2yuv": "test/math/rgb2yuv.md"
            },
            {
                "count~": "test/math/count~.md"
            },
            {
                "pong": "test/math/pong.md"
            },
            {
                "pol2sph": "test/math/pol2sph.md"
            },
            {
                "ratio2cents~": "test/math/ratio2cents~.md"
            },
            {
                "poltocar~": "test/math/poltocar~.md"
            },
            {
                "samps2ms": "test/math/samps2ms.md"
            },
            {
                "average~": "test/math/average~.md"
            },
            {
                "gbman~": "test/math/gbman~.md"
            },
            {
                "sinh": "test/math/sinh.md"
            },
            {
                "sph2pol": "test/math/sph2pol.md"
            },
            {
                "accum": "test/math/accum.md"
            },
            {
                "absgn~": "test/math/absgn~.md"
            },
            {
                "scalarmult": "test/math/scalarmult.md"
            },
            {
                "median": "test/math/median.md"
            },
            {
                "tavg~": "test/math/tavg~.md"
            },
            {
                "cross~": "test/math/cross~.md"
            },
            {
                "trough": "test/math/trough.md"
            },
            {
                "tSphere3D": "test/math/tSphere3D.md"
            },
            {
                "bangdiv": "test/math/bangdiv.md"
            },
            {
                "gain~": "test/math/gain~.md"
            },
            {
                "freq2midi": "test/math/freq2midi.md"
            },
            {
                "morph": "test/math/morph.md"
            },
            {
                "framedelta~": "test/math/framedelta~.md"
            },
            {
                "power~": "test/math/power~.md"
            },
            {
                "quad~": "test/math/quad~.md"
            },
            {
                "mstosamps~": "test/math/mstosamps~.md"
            },
            {
                "pol2car": "test/math/pol2car.md"
            },
            {
                "tanx~": "test/math/tanx~.md"
            },
            {
                "cents2ratio": "test/math/cents2ratio.md"
            },
            {
                "sinh~": "test/math/sinh~.md"
            },
            {
                "markov": "test/math/markov.md"
            },
            {
                "histogram": "test/math/histogram.md"
            },
            {
                "fold": "test/math/fold.md"
            },
            {
                "tabgen": "test/math/tabgen.md"
            },
            {
                "scale~": "test/math/scale~.md"
            },
            {
                "mag": "test/math/mag.md"
            },
            {
                "mix2~": "test/math/mix2~.md"
            },
            {
                "quantizer": "test/math/quantizer.md"
            },
            {
                "cents2ratio~": "test/math/cents2ratio~.md"
            },
            {
                "pi": "test/math/pi.md"
            },
            {
                "acos~": "test/math/acos~.md"
            },
            {
                "hex2dec": "test/math/hex2dec.md"
            },
            {
                "fbsine2~": "test/math/fbsine2~.md"
            },
            {
                "gcd": "test/math/gcd.md"
            },
            {
                "plusequals~": "test/math/plusequals~.md"
            },
            {
                "atan~": "test/math/atan~.md"
            },
            {
                "gmean": "test/math/gmean.md"
            },
            {
                "midi2freq": "test/math/midi2freq.md"
            },
            {
                "a.sum": "test/math/a.sum.md"
            },
            {
                "kink~": "test/math/kink~.md"
            },
            {
                "avg~": "test/math/avg~.md"
            },
            {
                "sum": "test/math/sum.md"
            },
            {
                "clip": "test/math/clip.md"
            },
            {
                "atanh~": "test/math/atanh~.md"
            },
            {
                "crackle~": "test/math/crackle~.md"
            },
            {
                "samps2ms~": "test/math/samps2ms~.md"
            },
            {
                "taint~": "test/math/taint~.md"
            },
            {
                "allpass~": "test/math/allpass~.md"
            },
            {
                "rescale~": "test/math/rescale~.md"
            },
            {
                "frac.add": "test/math/frac.add.md"
            },
            {
                "frac2dec": "test/math/frac2dec.md"
            },
            {
                "eqdiv": "test/math/eqdiv.md"
            },
            {
                "cosh": "test/math/cosh.md"
            },
            {
                "rescale": "test/math/rescale.md"
            },
            {
                "lcm": "test/math/lcm.md"
            },
            {
                "quantize~": "test/math/quantize~.md"
            },
            {
                "rint~": "test/math/rint~.md"
            },
            {
                "minimum": "test/math/minimum.md"
            },
            {
                "snapshot~": "test/math/snapshot~.md"
            },
            {
                "ms2samps~": "test/math/ms2samps~.md"
            },
            {
                "lin2db~": "test/math/lin2db~.md"
            },
            {
                "cart2pol": "test/math/cart2pol.md"
            },
            {
                "notedur2ratio": "test/math/notedur2ratio.md"
            },
            {
                "db2lin": "test/math/db2lin.md"
            },
            {
                "rand~": "test/math/rand~.md"
            },
            {
                "multiline~": "test/math/multiline~.md"
            },
            {
                "rad2deg": "test/math/rad2deg.md"
            },
            {
                "greaterthan~": "test/math/greaterthan~.md"
            },
            {
                "scale2cents": "test/math/scale2cents.md"
            },
            {
                "atanh": "test/math/atanh.md"
            },
            {
                "op~": "test/math/op~.md"
            },
            {
                "minmax~": "test/math/minmax~.md"
            },
            {
                "cart2sph": "test/math/cart2sph.md"
            },
            {
                "avg": "test/math/avg.md"
            },
            {
                "modulo~": "test/math/modulo~.md"
            },
            {
                "e": "test/math/e.md"
            },
            {
                "bitshift~": "test/math/bitshift~.md"
            },
            {
                "quantizer~": "objects/quantizer~.md"
            },
            {
                "acos": "objects/acos.md"
            },
            {
                "mavg": "objects/mavg.md"
            },
            {
                "allpass.2nd~": "objects/allpass.2nd~.md"
            },
            {
                "pix_threshold_bernsen": "objects/pix_threshold_bernsen.md"
            },
            {
                "ratio2cents": "objects/ratio2cents.md"
            },
            {
                "pdf~": "objects/pdf~.md"
            },
            {
                "trunc~": "objects/trunc~.md"
            },
            {
                "pow~": "objects/pow~.md"
            },
            {
                "car2pol~": "objects/car2pol~.md"
            },
            {
                "cents2frac": "objects/cents2frac.md"
            },
            {
                "coeff2pz": "objects/coeff2pz.md"
            },
            {
                "pz2coeff": "objects/pz2coeff.md"
            },
            {
                "prime": "objects/prime.md"
            },
            {
                "mean": "objects/mean.md"
            },
            {
                "cents2scale": "objects/cents2scale.md"
            },
            {
                "pmpd2d": "objects/pmpd2d.md"
            },
            {
                "pol2cart": "objects/pol2cart.md"
            },
            {
                "rdiv~": "objects/rdiv~.md"
            },
            {
                "ikeda~": "objects/ikeda~.md"
            },
            {
                "op": "objects/op.md"
            },
            {
                "gemlist_info": "objects/gemlist_info.md"
            },
            {
                "floor~": "objects/floor~.md"
            },
            {
                "autotune2": "objects/autotune2.md"
            },
            {
                "henon~": "objects/henon~.md"
            },
            {
                "wave~": "objects/wave~.md"
            },
            {
                "hsv2rgb": "objects/hsv2rgb.md"
            },
            {
                "asin~": "objects/asin~.md"
            },
            {
                "rdiv": "objects/rdiv.md"
            },
            {
                "pix_add": "objects/pix_add.md"
            },
            {
                "dbtoa~": "objects/dbtoa~.md"
            },
            {
                "add": "objects/add.md"
            },
            {
                "frac2cents": "objects/frac2cents.md"
            },
            {
                "maximum": "objects/maximum.md"
            },
            {
                "cosx~": "objects/cosx~.md"
            },
            {
                "bitxor~": "objects/bitxor~.md"
            },
            {
                "linedrive": "objects/linedrive.md"
            },
            {
                "round": "objects/round.md"
            },
            {
                "car2pol": "objects/car2pol.md"
            },
            {
                "bicoeff2": "objects/bicoeff2.md"
            },
            {
                "atodb~": "objects/atodb~.md"
            },
            {
                "sph2cart": "objects/sph2cart.md"
            },
            {
                "mag~": "objects/mag~.md"
            },
            {
                "ceil": "objects/ceil.md"
            },
            {
                "coordinates": "objects/coordinates.md"
            },
            {
                "deg2rad": "objects/deg2rad.md"
            },
            {
                "lincong~": "objects/lincong~.md"
            },
            {
                "atodb": "objects/atodb.md"
            },
            {
                "mov.rms~": "objects/mov.rms~.md"
            },
            {
                "mass3D": "objects/mass3D.md"
            },
            {
                "sampstoms~": "objects/sampstoms~.md"
            },
            {
                "peak": "objects/peak.md"
            },
            {
                "tanh~": "objects/tanh~.md"
            },
            {
                "asinh~": "objects/asinh~.md"
            },
            {
                "tCylinder3D": "objects/tCylinder3D.md"
            },
            {
                "rgb2hsv": "objects/rgb2hsv.md"
            },
            {
                "pong~": "objects/pong~.md"
            },
            {
                "polymetro": "objects/polymetro.md"
            },
            {
                "atan2~": "objects/atan2~.md"
            },
            {
                "asinh": "objects/asinh.md"
            },
            {
                "mass2D": "objects/mass2D.md"
            },
            {
                "fold~": "objects/fold~.md"
            },
            {
                "shaper~": "objects/shaper~.md"
            },
            {
                "factor": "objects/factor.md"
            },
            {
                "add~": "objects/add~.md"
            },
            {
                "phasewrap~": "objects/phasewrap~.md"
            },
            {
                "iCircle2D": "objects/iCircle2D.md"
            },
            {
                "delta~": "objects/delta~.md"
            },
            {
                "minmax": "objects/minmax.md"
            },
            {
                "function~": "objects/function~.md"
            },
            {
                "minimum~": "objects/minimum~.md"
            },
            {
                "bpm": "objects/bpm.md"
            },
            {
                "sin~": "objects/sin~.md"
            },
            {
                "scale2freq": "objects/scale2freq.md"
            },
            {
                "cartopol": "objects/cartopol.md"
            },
            {
                "rminus~": "objects/rminus~.md"
            },
            {
                "hann~": "objects/hann~.md"
            },
            {
                "cosh~": "objects/cosh~.md"
            },
            {
                "iAmbient2D": "objects/iAmbient2D.md"
            },
            {
                "rminus": "objects/rminus.md"
            },
            {
                "ceil~": "objects/ceil~.md"
            },
            {
                "euclid": "objects/euclid.md"
            },
            {
                "wrap": "objects/wrap.md"
            },
            {
                "tanh": "objects/tanh.md"
            },
            {
                "db2lin~": "objects/db2lin~.md"
            },
            {
                "dec2frac": "objects/dec2frac.md"
            },
            {
                "link": "objects/link.md"
            },
            {
                "rand.f": "objects/rand.f.md"
            },
            {
                "clip~": "objects/clip~.md"
            },
            {
                "interpolate": "objects/interpolate.md"
            },
            {
                "sinx~": "objects/sinx~.md"
            },
            {
                "asin": "objects/asin.md"
            },
            {
                "acosh": "objects/acosh.md"
            },
            {
                "floor": "objects/floor.md"
            },
            {
                "lorenz~": "objects/lorenz~.md"
            },
            {
                "spread~": "objects/spread~.md"
            },
            {
                "hz2rad": "objects/hz2rad.md"
            },
            {
                "polyfun": "objects/polyfun.md"
            },
            {
                "pol2car~": "objects/pol2car~.md"
            },
            {
                "poltocar": "objects/poltocar.md"
            },
            {
                "list.inc": "objects/list.inc.md"
            },
            {
                "bitand~": "objects/bitand~.md"
            },
            {
                "dbtoa": "objects/dbtoa.md"
            },
            {
                "anal": "objects/anal.md"
            },
            {
                "round~": "objects/round~.md"
            },
            {
                "pulse": "objects/pulse.md"
            },
            {
                "maximum~": "objects/maximum~.md"
            },
            {
                "sum~": "objects/sum~.md"
            },
            {
                "wrap2": "objects/wrap2.md"
            },
            {
                "cusp~": "objects/cusp~.md"
            },
            {
                "wrap2~": "objects/wrap2~.md"
            },
            {
                "mov.avg": "objects/mov.avg.md"
            },
            {
                "rand.u": "objects/rand.u.md"
            },
            {
                "ms2samps": "objects/ms2samps.md"
            },
            {
                "frameaccum~": "objects/frameaccum~.md"
            },
            {
                "acosh~": "objects/acosh~.md"
            },
            {
                "rint": "objects/rint.md"
            },
            {
                "cartopol~": "objects/cartopol~.md"
            },
            {
                "abs~": "objects/abs~.md"
            },
            {
                "lin2db": "objects/lin2db.md"
            },
            {
                "trunc": "objects/trunc.md"
            },
            {
                "sgn~": "objects/sgn~.md"
            },
            {
                "rad2hz": "objects/rad2hz.md"
            },
            {
                "latoocarfian~": "objects/latoocarfian~.md"
            },
            {
                "zigbinops": "objects/zigbinops.md"
            },
            {
                "frac.mul": "objects/frac.mul.md"
            },
            {
                "cyclone": "objects/cyclone.md"
            },
            {
                "amean": "objects/amean.md"
            },
            {
                "tLine2D": "objects/tLine2D.md"
            },
            {
                "rgb2yuv": "objects/rgb2yuv.md"
            },
            {
                "count~": "objects/count~.md"
            },
            {
                "pong": "objects/pong.md"
            },
            {
                "pol2sph": "objects/pol2sph.md"
            },
            {
                "ratio2cents~": "objects/ratio2cents~.md"
            },
            {
                "poltocar~": "objects/poltocar~.md"
            },
            {
                "samps2ms": "objects/samps2ms.md"
            },
            {
                "average~": "objects/average~.md"
            },
            {
                "gbman~": "objects/gbman~.md"
            },
            {
                "sinh": "objects/sinh.md"
            },
            {
                "sph2pol": "objects/sph2pol.md"
            },
            {
                "accum": "objects/accum.md"
            },
            {
                "absgn~": "objects/absgn~.md"
            },
            {
                "scalarmult": "objects/scalarmult.md"
            },
            {
                "median": "objects/median.md"
            },
            {
                "tavg~": "objects/tavg~.md"
            },
            {
                "cross~": "objects/cross~.md"
            },
            {
                "trough": "objects/trough.md"
            },
            {
                "tSphere3D": "objects/tSphere3D.md"
            },
            {
                "bangdiv": "objects/bangdiv.md"
            },
            {
                "gain~": "objects/gain~.md"
            },
            {
                "freq2midi": "objects/freq2midi.md"
            },
            {
                "morph": "objects/morph.md"
            },
            {
                "framedelta~": "objects/framedelta~.md"
            },
            {
                "power~": "objects/power~.md"
            },
            {
                "quad~": "objects/quad~.md"
            },
            {
                "mstosamps~": "objects/mstosamps~.md"
            },
            {
                "pol2car": "objects/pol2car.md"
            },
            {
                "tanx~": "objects/tanx~.md"
            },
            {
                "cents2ratio": "objects/cents2ratio.md"
            },
            {
                "sinh~": "objects/sinh~.md"
            },
            {
                "markov": "objects/markov.md"
            },
            {
                "histogram": "objects/histogram.md"
            },
            {
                "fold": "objects/fold.md"
            },
            {
                "tabgen": "objects/tabgen.md"
            },
            {
                "scale~": "objects/scale~.md"
            },
            {
                "mag": "objects/mag.md"
            },
            {
                "mix2~": "objects/mix2~.md"
            },
            {
                "quantizer": "objects/quantizer.md"
            },
            {
                "cents2ratio~": "objects/cents2ratio~.md"
            },
            {
                "pi": "objects/pi.md"
            },
            {
                "acos~": "objects/acos~.md"
            },
            {
                "hex2dec": "objects/hex2dec.md"
            },
            {
                "fbsine2~": "objects/fbsine2~.md"
            },
            {
                "gcd": "objects/gcd.md"
            },
            {
                "plusequals~": "objects/plusequals~.md"
            },
            {
                "atan~": "objects/atan~.md"
            },
            {
                "gmean": "objects/gmean.md"
            },
            {
                "midi2freq": "objects/midi2freq.md"
            },
            {
                "a.sum": "objects/a.sum.md"
            },
            {
                "kink~": "objects/kink~.md"
            },
            {
                "avg~": "objects/avg~.md"
            },
            {
                "sum": "objects/sum.md"
            },
            {
                "clip": "objects/clip.md"
            },
            {
                "atanh~": "objects/atanh~.md"
            },
            {
                "crackle~": "objects/crackle~.md"
            },
            {
                "samps2ms~": "objects/samps2ms~.md"
            },
            {
                "taint~": "objects/taint~.md"
            },
            {
                "allpass~": "objects/allpass~.md"
            },
            {
                "rescale~": "objects/rescale~.md"
            },
            {
                "frac.add": "objects/frac.add.md"
            },
            {
                "frac2dec": "objects/frac2dec.md"
            },
            {
                "eqdiv": "objects/eqdiv.md"
            },
            {
                "cosh": "objects/cosh.md"
            },
            {
                "rescale": "objects/rescale.md"
            },
            {
                "lcm": "objects/lcm.md"
            },
            {
                "quantize~": "objects/quantize~.md"
            },
            {
                "rint~": "objects/rint~.md"
            },
            {
                "minimum": "objects/minimum.md"
            },
            {
                "snapshot~": "objects/snapshot~.md"
            },
            {
                "ms2samps~": "objects/ms2samps~.md"
            },
            {
                "lin2db~": "objects/lin2db~.md"
            },
            {
                "cart2pol": "objects/cart2pol.md"
            },
            {
                "notedur2ratio": "objects/notedur2ratio.md"
            },
            {
                "db2lin": "objects/db2lin.md"
            },
            {
                "rand~": "objects/rand~.md"
            },
            {
                "multiline~": "objects/multiline~.md"
            },
            {
                "rad2deg": "objects/rad2deg.md"
            },
            {
                "greaterthan~": "objects/greaterthan~.md"
            },
            {
                "scale2cents": "objects/scale2cents.md"
            },
            {
                "atanh": "objects/atanh.md"
            },
            {
                "op~": "objects/op~.md"
            },
            {
                "minmax~": "objects/minmax~.md"
            },
            {
                "cart2sph": "objects/cart2sph.md"
            },
            {
                "avg": "objects/avg.md"
            },
            {
                "modulo~": "objects/modulo~.md"
            },
            {
                "e": "objects/e.md"
            },
            {
                "bitshift~": "objects/bitshift~.md"
            }
        ],
        "Routing": [
            "test/routing/index.md",
            {
                "out~": "test/routing/out~.md"
            },
            {
                "unmerge~": "test/routing/unmerge~.md"
            },
            {
                "grab": "test/routing/grab.md"
            },
            {
                "gemreceive": "test/routing/gemreceive.md"
            },
            {
                "chance~": "test/routing/chance~.md"
            },
            {
                "xgate~": "test/routing/xgate~.md"
            },
            {
                "pdlink": "test/routing/pdlink.md"
            },
            {
                "gate~": "test/routing/gate~.md"
            },
            {
                "out8~": "test/routing/out8~.md"
            },
            {
                "segregate": "test/routing/segregate.md"
            },
            {
                "xgate2~": "test/routing/xgate2~.md"
            },
            {
                "universal": "test/routing/universal.md"
            },
            {
                "gate": "test/routing/gate.md"
            },
            {
                "bondo": "test/routing/bondo.md"
            },
            {
                "funnel": "test/routing/funnel.md"
            },
            {
                "forward": "test/routing/forward.md"
            },
            {
                "multiplex~": "test/routing/multiplex~.md"
            },
            {
                "pan~": "test/routing/pan~.md"
            },
            {
                "demux": "test/routing/demux.md"
            },
            {
                "pan4~": "test/routing/pan4~.md"
            },
            {
                "delace~": "test/routing/delace~.md"
            },
            {
                "xgate.mc~": "test/routing/xgate.mc~.md"
            },
            {
                "relay": "test/routing/relay.md"
            },
            {
                "matrix~": "test/routing/matrix~.md"
            },
            {
                "unpack": "test/routing/unpack.md"
            },
            {
                "decode": "test/routing/decode.md"
            },
            {
                "spread.mc~": "test/routing/spread.mc~.md"
            },
            {
                "match~": "test/routing/match~.md"
            },
            {
                "pan2~": "test/routing/pan2~.md"
            },
            {
                "spray": "test/routing/spray.md"
            },
            {
                "demux~": "test/routing/demux~.md"
            },
            {
                "xfade~": "test/routing/xfade~.md"
            },
            {
                "routetype": "test/routing/routetype.md"
            },
            {
                "retrieve": "test/routing/retrieve.md"
            },
            {
                "route2": "test/routing/route2.md"
            },
            {
                "out4~": "test/routing/out4~.md"
            },
            {
                "nmess": "test/routing/nmess.md"
            },
            {
                "multiplex": "test/routing/multiplex.md"
            },
            {
                "switch": "test/routing/switch.md"
            },
            {
                "xgate2.mc~": "test/routing/xgate2.mc~.md"
            },
            {
                "routeall": "test/routing/routeall.md"
            },
            {
                "spread": "test/routing/spread.md"
            },
            {
                "mux": "test/routing/mux.md"
            },
            {
                "spread~": "test/routing/spread~.md"
            },
            {
                "mtx~": "test/routing/mtx~.md"
            },
            {
                "xselect2.mc~": "test/routing/xselect2.mc~.md"
            },
            {
                "next": "test/routing/next.md"
            },
            {
                "hot": "test/routing/hot.md"
            },
            {
                "receiver": "test/routing/receiver.md"
            },
            {
                "merge~": "test/routing/merge~.md"
            },
            {
                "dispatch": "test/routing/dispatch.md"
            },
            {
                "osc.route": "test/routing/osc.route.md"
            },
            {
                "pick~": "test/routing/pick~.md"
            },
            {
                "selector~": "test/routing/selector~.md"
            },
            {
                "cycle": "test/routing/cycle.md"
            },
            {
                "pan.mc~": "test/routing/pan.mc~.md"
            },
            {
                "split": "test/routing/split.md"
            },
            {
                "selector": "test/routing/selector.md"
            },
            {
                "message": "test/routing/message.md"
            },
            {
                "select~": "test/routing/select~.md"
            },
            {
                "mtx.mc~": "test/routing/mtx.mc~.md"
            },
            {
                "suspedal": "test/routing/suspedal.md"
            },
            {
                "mux~": "test/routing/mux~.md"
            },
            {
                "mix2~": "test/routing/mix2~.md"
            },
            {
                "send2~": "test/routing/send2~.md"
            },
            {
                "bucket": "test/routing/bucket.md"
            },
            {
                "rotate.mc~": "test/routing/rotate.mc~.md"
            },
            {
                "mono": "test/routing/mono.md"
            },
            {
                "voices": "test/routing/voices.md"
            },
            {
                "route~": "test/routing/route~.md"
            },
            {
                "demultiplex": "test/routing/demultiplex.md"
            },
            {
                "xselect.mc~": "test/routing/xselect.mc~.md"
            },
            {
                "xselect2~": "test/routing/xselect2~.md"
            },
            {
                "onebang": "test/routing/onebang.md"
            },
            {
                "mix4~": "test/routing/mix4~.md"
            },
            {
                "multireceive": "test/routing/multireceive.md"
            },
            {
                "demultiplex~": "test/routing/demultiplex~.md"
            },
            {
                "router": "test/routing/router.md"
            },
            {
                "out.mc~": "test/routing/out.mc~.md"
            },
            {
                "chance": "test/routing/chance.md"
            },
            {
                "slice~": "test/routing/slice~.md"
            },
            {
                "xselect~": "test/routing/xselect~.md"
            },
            {
                "sender": "test/routing/sender.md"
            },
            {
                "get~": "test/routing/get~.md"
            },
            {
                "out~": "objects/out~.md"
            },
            {
                "unmerge~": "objects/unmerge~.md"
            },
            {
                "grab": "objects/grab.md"
            },
            {
                "gemreceive": "objects/gemreceive.md"
            },
            {
                "chance~": "objects/chance~.md"
            },
            {
                "xgate~": "objects/xgate~.md"
            },
            {
                "pdlink": "objects/pdlink.md"
            },
            {
                "gate~": "objects/gate~.md"
            },
            {
                "out8~": "objects/out8~.md"
            },
            {
                "segregate": "objects/segregate.md"
            },
            {
                "xgate2~": "objects/xgate2~.md"
            },
            {
                "universal": "objects/universal.md"
            },
            {
                "gate": "objects/gate.md"
            },
            {
                "bondo": "objects/bondo.md"
            },
            {
                "funnel": "objects/funnel.md"
            },
            {
                "forward": "objects/forward.md"
            },
            {
                "multiplex~": "objects/multiplex~.md"
            },
            {
                "pan~": "objects/pan~.md"
            },
            {
                "demux": "objects/demux.md"
            },
            {
                "pan4~": "objects/pan4~.md"
            },
            {
                "delace~": "objects/delace~.md"
            },
            {
                "xgate.mc~": "objects/xgate.mc~.md"
            },
            {
                "relay": "objects/relay.md"
            },
            {
                "matrix~": "objects/matrix~.md"
            },
            {
                "unpack": "objects/unpack.md"
            },
            {
                "decode": "objects/decode.md"
            },
            {
                "spread.mc~": "objects/spread.mc~.md"
            },
            {
                "match~": "objects/match~.md"
            },
            {
                "pan2~": "objects/pan2~.md"
            },
            {
                "spray": "objects/spray.md"
            },
            {
                "demux~": "objects/demux~.md"
            },
            {
                "xfade~": "objects/xfade~.md"
            },
            {
                "routetype": "objects/routetype.md"
            },
            {
                "retrieve": "objects/retrieve.md"
            },
            {
                "route2": "objects/route2.md"
            },
            {
                "out4~": "objects/out4~.md"
            },
            {
                "nmess": "objects/nmess.md"
            },
            {
                "multiplex": "objects/multiplex.md"
            },
            {
                "switch": "objects/switch.md"
            },
            {
                "xgate2.mc~": "objects/xgate2.mc~.md"
            },
            {
                "routeall": "objects/routeall.md"
            },
            {
                "spread": "objects/spread.md"
            },
            {
                "mux": "objects/mux.md"
            },
            {
                "spread~": "objects/spread~.md"
            },
            {
                "mtx~": "objects/mtx~.md"
            },
            {
                "xselect2.mc~": "objects/xselect2.mc~.md"
            },
            {
                "next": "objects/next.md"
            },
            {
                "hot": "objects/hot.md"
            },
            {
                "receiver": "objects/receiver.md"
            },
            {
                "merge~": "objects/merge~.md"
            },
            {
                "dispatch": "objects/dispatch.md"
            },
            {
                "osc.route": "objects/osc.route.md"
            },
            {
                "pick~": "objects/pick~.md"
            },
            {
                "selector~": "objects/selector~.md"
            },
            {
                "cycle": "objects/cycle.md"
            },
            {
                "pan.mc~": "objects/pan.mc~.md"
            },
            {
                "split": "objects/split.md"
            },
            {
                "selector": "objects/selector.md"
            },
            {
                "message": "objects/message.md"
            },
            {
                "select~": "objects/select~.md"
            },
            {
                "mtx.mc~": "objects/mtx.mc~.md"
            },
            {
                "suspedal": "objects/suspedal.md"
            },
            {
                "mux~": "objects/mux~.md"
            },
            {
                "mix2~": "objects/mix2~.md"
            },
            {
                "send2~": "objects/send2~.md"
            },
            {
                "bucket": "objects/bucket.md"
            },
            {
                "rotate.mc~": "objects/rotate.mc~.md"
            },
            {
                "mono": "objects/mono.md"
            },
            {
                "voices": "objects/voices.md"
            },
            {
                "route~": "objects/route~.md"
            },
            {
                "demultiplex": "objects/demultiplex.md"
            },
            {
                "xselect.mc~": "objects/xselect.mc~.md"
            },
            {
                "xselect2~": "objects/xselect2~.md"
            },
            {
                "onebang": "objects/onebang.md"
            },
            {
                "mix4~": "objects/mix4~.md"
            },
            {
                "multireceive": "objects/multireceive.md"
            },
            {
                "demultiplex~": "objects/demultiplex~.md"
            },
            {
                "router": "objects/router.md"
            },
            {
                "out.mc~": "objects/out.mc~.md"
            },
            {
                "chance": "objects/chance.md"
            },
            {
                "slice~": "objects/slice~.md"
            },
            {
                "xselect~": "objects/xselect~.md"
            },
            {
                "sender": "objects/sender.md"
            },
            {
                "get~": "objects/get~.md"
            }
        ],
        "Envelopes": [
            "test/envelopes/index.md",
            {
                "grain.sampler~": "test/envelopes/grain.sampler~.md"
            },
            {
                "grain.live~": "test/envelopes/grain.live~.md"
            },
            {
                "envgen~": "test/envelopes/envgen~.md"
            },
            {
                "grain.synth~": "test/envelopes/grain.synth~.md"
            },
            {
                "autofade.mc~": "test/envelopes/autofade.mc~.md"
            },
            {
                "autofade2.mc~": "test/envelopes/autofade2.mc~.md"
            },
            {
                "autofade2~": "test/envelopes/autofade2~.md"
            },
            {
                "asr~": "test/envelopes/asr~.md"
            },
            {
                "curve~": "test/envelopes/curve~.md"
            },
            {
                "adsr~": "test/envelopes/adsr~.md"
            },
            {
                "function": "test/envelopes/function.md"
            },
            {
                "envelope~": "test/envelopes/envelope~.md"
            },
            {
                "ramp~": "test/envelopes/ramp~.md"
            },
            {
                "peak~": "test/envelopes/peak~.md"
            },
            {
                "decay~": "test/envelopes/decay~.md"
            },
            {
                "envrms~": "test/envelopes/envrms~.md"
            },
            {
                "autofade~": "test/envelopes/autofade~.md"
            },
            {
                "adsr.m~": "test/envelopes/adsr.m~.md"
            },
            {
                "line~": "test/envelopes/line~.md"
            },
            {
                "grain.sampler~": "objects/grain.sampler~.md"
            },
            {
                "grain.live~": "objects/grain.live~.md"
            },
            {
                "envgen~": "objects/envgen~.md"
            },
            {
                "grain.synth~": "objects/grain.synth~.md"
            },
            {
                "autofade.mc~": "objects/autofade.mc~.md"
            },
            {
                "autofade2.mc~": "objects/autofade2.mc~.md"
            },
            {
                "autofade2~": "objects/autofade2~.md"
            },
            {
                "asr~": "objects/asr~.md"
            },
            {
                "curve~": "objects/curve~.md"
            },
            {
                "adsr~": "objects/adsr~.md"
            },
            {
                "function": "objects/function.md"
            },
            {
                "envelope~": "objects/envelope~.md"
            },
            {
                "ramp~": "objects/ramp~.md"
            },
            {
                "peak~": "objects/peak~.md"
            },
            {
                "decay~": "objects/decay~.md"
            },
            {
                "envrms~": "objects/envrms~.md"
            },
            {
                "autofade~": "objects/autofade~.md"
            },
            {
                "adsr.m~": "objects/adsr.m~.md"
            },
            {
                "line~": "objects/line~.md"
            }
        ],
        "LFOs": [
            "test/lfos/index.md",
            {
                "vibrato~": "test/lfos/vibrato~.md"
            },
            {
                "lfo.m~": "test/lfos/lfo.m~.md"
            },
            {
                "lfo": "test/lfos/lfo.md"
            },
            {
                "vibrato~": "objects/vibrato~.md"
            },
            {
                "lfo.m~": "objects/lfo.m~.md"
            },
            {
                "lfo": "objects/lfo.md"
            }
        ],
        "Sequencers": [
            "test/sequencers/index.md",
            {
                "store": "test/sequencers/store.md"
            },
            {
                "rec": "test/sequencers/rec.md"
            },
            {
                "drum.seq": "test/sequencers/drum.seq.md"
            },
            {
                "score": "test/sequencers/score.md"
            },
            {
                "euclid": "test/sequencers/euclid.md"
            },
            {
                "seq8.m~": "test/sequencers/seq8.m~.md"
            },
            {
                "phaseseq~": "test/sequencers/phaseseq~.md"
            },
            {
                "seq": "test/sequencers/seq.md"
            },
            {
                "list.seq": "test/sequencers/list.seq.md"
            },
            {
                "counter": "test/sequencers/counter.md"
            },
            {
                "impseq~": "test/sequencers/impseq~.md"
            },
            {
                "mtr": "test/sequencers/mtr.md"
            },
            {
                "polymetro~": "test/sequencers/polymetro~.md"
            },
            {
                "sequencer": "test/sequencers/sequencer.md"
            },
            {
                "pattern": "test/sequencers/pattern.md"
            },
            {
                "score2": "test/sequencers/score2.md"
            },
            {
                "sequencer~": "test/sequencers/sequencer~.md"
            },
            {
                "store": "objects/store.md"
            },
            {
                "rec": "objects/rec.md"
            },
            {
                "drum.seq": "objects/drum.seq.md"
            },
            {
                "score": "objects/score.md"
            },
            {
                "euclid": "objects/euclid.md"
            },
            {
                "seq8.m~": "objects/seq8.m~.md"
            },
            {
                "phaseseq~": "objects/phaseseq~.md"
            },
            {
                "seq": "objects/seq.md"
            },
            {
                "list.seq": "objects/list.seq.md"
            },
            {
                "counter": "objects/counter.md"
            },
            {
                "impseq~": "objects/impseq~.md"
            },
            {
                "mtr": "objects/mtr.md"
            },
            {
                "polymetro~": "objects/polymetro~.md"
            },
            {
                "sequencer": "objects/sequencer.md"
            },
            {
                "pattern": "objects/pattern.md"
            },
            {
                "score2": "objects/score2.md"
            },
            {
                "sequencer~": "objects/sequencer~.md"
            }
        ],
        "MIDI": [
            "test/midi/index.md",
            {
                "keyboard": "test/midi/keyboard.md"
            },
            {
                "midi": "test/midi/midi.md"
            },
            {
                "borax": "test/midi/borax.md"
            },
            {
                "pgm.in": "test/midi/pgm.in.md"
            },
            {
                "retune": "test/midi/retune.md"
            },
            {
                "sfont.m~": "test/midi/sfont.m~.md"
            },
            {
                "pluck~": "test/midi/pluck~.md"
            },
            {
                "xbendin": "test/midi/xbendin.md"
            },
            {
                "touch.in": "test/midi/touch.in.md"
            },
            {
                "scales": "test/midi/scales.md"
            },
            {
                "midi.in": "test/midi/midi.in.md"
            },
            {
                "impulse~": "test/midi/impulse~.md"
            },
            {
                "midi.out": "test/midi/midi.out.md"
            },
            {
                "pgm.out": "test/midi/pgm.out.md"
            },
            {
                "bend.in": "test/midi/bend.in.md"
            },
            {
                "note.out": "test/midi/note.out.md"
            },
            {
                "sfont~": "test/midi/sfont~.md"
            },
            {
                "panic": "test/midi/panic.md"
            },
            {
                "sustain": "test/midi/sustain.md"
            },
            {
                "sysrt.out": "test/midi/sysrt.out.md"
            },
            {
                "xbendin2": "test/midi/xbendin2.md"
            },
            {
                "xbendout2": "test/midi/xbendout2.md"
            },
            {
                "mono~": "test/midi/mono~.md"
            },
            {
                "ctl.out": "test/midi/ctl.out.md"
            },
            {
                "xbendout": "test/midi/xbendout.md"
            },
            {
                "noteinfo": "test/midi/noteinfo.md"
            },
            {
                "bl.saw~": "test/midi/bl.saw~.md"
            },
            {
                "flush": "test/midi/flush.md"
            },
            {
                "midiparse": "test/midi/midiparse.md"
            },
            {
                "makenote2": "test/midi/makenote2.md"
            },
            {
                "seq8.m~": "test/midi/seq8.m~.md"
            },
            {
                "sendmidi": "test/midi/sendmidi.md"
            },
            {
                "gaussian~": "test/midi/gaussian~.md"
            },
            {
                "abs.pd~": "test/midi/abs.pd~.md"
            },
            {
                "seq": "test/midi/seq.md"
            },
            {
                "midiflush": "test/midi/midiflush.md"
            },
            {
                "voices~": "test/midi/voices~.md"
            },
            {
                "ptouch.out": "test/midi/ptouch.out.md"
            },
            {
                "midi.clock": "test/midi/midi.clock.md"
            },
            {
                "synth~": "test/midi/synth~.md"
            },
            {
                "xnotein": "test/midi/xnotein.md"
            },
            {
                "square~": "test/midi/square~.md"
            },
            {
                "ctl.in": "test/midi/ctl.in.md"
            },
            {
                "midiformat": "test/midi/midiformat.md"
            },
            {
                "plaits.m~": "test/midi/plaits.m~.md"
            },
            {
                "midi2note": "test/midi/midi2note.md"
            },
            {
                "rec2": "test/midi/rec2.md"
            },
            {
                "pluck.m~": "test/midi/pluck.m~.md"
            },
            {
                "note.in": "test/midi/note.in.md"
            },
            {
                "gain~": "test/midi/gain~.md"
            },
            {
                "freq2midi": "test/midi/freq2midi.md"
            },
            {
                "suspedal": "test/midi/suspedal.md"
            },
            {
                "mpe.in": "test/midi/mpe.in.md"
            },
            {
                "gain2~": "test/midi/gain2~.md"
            },
            {
                "sfz~": "test/midi/sfz~.md"
            },
            {
                "midi2freq": "test/midi/midi2freq.md"
            },
            {
                "vco.m~": "test/midi/vco.m~.md"
            },
            {
                "voices": "test/midi/voices.md"
            },
            {
                "touch.out": "test/midi/touch.out.md"
            },
            {
                "midi.learn": "test/midi/midi.learn.md"
            },
            {
                "ptouch.in": "test/midi/ptouch.in.md"
            },
            {
                "sysrt.in": "test/midi/sysrt.in.md"
            },
            {
                "keymap": "test/midi/keymap.md"
            },
            {
                "xnoteout": "test/midi/xnoteout.md"
            },
            {
                "note2midi": "test/midi/note2midi.md"
            },
            {
                "bend.out": "test/midi/bend.out.md"
            },
            {
                "autotune": "test/midi/autotune.md"
            },
            {
                "keyboard": "objects/keyboard.md"
            },
            {
                "midi": "objects/midi.md"
            },
            {
                "borax": "objects/borax.md"
            },
            {
                "pgm.in": "objects/pgm.in.md"
            },
            {
                "retune": "objects/retune.md"
            },
            {
                "sfont.m~": "objects/sfont.m~.md"
            },
            {
                "pluck~": "objects/pluck~.md"
            },
            {
                "xbendin": "objects/xbendin.md"
            },
            {
                "touch.in": "objects/touch.in.md"
            },
            {
                "scales": "objects/scales.md"
            },
            {
                "midi.in": "objects/midi.in.md"
            },
            {
                "impulse~": "objects/impulse~.md"
            },
            {
                "midi.out": "objects/midi.out.md"
            },
            {
                "pgm.out": "objects/pgm.out.md"
            },
            {
                "bend.in": "objects/bend.in.md"
            },
            {
                "note.out": "objects/note.out.md"
            },
            {
                "sfont~": "objects/sfont~.md"
            },
            {
                "panic": "objects/panic.md"
            },
            {
                "sustain": "objects/sustain.md"
            },
            {
                "sysrt.out": "objects/sysrt.out.md"
            },
            {
                "xbendin2": "objects/xbendin2.md"
            },
            {
                "xbendout2": "objects/xbendout2.md"
            },
            {
                "mono~": "objects/mono~.md"
            },
            {
                "ctl.out": "objects/ctl.out.md"
            },
            {
                "xbendout": "objects/xbendout.md"
            },
            {
                "noteinfo": "objects/noteinfo.md"
            },
            {
                "bl.saw~": "objects/bl.saw~.md"
            },
            {
                "flush": "objects/flush.md"
            },
            {
                "midiparse": "objects/midiparse.md"
            },
            {
                "makenote2": "objects/makenote2.md"
            },
            {
                "seq8.m~": "objects/seq8.m~.md"
            },
            {
                "sendmidi": "objects/sendmidi.md"
            },
            {
                "gaussian~": "objects/gaussian~.md"
            },
            {
                "abs.pd~": "objects/abs.pd~.md"
            },
            {
                "seq": "objects/seq.md"
            },
            {
                "midiflush": "objects/midiflush.md"
            },
            {
                "voices~": "objects/voices~.md"
            },
            {
                "ptouch.out": "objects/ptouch.out.md"
            },
            {
                "midi.clock": "objects/midi.clock.md"
            },
            {
                "synth~": "objects/synth~.md"
            },
            {
                "xnotein": "objects/xnotein.md"
            },
            {
                "square~": "objects/square~.md"
            },
            {
                "ctl.in": "objects/ctl.in.md"
            },
            {
                "midiformat": "objects/midiformat.md"
            },
            {
                "plaits.m~": "objects/plaits.m~.md"
            },
            {
                "midi2note": "objects/midi2note.md"
            },
            {
                "rec2": "objects/rec2.md"
            },
            {
                "pluck.m~": "objects/pluck.m~.md"
            },
            {
                "note.in": "objects/note.in.md"
            },
            {
                "gain~": "objects/gain~.md"
            },
            {
                "freq2midi": "objects/freq2midi.md"
            },
            {
                "suspedal": "objects/suspedal.md"
            },
            {
                "mpe.in": "objects/mpe.in.md"
            },
            {
                "gain2~": "objects/gain2~.md"
            },
            {
                "sfz~": "objects/sfz~.md"
            },
            {
                "midi2freq": "objects/midi2freq.md"
            },
            {
                "vco.m~": "objects/vco.m~.md"
            },
            {
                "voices": "objects/voices.md"
            },
            {
                "touch.out": "objects/touch.out.md"
            },
            {
                "midi.learn": "objects/midi.learn.md"
            },
            {
                "ptouch.in": "objects/ptouch.in.md"
            },
            {
                "sysrt.in": "objects/sysrt.in.md"
            },
            {
                "keymap": "objects/keymap.md"
            },
            {
                "xnoteout": "objects/xnoteout.md"
            },
            {
                "note2midi": "objects/note2midi.md"
            },
            {
                "bend.out": "objects/bend.out.md"
            },
            {
                "autotune": "objects/autotune.md"
            }
        ]
    },
    "Effects": {
        "Reverb": [
            "test/reverb/index.md",
            {
                "plate.rev~": "test/reverb/plate.rev~.md"
            },
            {
                "free.rev~": "test/reverb/free.rev~.md"
            },
            {
                "fdn.rev~": "test/reverb/fdn.rev~.md"
            },
            {
                "mono.rev~": "test/reverb/mono.rev~.md"
            },
            {
                "stereo.rev~": "test/reverb/stereo.rev~.md"
            },
            {
                "fbdelay~": "test/reverb/fbdelay~.md"
            },
            {
                "echo.rev~": "test/reverb/echo.rev~.md"
            },
            {
                "convolve~": "test/reverb/convolve~.md"
            },
            {
                "giga.rev~": "test/reverb/giga.rev~.md"
            },
            {
                "plate.rev.m~": "test/reverb/plate.rev.m~.md"
            },
            {
                "comb.rev~": "test/reverb/comb.rev~.md"
            },
            {
                "allpass.rev~": "test/reverb/allpass.rev~.md"
            },
            {
                "comb.filt~": "test/reverb/comb.filt~.md"
            },
            {
                "conv~": "test/reverb/conv~.md"
            },
            {
                "plate.rev~": "objects/plate.rev~.md"
            },
            {
                "free.rev~": "objects/free.rev~.md"
            },
            {
                "fdn.rev~": "objects/fdn.rev~.md"
            },
            {
                "mono.rev~": "objects/mono.rev~.md"
            },
            {
                "stereo.rev~": "objects/stereo.rev~.md"
            },
            {
                "fbdelay~": "objects/fbdelay~.md"
            },
            {
                "echo.rev~": "objects/echo.rev~.md"
            },
            {
                "convolve~": "objects/convolve~.md"
            },
            {
                "giga.rev~": "objects/giga.rev~.md"
            },
            {
                "plate.rev.m~": "objects/plate.rev.m~.md"
            },
            {
                "comb.rev~": "objects/comb.rev~.md"
            },
            {
                "allpass.rev~": "objects/allpass.rev~.md"
            },
            {
                "comb.filt~": "objects/comb.filt~.md"
            },
            {
                "conv~": "objects/conv~.md"
            }
        ],
        "Delay": [
            "test/delay/index.md",
            {
                "pix_delay": "test/delay/pix_delay.md"
            },
            {
                "fbdelay~": "test/delay/fbdelay~.md"
            },
            {
                "pipe2": "test/delay/pipe2.md"
            },
            {
                "echo.rev~": "test/delay/echo.rev~.md"
            },
            {
                "trig.delay2~": "test/delay/trig.delay2~.md"
            },
            {
                "del~": "test/delay/del~.md"
            },
            {
                "ping.pong~": "test/delay/ping.pong~.md"
            },
            {
                "z~": "test/delay/z~.md"
            },
            {
                "teeth~": "test/delay/teeth~.md"
            },
            {
                "filterdelay~": "test/delay/filterdelay~.md"
            },
            {
                "delay.m~": "test/delay/delay.m~.md"
            },
            {
                "gatehold~": "test/delay/gatehold~.md"
            },
            {
                "revdelay~": "test/delay/revdelay~.md"
            },
            {
                "ffdelay~": "test/delay/ffdelay~.md"
            },
            {
                "comb~": "test/delay/comb~.md"
            },
            {
                "comb.rev~": "test/delay/comb.rev~.md"
            },
            {
                "gatedelay": "test/delay/gatedelay.md"
            },
            {
                "allpass~": "test/delay/allpass~.md"
            },
            {
                "allpass.rev~": "test/delay/allpass.rev~.md"
            },
            {
                "comb.filt~": "test/delay/comb.filt~.md"
            },
            {
                "delay~": "test/delay/delay~.md"
            },
            {
                "pix_delay": "objects/pix_delay.md"
            },
            {
                "fbdelay~": "objects/fbdelay~.md"
            },
            {
                "pipe2": "objects/pipe2.md"
            },
            {
                "echo.rev~": "objects/echo.rev~.md"
            },
            {
                "trig.delay2~": "objects/trig.delay2~.md"
            },
            {
                "del~": "objects/del~.md"
            },
            {
                "ping.pong~": "objects/ping.pong~.md"
            },
            {
                "z~": "objects/z~.md"
            },
            {
                "teeth~": "objects/teeth~.md"
            },
            {
                "filterdelay~": "objects/filterdelay~.md"
            },
            {
                "delay.m~": "objects/delay.m~.md"
            },
            {
                "gatehold~": "objects/gatehold~.md"
            },
            {
                "revdelay~": "objects/revdelay~.md"
            },
            {
                "ffdelay~": "objects/ffdelay~.md"
            },
            {
                "comb~": "objects/comb~.md"
            },
            {
                "comb.rev~": "objects/comb.rev~.md"
            },
            {
                "gatedelay": "objects/gatedelay.md"
            },
            {
                "allpass~": "objects/allpass~.md"
            },
            {
                "allpass.rev~": "objects/allpass.rev~.md"
            },
            {
                "comb.filt~": "objects/comb.filt~.md"
            },
            {
                "delay~": "objects/delay~.md"
            }
        ],
        "Distortion": [
            "test/distortion/index.md",
            {
                "drive.m~": "test/distortion/drive.m~.md"
            },
            {
                "crusher.m~": "test/distortion/crusher.m~.md"
            },
            {
                "digidistort": "test/distortion/digidistort.md"
            },
            {
                "lookup~": "test/distortion/lookup~.md"
            },
            {
                "rubber": "test/distortion/rubber.md"
            },
            {
                "tanh~": "test/distortion/tanh~.md"
            },
            {
                "fold~": "test/distortion/fold~.md"
            },
            {
                "shaper~": "test/distortion/shaper~.md"
            },
            {
                "drive~": "test/distortion/drive~.md"
            },
            {
                "circuit~": "test/distortion/circuit~.md"
            },
            {
                "crusher~": "test/distortion/crusher~.md"
            },
            {
                "overdrive~": "test/distortion/overdrive~.md"
            },
            {
                "kink~": "test/distortion/kink~.md"
            },
            {
                "rm~": "test/distortion/rm~.md"
            },
            {
                "drive.m~": "objects/drive.m~.md"
            },
            {
                "crusher.m~": "objects/crusher.m~.md"
            },
            {
                "digidistort": "objects/digidistort.md"
            },
            {
                "lookup~": "objects/lookup~.md"
            },
            {
                "rubber": "objects/rubber.md"
            },
            {
                "tanh~": "objects/tanh~.md"
            },
            {
                "fold~": "objects/fold~.md"
            },
            {
                "shaper~": "objects/shaper~.md"
            },
            {
                "drive~": "objects/drive~.md"
            },
            {
                "circuit~": "objects/circuit~.md"
            },
            {
                "crusher~": "objects/crusher~.md"
            },
            {
                "overdrive~": "objects/overdrive~.md"
            },
            {
                "kink~": "objects/kink~.md"
            },
            {
                "rm~": "objects/rm~.md"
            }
        ],
        "Chorus/Flanger/Phaser": [
            "test/chorus_flanger_phaser/index.md",
            {
                "chorus.m~": "test/chorus_flanger_phaser/chorus.m~.md"
            },
            {
                "chorus~": "test/chorus_flanger_phaser/chorus~.md"
            },
            {
                "flanger.m~": "test/chorus_flanger_phaser/flanger.m~.md"
            },
            {
                "flanger~": "test/chorus_flanger_phaser/flanger~.md"
            },
            {
                "phaser~": "test/chorus_flanger_phaser/phaser~.md"
            },
            {
                "circuit~": "test/chorus_flanger_phaser/circuit~.md"
            },
            {
                "phaser.m~": "test/chorus_flanger_phaser/phaser.m~.md"
            },
            {
                "delay~": "test/chorus_flanger_phaser/delay~.md"
            },
            {
                "chorus.m~": "objects/chorus.m~.md"
            },
            {
                "chorus~": "objects/chorus~.md"
            },
            {
                "flanger.m~": "objects/flanger.m~.md"
            },
            {
                "flanger~": "objects/flanger~.md"
            },
            {
                "phaser~": "objects/phaser~.md"
            },
            {
                "circuit~": "objects/circuit~.md"
            },
            {
                "phaser.m~": "objects/phaser.m~.md"
            },
            {
                "delay~": "objects/delay~.md"
            }
        ],
        "Filters": [
            "test/filters/index.md",
            {
                "biquads~": "test/filters/biquads~.md"
            },
            {
                "mavg": "test/filters/mavg.md"
            },
            {
                "allpass.2nd~": "test/filters/allpass.2nd~.md"
            },
            {
                "pz2coeff": "test/filters/pz2coeff.md"
            },
            {
                "pluck~": "test/filters/pluck~.md"
            },
            {
                "resonant~": "test/filters/resonant~.md"
            },
            {
                "resonbank~": "test/filters/resonbank~.md"
            },
            {
                "bicoeff2": "test/filters/bicoeff2.md"
            },
            {
                "pix_convolve": "test/filters/pix_convolve.md"
            },
            {
                "bandstop~": "test/filters/bandstop~.md"
            },
            {
                "mindwarp~": "test/filters/mindwarp~.md"
            },
            {
                "lop.bw~": "test/filters/lop.bw~.md"
            },
            {
                "lores~": "test/filters/lores~.md"
            },
            {
                "highshelf~": "test/filters/highshelf~.md"
            },
            {
                "resonator~": "test/filters/resonator~.md"
            },
            {
                "phaseshift~": "test/filters/phaseshift~.md"
            },
            {
                "lag~": "test/filters/lag~.md"
            },
            {
                "reson~": "test/filters/reson~.md"
            },
            {
                "hip.bw~": "test/filters/hip.bw~.md"
            },
            {
                "xsyn~": "test/filters/xsyn~.md"
            },
            {
                "circuit~": "test/filters/circuit~.md"
            },
            {
                "slide~": "test/filters/slide~.md"
            },
            {
                "resonator2~": "test/filters/resonator2~.md"
            },
            {
                "teeth~": "test/filters/teeth~.md"
            },
            {
                "burrow~": "test/filters/burrow~.md"
            },
            {
                "glide2~": "test/filters/glide2~.md"
            },
            {
                "allpass.filt~": "test/filters/allpass.filt~.md"
            },
            {
                "highpass~": "test/filters/highpass~.md"
            },
            {
                "filterdelay~": "test/filters/filterdelay~.md"
            },
            {
                "plaits.m~": "test/filters/plaits.m~.md"
            },
            {
                "drown~": "test/filters/drown~.md"
            },
            {
                "brickwall~": "test/filters/brickwall~.md"
            },
            {
                "crossover~": "test/filters/crossover~.md"
            },
            {
                "bicoeff": "test/filters/bicoeff.md"
            },
            {
                "multyq~": "test/filters/multyq~.md"
            },
            {
                "bandpass~": "test/filters/bandpass~.md"
            },
            {
                "lowshelf~": "test/filters/lowshelf~.md"
            },
            {
                "svfilter~": "test/filters/svfilter~.md"
            },
            {
                "onepole~": "test/filters/onepole~.md"
            },
            {
                "resonbank2~": "test/filters/resonbank2~.md"
            },
            {
                "bpbank~": "test/filters/bpbank~.md"
            },
            {
                "dentist~": "test/filters/dentist~.md"
            },
            {
                "comb~": "test/filters/comb~.md"
            },
            {
                "comb.rev~": "test/filters/comb.rev~.md"
            },
            {
                "decay~": "test/filters/decay~.md"
            },
            {
                "svf~": "test/filters/svf~.md"
            },
            {
                "vcf.m~": "test/filters/vcf.m~.md"
            },
            {
                "eq~": "test/filters/eq~.md"
            },
            {
                "buffir~": "test/filters/buffir~.md"
            },
            {
                "pix_tIIR": "test/filters/pix_tIIR.md"
            },
            {
                "allpass~": "test/filters/allpass~.md"
            },
            {
                "mov.avg~": "test/filters/mov.avg~.md"
            },
            {
                "lowpass~": "test/filters/lowpass~.md"
            },
            {
                "zbiplot": "test/filters/zbiplot.md"
            },
            {
                "lop2~": "test/filters/lop2~.md"
            },
            {
                "allpass.rev~": "test/filters/allpass.rev~.md"
            },
            {
                "comb.filt~": "test/filters/comb.filt~.md"
            },
            {
                "median~": "test/filters/median~.md"
            },
            {
                "biquads~": "objects/biquads~.md"
            },
            {
                "mavg": "objects/mavg.md"
            },
            {
                "allpass.2nd~": "objects/allpass.2nd~.md"
            },
            {
                "pz2coeff": "objects/pz2coeff.md"
            },
            {
                "pluck~": "objects/pluck~.md"
            },
            {
                "resonant~": "objects/resonant~.md"
            },
            {
                "resonbank~": "objects/resonbank~.md"
            },
            {
                "bicoeff2": "objects/bicoeff2.md"
            },
            {
                "pix_convolve": "objects/pix_convolve.md"
            },
            {
                "bandstop~": "objects/bandstop~.md"
            },
            {
                "mindwarp~": "objects/mindwarp~.md"
            },
            {
                "lop.bw~": "objects/lop.bw~.md"
            },
            {
                "lores~": "objects/lores~.md"
            },
            {
                "highshelf~": "objects/highshelf~.md"
            },
            {
                "resonator~": "objects/resonator~.md"
            },
            {
                "phaseshift~": "objects/phaseshift~.md"
            },
            {
                "lag~": "objects/lag~.md"
            },
            {
                "reson~": "objects/reson~.md"
            },
            {
                "hip.bw~": "objects/hip.bw~.md"
            },
            {
                "xsyn~": "objects/xsyn~.md"
            },
            {
                "circuit~": "objects/circuit~.md"
            },
            {
                "slide~": "objects/slide~.md"
            },
            {
                "resonator2~": "objects/resonator2~.md"
            },
            {
                "teeth~": "objects/teeth~.md"
            },
            {
                "burrow~": "objects/burrow~.md"
            },
            {
                "glide2~": "objects/glide2~.md"
            },
            {
                "allpass.filt~": "objects/allpass.filt~.md"
            },
            {
                "highpass~": "objects/highpass~.md"
            },
            {
                "filterdelay~": "objects/filterdelay~.md"
            },
            {
                "plaits.m~": "objects/plaits.m~.md"
            },
            {
                "drown~": "objects/drown~.md"
            },
            {
                "brickwall~": "objects/brickwall~.md"
            },
            {
                "crossover~": "objects/crossover~.md"
            },
            {
                "bicoeff": "objects/bicoeff.md"
            },
            {
                "multyq~": "objects/multyq~.md"
            },
            {
                "bandpass~": "objects/bandpass~.md"
            },
            {
                "lowshelf~": "objects/lowshelf~.md"
            },
            {
                "svfilter~": "objects/svfilter~.md"
            },
            {
                "onepole~": "objects/onepole~.md"
            },
            {
                "resonbank2~": "objects/resonbank2~.md"
            },
            {
                "bpbank~": "objects/bpbank~.md"
            },
            {
                "dentist~": "objects/dentist~.md"
            },
            {
                "comb~": "objects/comb~.md"
            },
            {
                "comb.rev~": "objects/comb.rev~.md"
            },
            {
                "decay~": "objects/decay~.md"
            },
            {
                "svf~": "objects/svf~.md"
            },
            {
                "vcf.m~": "objects/vcf.m~.md"
            },
            {
                "eq~": "objects/eq~.md"
            },
            {
                "buffir~": "objects/buffir~.md"
            },
            {
                "pix_tIIR": "objects/pix_tIIR.md"
            },
            {
                "allpass~": "objects/allpass~.md"
            },
            {
                "mov.avg~": "objects/mov.avg~.md"
            },
            {
                "lowpass~": "objects/lowpass~.md"
            },
            {
                "zbiplot": "objects/zbiplot.md"
            },
            {
                "lop2~": "objects/lop2~.md"
            },
            {
                "allpass.rev~": "objects/allpass.rev~.md"
            },
            {
                "comb.filt~": "objects/comb.filt~.md"
            },
            {
                "median~": "objects/median~.md"
            }
        ],
        "Dynamics": [
            "test/dynamics/index.md",
            {
                "expand~": "test/dynamics/expand~.md"
            },
            {
                "pvcompand~": "test/dynamics/pvcompand~.md"
            },
            {
                "duck~": "test/dynamics/duck~.md"
            },
            {
                "autofade2~": "test/dynamics/autofade2~.md"
            },
            {
                "dbgain~": "test/dynamics/dbgain~.md"
            },
            {
                "drown~": "test/dynamics/drown~.md"
            },
            {
                "norm~": "test/dynamics/norm~.md"
            },
            {
                "level~": "test/dynamics/level~.md"
            },
            {
                "compress~": "test/dynamics/compress~.md"
            },
            {
                "limiter~": "test/dynamics/limiter~.md"
            },
            {
                "noisegate~": "test/dynamics/noisegate~.md"
            },
            {
                "autofade~": "test/dynamics/autofade~.md"
            },
            {
                "peakamp~": "test/dynamics/peakamp~.md"
            },
            {
                "expand~": "objects/expand~.md"
            },
            {
                "pvcompand~": "objects/pvcompand~.md"
            },
            {
                "duck~": "objects/duck~.md"
            },
            {
                "autofade2~": "objects/autofade2~.md"
            },
            {
                "dbgain~": "objects/dbgain~.md"
            },
            {
                "drown~": "objects/drown~.md"
            },
            {
                "norm~": "objects/norm~.md"
            },
            {
                "level~": "objects/level~.md"
            },
            {
                "compress~": "objects/compress~.md"
            },
            {
                "limiter~": "objects/limiter~.md"
            },
            {
                "noisegate~": "objects/noisegate~.md"
            },
            {
                "autofade~": "objects/autofade~.md"
            },
            {
                "peakamp~": "objects/peakamp~.md"
            }
        ]
    },
    "MIR / Analysis": {
        "Partial Tracking": [
            "test/partial_tracking/index.md",
            {
                "pvoc.freeze~": "test/partial_tracking/pvoc.freeze~.md"
            },
            {
                "pvwarpb~": "test/partial_tracking/pvwarpb~.md"
            },
            {
                "pvoc~": "test/partial_tracking/pvoc~.md"
            },
            {
                "resent~": "test/partial_tracking/resent~.md"
            },
            {
                "reanimator~": "test/partial_tracking/reanimator~.md"
            },
            {
                "pileup~": "test/partial_tracking/pileup~.md"
            },
            {
                "framedelta~": "test/partial_tracking/framedelta~.md"
            },
            {
                "pvoc.player~": "test/partial_tracking/pvoc.player~.md"
            },
            {
                "pvoc.live~": "test/partial_tracking/pvoc.live~.md"
            },
            {
                "pvharm~": "test/partial_tracking/pvharm~.md"
            },
            {
                "morph~": "test/partial_tracking/morph~.md"
            },
            {
                "freeze~": "test/partial_tracking/freeze~.md"
            },
            {
                "residency~": "test/partial_tracking/residency~.md"
            },
            {
                "pvoc.freeze~": "objects/pvoc.freeze~.md"
            },
            {
                "pvwarpb~": "objects/pvwarpb~.md"
            },
            {
                "pvoc~": "objects/pvoc~.md"
            },
            {
                "resent~": "objects/resent~.md"
            },
            {
                "reanimator~": "objects/reanimator~.md"
            },
            {
                "pileup~": "objects/pileup~.md"
            },
            {
                "framedelta~": "objects/framedelta~.md"
            },
            {
                "pvoc.player~": "objects/pvoc.player~.md"
            },
            {
                "pvoc.live~": "objects/pvoc.live~.md"
            },
            {
                "pvharm~": "objects/pvharm~.md"
            },
            {
                "morph~": "objects/morph~.md"
            },
            {
                "freeze~": "objects/freeze~.md"
            },
            {
                "residency~": "objects/residency~.md"
            }
        ],
        "Descriptors": [
            "test/descriptors/index.md",
            {
                "peakSample": "test/descriptors/peakSample.md"
            },
            {
                "phaseSpec": "test/descriptors/phaseSpec.md"
            },
            {
                "barkSpecSlope~": "test/descriptors/barkSpecSlope~.md"
            },
            {
                "spectrograph~": "test/descriptors/spectrograph~.md"
            },
            {
                "tID_std": "test/descriptors/tID_std.md"
            },
            {
                "phaseSpec~": "test/descriptors/phaseSpec~.md"
            },
            {
                "barkSpecSlope": "test/descriptors/barkSpecSlope.md"
            },
            {
                "featureDelta": "test/descriptors/featureDelta.md"
            },
            {
                "barkSpecIrregularity": "test/descriptors/barkSpecIrregularity.md"
            },
            {
                "pix_multiblob": "test/descriptors/pix_multiblob.md"
            },
            {
                "range~": "test/descriptors/range~.md"
            },
            {
                "barkSpecBrightness": "test/descriptors/barkSpecBrightness.md"
            },
            {
                "pix_blobtracker": "test/descriptors/pix_blobtracker.md"
            },
            {
                "attackTime~": "test/descriptors/attackTime~.md"
            },
            {
                "chroma~": "test/descriptors/chroma~.md"
            },
            {
                "specSlope": "test/descriptors/specSlope.md"
            },
            {
                "cepstrumPitch~": "test/descriptors/cepstrumPitch~.md"
            },
            {
                "dfreq~": "test/descriptors/dfreq~.md"
            },
            {
                "attackTime": "test/descriptors/attackTime.md"
            },
            {
                "minSampleDelta": "test/descriptors/minSampleDelta.md"
            },
            {
                "tID_fft": "test/descriptors/tID_fft.md"
            },
            {
                "maxSampleDelta~": "test/descriptors/maxSampleDelta~.md"
            },
            {
                "barkSpecCentroid": "test/descriptors/barkSpecCentroid.md"
            },
            {
                "waveSlope~": "test/descriptors/waveSlope~.md"
            },
            {
                "specSpread": "test/descriptors/specSpread.md"
            },
            {
                "specCentroid": "test/descriptors/specCentroid.md"
            },
            {
                "zeroCrossing": "test/descriptors/zeroCrossing.md"
            },
            {
                "autoCorrPitch": "test/descriptors/autoCorrPitch.md"
            },
            {
                "nyquist~": "test/descriptors/nyquist~.md"
            },
            {
                "mov.rms~": "test/descriptors/mov.rms~.md"
            },
            {
                "harmonicRatio~": "test/descriptors/harmonicRatio~.md"
            },
            {
                "pvoc~": "test/descriptors/pvoc~.md"
            },
            {
                "waveNoise~": "test/descriptors/waveNoise~.md"
            },
            {
                "specBrightness~": "test/descriptors/specBrightness~.md"
            },
            {
                "melSpec~": "test/descriptors/melSpec~.md"
            },
            {
                "barkSpecBrightness~": "test/descriptors/barkSpecBrightness~.md"
            },
            {
                "minSampleDelta~": "test/descriptors/minSampleDelta~.md"
            },
            {
                "zerocross~": "test/descriptors/zerocross~.md"
            },
            {
                "cepstrumPitch": "test/descriptors/cepstrumPitch.md"
            },
            {
                "morphine~": "test/descriptors/morphine~.md"
            },
            {
                "dct~": "test/descriptors/dct~.md"
            },
            {
                "maxpeak~": "test/descriptors/maxpeak~.md"
            },
            {
                "binWrangler": "test/descriptors/binWrangler.md"
            },
            {
                "maxSample~": "test/descriptors/maxSample~.md"
            },
            {
                "meter8~": "test/descriptors/meter8~.md"
            },
            {
                "specIrregularity": "test/descriptors/specIrregularity.md"
            },
            {
                "specSlope~": "test/descriptors/specSlope~.md"
            },
            {
                "peakSample~": "test/descriptors/peakSample~.md"
            },
            {
                "specCentroid~": "test/descriptors/specCentroid~.md"
            },
            {
                "hann~": "test/descriptors/hann~.md"
            },
            {
                "specFlux~": "test/descriptors/specFlux~.md"
            },
            {
                "bfcc~": "test/descriptors/bfcc~.md"
            },
            {
                "specFlatness": "test/descriptors/specFlatness.md"
            },
            {
                "mfcc": "test/descriptors/mfcc.md"
            },
            {
                "cepstrum~": "test/descriptors/cepstrum~.md"
            },
            {
                "mfcc~": "test/descriptors/mfcc~.md"
            },
            {
                "waveSlope": "test/descriptors/waveSlope.md"
            },
            {
                "specRolloff": "test/descriptors/specRolloff.md"
            },
            {
                "energy": "test/descriptors/energy.md"
            },
            {
                "timbreID": "test/descriptors/timbreID.md"
            },
            {
                "waveNoise": "test/descriptors/waveNoise.md"
            },
            {
                "barkSpecKurtosis": "test/descriptors/barkSpecKurtosis.md"
            },
            {
                "barkSpecFlux": "test/descriptors/barkSpecFlux.md"
            },
            {
                "barkSpecFlatness~": "test/descriptors/barkSpecFlatness~.md"
            },
            {
                "specHarmonicity~": "test/descriptors/specHarmonicity~.md"
            },
            {
                "specFlatness~": "test/descriptors/specFlatness~.md"
            },
            {
                "magSpec~": "test/descriptors/magSpec~.md"
            },
            {
                "pix_drum": "test/descriptors/pix_drum.md"
            },
            {
                "peak~": "test/descriptors/peak~.md"
            },
            {
                "pix_histo": "test/descriptors/pix_histo.md"
            },
            {
                "specSkewness~": "test/descriptors/specSkewness~.md"
            },
            {
                "featureAccum": "test/descriptors/featureAccum.md"
            },
            {
                "specRolloff~": "test/descriptors/specRolloff~.md"
            },
            {
                "chroma": "test/descriptors/chroma.md"
            },
            {
                "specFlux": "test/descriptors/specFlux.md"
            },
            {
                "barkSpecIrregularity~": "test/descriptors/barkSpecIrregularity~.md"
            },
            {
                "maxSampleDelta": "test/descriptors/maxSampleDelta.md"
            },
            {
                "specHarmonicity": "test/descriptors/specHarmonicity.md"
            },
            {
                "zeroCrossing~": "test/descriptors/zeroCrossing~.md"
            },
            {
                "specBrightness": "test/descriptors/specBrightness.md"
            },
            {
                "bfcc": "test/descriptors/bfcc.md"
            },
            {
                "barkSpecKurtosis~": "test/descriptors/barkSpecKurtosis~.md"
            },
            {
                "barkSpecSpread": "test/descriptors/barkSpecSpread.md"
            },
            {
                "barkSpecFlux~": "test/descriptors/barkSpecFlux~.md"
            },
            {
                "barkSpecSpread~": "test/descriptors/barkSpecSpread~.md"
            },
            {
                "specSkewness": "test/descriptors/specSkewness.md"
            },
            {
                "barkSpec": "test/descriptors/barkSpec.md"
            },
            {
                "tID-conversion": "test/descriptors/tID-conversion.md"
            },
            {
                "framedelta~": "test/descriptors/framedelta~.md"
            },
            {
                "autoCorrPitch~": "test/descriptors/autoCorrPitch~.md"
            },
            {
                "tID_fft~": "test/descriptors/tID_fft~.md"
            },
            {
                "bark": "test/descriptors/bark.md"
            },
            {
                "meter~": "test/descriptors/meter~.md"
            },
            {
                "vu~": "test/descriptors/vu~.md"
            },
            {
                "energy~": "test/descriptors/energy~.md"
            },
            {
                "melSpec": "test/descriptors/melSpec.md"
            },
            {
                "dct": "test/descriptors/dct.md"
            },
            {
                "tID_mean": "test/descriptors/tID_mean.md"
            },
            {
                "beat~": "test/descriptors/beat~.md"
            },
            {
                "barkSpecSkewness~": "test/descriptors/barkSpecSkewness~.md"
            },
            {
                "harmonicRatio": "test/descriptors/harmonicRatio.md"
            },
            {
                "barkSpecSkewness": "test/descriptors/barkSpecSkewness.md"
            },
            {
                "barkSpecRolloff": "test/descriptors/barkSpecRolloff.md"
            },
            {
                "sampleBuffer~": "test/descriptors/sampleBuffer~.md"
            },
            {
                "meter2~": "test/descriptors/meter2~.md"
            },
            {
                "bark~": "test/descriptors/bark~.md"
            },
            {
                "envrms~": "test/descriptors/envrms~.md"
            },
            {
                "specIrregularity~": "test/descriptors/specIrregularity~.md"
            },
            {
                "maxSample": "test/descriptors/maxSample.md"
            },
            {
                "specKurtosis~": "test/descriptors/specKurtosis~.md"
            },
            {
                "cepstrum": "test/descriptors/cepstrum.md"
            },
            {
                "nearestPoint": "test/descriptors/nearestPoint.md"
            },
            {
                "tabletool": "test/descriptors/tabletool.md"
            },
            {
                "featureNorm": "test/descriptors/featureNorm.md"
            },
            {
                "energyEntropy": "test/descriptors/energyEntropy.md"
            },
            {
                "magSpec": "test/descriptors/magSpec.md"
            },
            {
                "minSample": "test/descriptors/minSample.md"
            },
            {
                "barkSpecCentroid~": "test/descriptors/barkSpecCentroid~.md"
            },
            {
                "minSample~": "test/descriptors/minSample~.md"
            },
            {
                "barkSpecRolloff~": "test/descriptors/barkSpecRolloff~.md"
            },
            {
                "specKurtosis": "test/descriptors/specKurtosis.md"
            },
            {
                "rms~": "test/descriptors/rms~.md"
            },
            {
                "barkSpecFlatness": "test/descriptors/barkSpecFlatness.md"
            },
            {
                "energyEntropy~": "test/descriptors/energyEntropy~.md"
            },
            {
                "peakamp~": "test/descriptors/peakamp~.md"
            },
            {
                "specSpread~": "test/descriptors/specSpread~.md"
            },
            {
                "barkSpec~": "test/descriptors/barkSpec~.md"
            },
            {
                "peakSample": "objects/peakSample.md"
            },
            {
                "phaseSpec": "objects/phaseSpec.md"
            },
            {
                "barkSpecSlope~": "objects/barkSpecSlope~.md"
            },
            {
                "spectrograph~": "objects/spectrograph~.md"
            },
            {
                "tID_std": "objects/tID_std.md"
            },
            {
                "phaseSpec~": "objects/phaseSpec~.md"
            },
            {
                "barkSpecSlope": "objects/barkSpecSlope.md"
            },
            {
                "featureDelta": "objects/featureDelta.md"
            },
            {
                "barkSpecIrregularity": "objects/barkSpecIrregularity.md"
            },
            {
                "pix_multiblob": "objects/pix_multiblob.md"
            },
            {
                "range~": "objects/range~.md"
            },
            {
                "barkSpecBrightness": "objects/barkSpecBrightness.md"
            },
            {
                "pix_blobtracker": "objects/pix_blobtracker.md"
            },
            {
                "attackTime~": "objects/attackTime~.md"
            },
            {
                "chroma~": "objects/chroma~.md"
            },
            {
                "specSlope": "objects/specSlope.md"
            },
            {
                "cepstrumPitch~": "objects/cepstrumPitch~.md"
            },
            {
                "dfreq~": "objects/dfreq~.md"
            },
            {
                "attackTime": "objects/attackTime.md"
            },
            {
                "minSampleDelta": "objects/minSampleDelta.md"
            },
            {
                "tID_fft": "objects/tID_fft.md"
            },
            {
                "maxSampleDelta~": "objects/maxSampleDelta~.md"
            },
            {
                "barkSpecCentroid": "objects/barkSpecCentroid.md"
            },
            {
                "waveSlope~": "objects/waveSlope~.md"
            },
            {
                "specSpread": "objects/specSpread.md"
            },
            {
                "specCentroid": "objects/specCentroid.md"
            },
            {
                "zeroCrossing": "objects/zeroCrossing.md"
            },
            {
                "autoCorrPitch": "objects/autoCorrPitch.md"
            },
            {
                "nyquist~": "objects/nyquist~.md"
            },
            {
                "mov.rms~": "objects/mov.rms~.md"
            },
            {
                "harmonicRatio~": "objects/harmonicRatio~.md"
            },
            {
                "pvoc~": "objects/pvoc~.md"
            },
            {
                "waveNoise~": "objects/waveNoise~.md"
            },
            {
                "specBrightness~": "objects/specBrightness~.md"
            },
            {
                "melSpec~": "objects/melSpec~.md"
            },
            {
                "barkSpecBrightness~": "objects/barkSpecBrightness~.md"
            },
            {
                "minSampleDelta~": "objects/minSampleDelta~.md"
            },
            {
                "zerocross~": "objects/zerocross~.md"
            },
            {
                "cepstrumPitch": "objects/cepstrumPitch.md"
            },
            {
                "morphine~": "objects/morphine~.md"
            },
            {
                "dct~": "objects/dct~.md"
            },
            {
                "maxpeak~": "objects/maxpeak~.md"
            },
            {
                "binWrangler": "objects/binWrangler.md"
            },
            {
                "maxSample~": "objects/maxSample~.md"
            },
            {
                "meter8~": "objects/meter8~.md"
            },
            {
                "specIrregularity": "objects/specIrregularity.md"
            },
            {
                "specSlope~": "objects/specSlope~.md"
            },
            {
                "peakSample~": "objects/peakSample~.md"
            },
            {
                "specCentroid~": "objects/specCentroid~.md"
            },
            {
                "hann~": "objects/hann~.md"
            },
            {
                "specFlux~": "objects/specFlux~.md"
            },
            {
                "bfcc~": "objects/bfcc~.md"
            },
            {
                "specFlatness": "objects/specFlatness.md"
            },
            {
                "mfcc": "objects/mfcc.md"
            },
            {
                "cepstrum~": "objects/cepstrum~.md"
            },
            {
                "mfcc~": "objects/mfcc~.md"
            },
            {
                "waveSlope": "objects/waveSlope.md"
            },
            {
                "specRolloff": "objects/specRolloff.md"
            },
            {
                "energy": "objects/energy.md"
            },
            {
                "timbreID": "objects/timbreID.md"
            },
            {
                "waveNoise": "objects/waveNoise.md"
            },
            {
                "barkSpecKurtosis": "objects/barkSpecKurtosis.md"
            },
            {
                "barkSpecFlux": "objects/barkSpecFlux.md"
            },
            {
                "barkSpecFlatness~": "objects/barkSpecFlatness~.md"
            },
            {
                "specHarmonicity~": "objects/specHarmonicity~.md"
            },
            {
                "specFlatness~": "objects/specFlatness~.md"
            },
            {
                "magSpec~": "objects/magSpec~.md"
            },
            {
                "pix_drum": "objects/pix_drum.md"
            },
            {
                "peak~": "objects/peak~.md"
            },
            {
                "pix_histo": "objects/pix_histo.md"
            },
            {
                "specSkewness~": "objects/specSkewness~.md"
            },
            {
                "featureAccum": "objects/featureAccum.md"
            },
            {
                "specRolloff~": "objects/specRolloff~.md"
            },
            {
                "chroma": "objects/chroma.md"
            },
            {
                "specFlux": "objects/specFlux.md"
            },
            {
                "barkSpecIrregularity~": "objects/barkSpecIrregularity~.md"
            },
            {
                "maxSampleDelta": "objects/maxSampleDelta.md"
            },
            {
                "specHarmonicity": "objects/specHarmonicity.md"
            },
            {
                "zeroCrossing~": "objects/zeroCrossing~.md"
            },
            {
                "specBrightness": "objects/specBrightness.md"
            },
            {
                "bfcc": "objects/bfcc.md"
            },
            {
                "barkSpecKurtosis~": "objects/barkSpecKurtosis~.md"
            },
            {
                "barkSpecSpread": "objects/barkSpecSpread.md"
            },
            {
                "barkSpecFlux~": "objects/barkSpecFlux~.md"
            },
            {
                "barkSpecSpread~": "objects/barkSpecSpread~.md"
            },
            {
                "specSkewness": "objects/specSkewness.md"
            },
            {
                "barkSpec": "objects/barkSpec.md"
            },
            {
                "tID-conversion": "objects/tID-conversion.md"
            },
            {
                "framedelta~": "objects/framedelta~.md"
            },
            {
                "autoCorrPitch~": "objects/autoCorrPitch~.md"
            },
            {
                "tID_fft~": "objects/tID_fft~.md"
            },
            {
                "bark": "objects/bark.md"
            },
            {
                "meter~": "objects/meter~.md"
            },
            {
                "vu~": "objects/vu~.md"
            },
            {
                "energy~": "objects/energy~.md"
            },
            {
                "melSpec": "objects/melSpec.md"
            },
            {
                "dct": "objects/dct.md"
            },
            {
                "tID_mean": "objects/tID_mean.md"
            },
            {
                "beat~": "objects/beat~.md"
            },
            {
                "barkSpecSkewness~": "objects/barkSpecSkewness~.md"
            },
            {
                "harmonicRatio": "objects/harmonicRatio.md"
            },
            {
                "barkSpecSkewness": "objects/barkSpecSkewness.md"
            },
            {
                "barkSpecRolloff": "objects/barkSpecRolloff.md"
            },
            {
                "sampleBuffer~": "objects/sampleBuffer~.md"
            },
            {
                "meter2~": "objects/meter2~.md"
            },
            {
                "bark~": "objects/bark~.md"
            },
            {
                "envrms~": "objects/envrms~.md"
            },
            {
                "specIrregularity~": "objects/specIrregularity~.md"
            },
            {
                "maxSample": "objects/maxSample.md"
            },
            {
                "specKurtosis~": "objects/specKurtosis~.md"
            },
            {
                "cepstrum": "objects/cepstrum.md"
            },
            {
                "nearestPoint": "objects/nearestPoint.md"
            },
            {
                "tabletool": "objects/tabletool.md"
            },
            {
                "featureNorm": "objects/featureNorm.md"
            },
            {
                "energyEntropy": "objects/energyEntropy.md"
            },
            {
                "magSpec": "objects/magSpec.md"
            },
            {
                "minSample": "objects/minSample.md"
            },
            {
                "barkSpecCentroid~": "objects/barkSpecCentroid~.md"
            },
            {
                "minSample~": "objects/minSample~.md"
            },
            {
                "barkSpecRolloff~": "objects/barkSpecRolloff~.md"
            },
            {
                "specKurtosis": "objects/specKurtosis.md"
            },
            {
                "rms~": "objects/rms~.md"
            },
            {
                "barkSpecFlatness": "objects/barkSpecFlatness.md"
            },
            {
                "energyEntropy~": "objects/energyEntropy~.md"
            },
            {
                "peakamp~": "objects/peakamp~.md"
            },
            {
                "specSpread~": "objects/specSpread~.md"
            },
            {
                "barkSpec~": "objects/barkSpec~.md"
            }
        ],
        "Score Follower": []
    },
    "Synthesis": {
        "Subtractive": [
            "test/subtractive/index.md",
            {
                "bl.vsaw~": "test/subtractive/bl.vsaw~.md"
            },
            {
                "bl.square~": "test/subtractive/bl.square~.md"
            },
            {
                "vcf.m~": "test/subtractive/vcf.m~.md"
            },
            {
                "saw2~": "test/subtractive/saw2~.md"
            },
            {
                "bl.osc~": "test/subtractive/bl.osc~.md"
            },
            {
                "bl.vsaw~": "objects/bl.vsaw~.md"
            },
            {
                "bl.square~": "objects/bl.square~.md"
            },
            {
                "vcf.m~": "objects/vcf.m~.md"
            },
            {
                "saw2~": "objects/saw2~.md"
            },
            {
                "bl.osc~": "objects/bl.osc~.md"
            }
        ],
        "Additive": [
            "test/additive/index.md",
            {
                "cavoc27~": "test/additive/cavoc27~.md"
            },
            {
                "oscbank~": "test/additive/oscbank~.md"
            },
            {
                "enrich~": "test/additive/enrich~.md"
            },
            {
                "blip~": "test/additive/blip~.md"
            },
            {
                "pileup~": "test/additive/pileup~.md"
            },
            {
                "cavoc~": "test/additive/cavoc~.md"
            },
            {
                "cavoc27~": "objects/cavoc27~.md"
            },
            {
                "oscbank~": "objects/oscbank~.md"
            },
            {
                "enrich~": "objects/enrich~.md"
            },
            {
                "blip~": "objects/blip~.md"
            },
            {
                "pileup~": "objects/pileup~.md"
            },
            {
                "cavoc~": "objects/cavoc~.md"
            }
        ],
        "Granular": [
            "test/granular/index.md",
            {
                "grain.sampler~": "test/granular/grain.sampler~.md"
            },
            {
                "brane.m~": "test/granular/brane.m~.md"
            },
            {
                "grain.live~": "test/granular/grain.live~.md"
            },
            {
                "grain.synth~": "test/granular/grain.synth~.md"
            },
            {
                "gran.player~": "test/granular/gran.player~.md"
            },
            {
                "plaits~": "test/granular/plaits~.md"
            },
            {
                "pitch.shift~": "test/granular/pitch.shift~.md"
            },
            {
                "plaits.m~": "test/granular/plaits.m~.md"
            },
            {
                "pvgrain~": "test/granular/pvgrain~.md"
            },
            {
                "stretch.shift~": "test/granular/stretch.shift~.md"
            },
            {
                "pvoc.live~": "test/granular/pvoc.live~.md"
            },
            {
                "grain.sampler~": "objects/grain.sampler~.md"
            },
            {
                "brane.m~": "objects/brane.m~.md"
            },
            {
                "grain.live~": "objects/grain.live~.md"
            },
            {
                "grain.synth~": "objects/grain.synth~.md"
            },
            {
                "gran.player~": "objects/gran.player~.md"
            },
            {
                "plaits~": "objects/plaits~.md"
            },
            {
                "pitch.shift~": "objects/pitch.shift~.md"
            },
            {
                "plaits.m~": "objects/plaits.m~.md"
            },
            {
                "pvgrain~": "objects/pvgrain~.md"
            },
            {
                "stretch.shift~": "objects/stretch.shift~.md"
            },
            {
                "pvoc.live~": "objects/pvoc.live~.md"
            }
        ],
        "Oscillators": [
            "test/oscillators/index.md",
            {
                "xmod2~": "test/oscillators/xmod2~.md"
            },
            {
                "impulse": "test/oscillators/impulse.md"
            },
            {
                "wt2d~": "test/oscillators/wt2d~.md"
            },
            {
                "white~": "test/oscillators/white~.md"
            },
            {
                "cosine~": "test/oscillators/cosine~.md"
            },
            {
                "bl.tri~": "test/oscillators/bl.tri~.md"
            },
            {
                "bl.imp2~": "test/oscillators/bl.imp2~.md"
            },
            {
                "henon~": "test/oscillators/henon~.md"
            },
            {
                "impulse~": "test/oscillators/impulse~.md"
            },
            {
                "standard~": "test/oscillators/standard~.md"
            },
            {
                "tabreader~": "test/oscillators/tabreader~.md"
            },
            {
                "vsaw~": "test/oscillators/vsaw~.md"
            },
            {
                "oscnoise~": "test/oscillators/oscnoise~.md"
            },
            {
                "noisi~": "test/oscillators/noisi~.md"
            },
            {
                "damp.osc~": "test/oscillators/damp.osc~.md"
            },
            {
                "pm4~": "test/oscillators/pm4~.md"
            },
            {
                "pimp": "test/oscillators/pimp.md"
            },
            {
                "parabolic~": "test/oscillators/parabolic~.md"
            },
            {
                "wavetable~": "test/oscillators/wavetable~.md"
            },
            {
                "bl.wavetable~": "test/oscillators/bl.wavetable~.md"
            },
            {
                "oscbank~": "test/oscillators/oscbank~.md"
            },
            {
                "logistic~": "test/oscillators/logistic~.md"
            },
            {
                "trapezoid~": "test/oscillators/trapezoid~.md"
            },
            {
                "bl.imp~": "test/oscillators/bl.imp~.md"
            },
            {
                "bl.saw2~": "test/oscillators/bl.saw2~.md"
            },
            {
                "pm2~": "test/oscillators/pm2~.md"
            },
            {
                "pm6~": "test/oscillators/pm6~.md"
            },
            {
                "bl.saw~": "test/oscillators/bl.saw~.md"
            },
            {
                "sig.m~": "test/oscillators/sig.m~.md"
            },
            {
                "function~": "test/oscillators/function~.md"
            },
            {
                "pimpmul~": "test/oscillators/pimpmul~.md"
            },
            {
                "sin~": "test/oscillators/sin~.md"
            },
            {
                "brown~": "test/oscillators/brown~.md"
            },
            {
                "enrich~": "test/oscillators/enrich~.md"
            },
            {
                "impulse2~": "test/oscillators/impulse2~.md"
            },
            {
                "gaussian~": "test/oscillators/gaussian~.md"
            },
            {
                "plaits~": "test/oscillators/plaits~.md"
            },
            {
                "xmod~": "test/oscillators/xmod~.md"
            },
            {
                "lfo.m~": "test/oscillators/lfo.m~.md"
            },
            {
                "lfo": "test/oscillators/lfo.md"
            },
            {
                "cycle~": "test/oscillators/cycle~.md"
            },
            {
                "gendyn~": "test/oscillators/gendyn~.md"
            },
            {
                "randpulse~": "test/oscillators/randpulse~.md"
            },
            {
                "pulse": "test/oscillators/pulse.md"
            },
            {
                "square~": "test/oscillators/square~.md"
            },
            {
                "randpulse": "test/oscillators/randpulse.md"
            },
            {
                "stepnoise~": "test/oscillators/stepnoise~.md"
            },
            {
                "fm~": "test/oscillators/fm~.md"
            },
            {
                "bl.vsaw~": "test/oscillators/bl.vsaw~.md"
            },
            {
                "triangle~": "test/oscillators/triangle~.md"
            },
            {
                "pvtuner~": "test/oscillators/pvtuner~.md"
            },
            {
                "train~": "test/oscillators/train~.md"
            },
            {
                "latoocarfian~": "test/oscillators/latoocarfian~.md"
            },
            {
                "tempo~": "test/oscillators/tempo~.md"
            },
            {
                "pulse~": "test/oscillators/pulse~.md"
            },
            {
                "pm~": "test/oscillators/pm~.md"
            },
            {
                "float2imp~": "test/oscillators/float2imp~.md"
            },
            {
                "gendyn.m~": "test/oscillators/gendyn.m~.md"
            },
            {
                "blip~": "test/oscillators/blip~.md"
            },
            {
                "randpulse2": "test/oscillators/randpulse2.md"
            },
            {
                "noish~": "test/oscillators/noish~.md"
            },
            {
                "phasor": "test/oscillators/phasor.md"
            },
            {
                "quad~": "test/oscillators/quad~.md"
            },
            {
                "tri~": "test/oscillators/tri~.md"
            },
            {
                "bl.square~": "test/oscillators/bl.square~.md"
            },
            {
                "fbsine~": "test/oscillators/fbsine~.md"
            },
            {
                "saw~": "test/oscillators/saw~.md"
            },
            {
                "fbsine2~": "test/oscillators/fbsine2~.md"
            },
            {
                "saw2~": "test/oscillators/saw2~.md"
            },
            {
                "sine~": "test/oscillators/sine~.md"
            },
            {
                "vco.m~": "test/oscillators/vco.m~.md"
            },
            {
                "pm6.m~": "test/oscillators/pm6.m~.md"
            },
            {
                "pvharm~": "test/oscillators/pvharm~.md"
            },
            {
                "pink~": "test/oscillators/pink~.md"
            },
            {
                "pimp~": "test/oscillators/pimp~.md"
            },
            {
                "bl.osc~": "test/oscillators/bl.osc~.md"
            },
            {
                "randpulse2~": "test/oscillators/randpulse2~.md"
            },
            {
                "xmod2~": "objects/xmod2~.md"
            },
            {
                "impulse": "objects/impulse.md"
            },
            {
                "wt2d~": "objects/wt2d~.md"
            },
            {
                "white~": "objects/white~.md"
            },
            {
                "cosine~": "objects/cosine~.md"
            },
            {
                "bl.tri~": "objects/bl.tri~.md"
            },
            {
                "bl.imp2~": "objects/bl.imp2~.md"
            },
            {
                "henon~": "objects/henon~.md"
            },
            {
                "impulse~": "objects/impulse~.md"
            },
            {
                "standard~": "objects/standard~.md"
            },
            {
                "tabreader~": "objects/tabreader~.md"
            },
            {
                "vsaw~": "objects/vsaw~.md"
            },
            {
                "oscnoise~": "objects/oscnoise~.md"
            },
            {
                "noisi~": "objects/noisi~.md"
            },
            {
                "damp.osc~": "objects/damp.osc~.md"
            },
            {
                "pm4~": "objects/pm4~.md"
            },
            {
                "pimp": "objects/pimp.md"
            },
            {
                "parabolic~": "objects/parabolic~.md"
            },
            {
                "wavetable~": "objects/wavetable~.md"
            },
            {
                "bl.wavetable~": "objects/bl.wavetable~.md"
            },
            {
                "oscbank~": "objects/oscbank~.md"
            },
            {
                "logistic~": "objects/logistic~.md"
            },
            {
                "trapezoid~": "objects/trapezoid~.md"
            },
            {
                "bl.imp~": "objects/bl.imp~.md"
            },
            {
                "bl.saw2~": "objects/bl.saw2~.md"
            },
            {
                "pm2~": "objects/pm2~.md"
            },
            {
                "pm6~": "objects/pm6~.md"
            },
            {
                "bl.saw~": "objects/bl.saw~.md"
            },
            {
                "sig.m~": "objects/sig.m~.md"
            },
            {
                "function~": "objects/function~.md"
            },
            {
                "pimpmul~": "objects/pimpmul~.md"
            },
            {
                "sin~": "objects/sin~.md"
            },
            {
                "brown~": "objects/brown~.md"
            },
            {
                "enrich~": "objects/enrich~.md"
            },
            {
                "impulse2~": "objects/impulse2~.md"
            },
            {
                "gaussian~": "objects/gaussian~.md"
            },
            {
                "plaits~": "objects/plaits~.md"
            },
            {
                "xmod~": "objects/xmod~.md"
            },
            {
                "lfo.m~": "objects/lfo.m~.md"
            },
            {
                "lfo": "objects/lfo.md"
            },
            {
                "cycle~": "objects/cycle~.md"
            },
            {
                "gendyn~": "objects/gendyn~.md"
            },
            {
                "randpulse~": "objects/randpulse~.md"
            },
            {
                "pulse": "objects/pulse.md"
            },
            {
                "square~": "objects/square~.md"
            },
            {
                "randpulse": "objects/randpulse.md"
            },
            {
                "stepnoise~": "objects/stepnoise~.md"
            },
            {
                "fm~": "objects/fm~.md"
            },
            {
                "bl.vsaw~": "objects/bl.vsaw~.md"
            },
            {
                "triangle~": "objects/triangle~.md"
            },
            {
                "pvtuner~": "objects/pvtuner~.md"
            },
            {
                "train~": "objects/train~.md"
            },
            {
                "latoocarfian~": "objects/latoocarfian~.md"
            },
            {
                "tempo~": "objects/tempo~.md"
            },
            {
                "pulse~": "objects/pulse~.md"
            },
            {
                "pm~": "objects/pm~.md"
            },
            {
                "float2imp~": "objects/float2imp~.md"
            },
            {
                "gendyn.m~": "objects/gendyn.m~.md"
            },
            {
                "blip~": "objects/blip~.md"
            },
            {
                "randpulse2": "objects/randpulse2.md"
            },
            {
                "noish~": "objects/noish~.md"
            },
            {
                "phasor": "objects/phasor.md"
            },
            {
                "quad~": "objects/quad~.md"
            },
            {
                "tri~": "objects/tri~.md"
            },
            {
                "bl.square~": "objects/bl.square~.md"
            },
            {
                "fbsine~": "objects/fbsine~.md"
            },
            {
                "saw~": "objects/saw~.md"
            },
            {
                "fbsine2~": "objects/fbsine2~.md"
            },
            {
                "saw2~": "objects/saw2~.md"
            },
            {
                "sine~": "objects/sine~.md"
            },
            {
                "vco.m~": "objects/vco.m~.md"
            },
            {
                "pm6.m~": "objects/pm6.m~.md"
            },
            {
                "pvharm~": "objects/pvharm~.md"
            },
            {
                "pink~": "objects/pink~.md"
            },
            {
                "pimp~": "objects/pimp~.md"
            },
            {
                "bl.osc~": "objects/bl.osc~.md"
            },
            {
                "randpulse2~": "objects/randpulse2~.md"
            }
        ],
        "Physical Modeling": [
            "test/physical_modeling/index.md",
            {
                "tLink2D": "test/physical_modeling/tLink2D.md"
            },
            {
                "mass": "test/physical_modeling/mass.md"
            },
            {
                "pluck~": "test/physical_modeling/pluck~.md"
            },
            {
                "pmpd2d": "test/physical_modeling/pmpd2d.md"
            },
            {
                "link3D": "test/physical_modeling/link3D.md"
            },
            {
                "pmpd~": "test/physical_modeling/pmpd~.md"
            },
            {
                "mass3D": "test/physical_modeling/mass3D.md"
            },
            {
                "mass2D": "test/physical_modeling/mass2D.md"
            },
            {
                "tLink3D": "test/physical_modeling/tLink3D.md"
            },
            {
                "iCircle2D": "test/physical_modeling/iCircle2D.md"
            },
            {
                "iCircle3D": "test/physical_modeling/iCircle3D.md"
            },
            {
                "pmpd3d": "test/physical_modeling/pmpd3d.md"
            },
            {
                "link2D": "test/physical_modeling/link2D.md"
            },
            {
                "tPlane3D": "test/physical_modeling/tPlane3D.md"
            },
            {
                "newWave": "test/physical_modeling/newWave.md"
            },
            {
                "link": "test/physical_modeling/link.md"
            },
            {
                "plaits~": "test/physical_modeling/plaits~.md"
            },
            {
                "resonator2~": "test/physical_modeling/resonator2~.md"
            },
            {
                "pluck.m~": "test/physical_modeling/pluck.m~.md"
            },
            {
                "iLine2D": "test/physical_modeling/iLine2D.md"
            },
            {
                "pmpd2d~": "test/physical_modeling/pmpd2d~.md"
            },
            {
                "iSeg2D": "test/physical_modeling/iSeg2D.md"
            },
            {
                "iPlane3D": "test/physical_modeling/iPlane3D.md"
            },
            {
                "pmpd": "test/physical_modeling/pmpd.md"
            },
            {
                "iCylinder3D": "test/physical_modeling/iCylinder3D.md"
            },
            {
                "pmpd3d~": "test/physical_modeling/pmpd3d~.md"
            },
            {
                "iAmbient3D": "test/physical_modeling/iAmbient3D.md"
            },
            {
                "tLink2D": "objects/tLink2D.md"
            },
            {
                "mass": "objects/mass.md"
            },
            {
                "pluck~": "objects/pluck~.md"
            },
            {
                "pmpd2d": "objects/pmpd2d.md"
            },
            {
                "link3D": "objects/link3D.md"
            },
            {
                "pmpd~": "objects/pmpd~.md"
            },
            {
                "mass3D": "objects/mass3D.md"
            },
            {
                "mass2D": "objects/mass2D.md"
            },
            {
                "tLink3D": "objects/tLink3D.md"
            },
            {
                "iCircle2D": "objects/iCircle2D.md"
            },
            {
                "iCircle3D": "objects/iCircle3D.md"
            },
            {
                "pmpd3d": "objects/pmpd3d.md"
            },
            {
                "link2D": "objects/link2D.md"
            },
            {
                "tPlane3D": "objects/tPlane3D.md"
            },
            {
                "newWave": "objects/newWave.md"
            },
            {
                "link": "objects/link.md"
            },
            {
                "plaits~": "objects/plaits~.md"
            },
            {
                "resonator2~": "objects/resonator2~.md"
            },
            {
                "pluck.m~": "objects/pluck.m~.md"
            },
            {
                "iLine2D": "objects/iLine2D.md"
            },
            {
                "pmpd2d~": "objects/pmpd2d~.md"
            },
            {
                "iSeg2D": "objects/iSeg2D.md"
            },
            {
                "iPlane3D": "objects/iPlane3D.md"
            },
            {
                "pmpd": "objects/pmpd.md"
            },
            {
                "iCylinder3D": "objects/iCylinder3D.md"
            },
            {
                "pmpd3d~": "objects/pmpd3d~.md"
            },
            {
                "iAmbient3D": "objects/iAmbient3D.md"
            }
        ],
        "Samplers": [
            "test/samplers/index.md",
            {
                "tabplayer~": "test/samplers/tabplayer~.md"
            },
            {
                "grain.sampler~": "test/samplers/grain.sampler~.md"
            },
            {
                "brane.m~": "test/samplers/brane.m~.md"
            },
            {
                "sfont.m~": "test/samplers/sfont.m~.md"
            },
            {
                "gran.player~": "test/samplers/gran.player~.md"
            },
            {
                "sfont~": "test/samplers/sfont~.md"
            },
            {
                "susloop~": "test/samplers/susloop~.md"
            },
            {
                "play.file~": "test/samplers/play.file~.md"
            },
            {
                "sample~": "test/samplers/sample~.md"
            },
            {
                "play~": "test/samplers/play~.md"
            },
            {
                "residency_buffer~": "test/samplers/residency_buffer~.md"
            },
            {
                "pix_film": "test/samplers/pix_film.md"
            },
            {
                "sfz~": "test/samplers/sfz~.md"
            },
            {
                "player~": "test/samplers/player~.md"
            },
            {
                "tabplayer~": "objects/tabplayer~.md"
            },
            {
                "grain.sampler~": "objects/grain.sampler~.md"
            },
            {
                "brane.m~": "objects/brane.m~.md"
            },
            {
                "sfont.m~": "objects/sfont.m~.md"
            },
            {
                "gran.player~": "objects/gran.player~.md"
            },
            {
                "sfont~": "objects/sfont~.md"
            },
            {
                "susloop~": "objects/susloop~.md"
            },
            {
                "play.file~": "objects/play.file~.md"
            },
            {
                "sample~": "objects/sample~.md"
            },
            {
                "play~": "objects/play~.md"
            },
            {
                "residency_buffer~": "objects/residency_buffer~.md"
            },
            {
                "pix_film": "objects/pix_film.md"
            },
            {
                "sfz~": "objects/sfz~.md"
            },
            {
                "player~": "objects/player~.md"
            }
        ],
        "Stochastic": [
            "test/stochastic/index.md",
            {
                "chance~": "test/stochastic/chance~.md"
            },
            {
                "lfnoise~": "test/stochastic/lfnoise~.md"
            },
            {
                "white~": "test/stochastic/white~.md"
            },
            {
                "grain.live~": "test/stochastic/grain.live~.md"
            },
            {
                "lfnoise": "test/stochastic/lfnoise.md"
            },
            {
                "ikeda~": "test/stochastic/ikeda~.md"
            },
            {
                "drunkard": "test/stochastic/drunkard.md"
            },
            {
                "standard~": "test/stochastic/standard~.md"
            },
            {
                "gray~": "test/stochastic/gray~.md"
            },
            {
                "dust~": "test/stochastic/dust~.md"
            },
            {
                "urn": "test/stochastic/urn.md"
            },
            {
                "oscnoise~": "test/stochastic/oscnoise~.md"
            },
            {
                "noisi~": "test/stochastic/noisi~.md"
            },
            {
                "lincong~": "test/stochastic/lincong~.md"
            },
            {
                "drunk": "test/stochastic/drunk.md"
            },
            {
                "rand.f~": "test/stochastic/rand.f~.md"
            },
            {
                "decide": "test/stochastic/decide.md"
            },
            {
                "rand.hist": "test/stochastic/rand.hist.md"
            },
            {
                "brown~": "test/stochastic/brown~.md"
            },
            {
                "scramble": "test/stochastic/scramble.md"
            },
            {
                "drunkard~": "test/stochastic/drunkard~.md"
            },
            {
                "rand.f": "test/stochastic/rand.f.md"
            },
            {
                "brown": "test/stochastic/brown.md"
            },
            {
                "prob": "test/stochastic/prob.md"
            },
            {
                "rampnoise~": "test/stochastic/rampnoise~.md"
            },
            {
                "gendyn~": "test/stochastic/gendyn~.md"
            },
            {
                "randpulse~": "test/stochastic/randpulse~.md"
            },
            {
                "rampnoise": "test/stochastic/rampnoise.md"
            },
            {
                "randpulse": "test/stochastic/randpulse.md"
            },
            {
                "stepnoise": "test/stochastic/stepnoise.md"
            },
            {
                "stepnoise~": "test/stochastic/stepnoise~.md"
            },
            {
                "rand.u": "test/stochastic/rand.u.md"
            },
            {
                "rand.list": "test/stochastic/rand.list.md"
            },
            {
                "pix_noise": "test/stochastic/pix_noise.md"
            },
            {
                "tempo~": "test/stochastic/tempo~.md"
            },
            {
                "dust2~": "test/stochastic/dust2~.md"
            },
            {
                "randpulse2": "test/stochastic/randpulse2.md"
            },
            {
                "noish~": "test/stochastic/noish~.md"
            },
            {
                "perlin~": "test/stochastic/perlin~.md"
            },
            {
                "pvgrain~": "test/stochastic/pvgrain~.md"
            },
            {
                "rand.dist": "test/stochastic/rand.dist.md"
            },
            {
                "rand.i~": "test/stochastic/rand.i~.md"
            },
            {
                "disarrain~": "test/stochastic/disarrain~.md"
            },
            {
                "crackle~": "test/stochastic/crackle~.md"
            },
            {
                "velvet~": "test/stochastic/velvet~.md"
            },
            {
                "pink~": "test/stochastic/pink~.md"
            },
            {
                "rand~": "test/stochastic/rand~.md"
            },
            {
                "chance": "test/stochastic/chance.md"
            },
            {
                "rand.i": "test/stochastic/rand.i.md"
            },
            {
                "randpulse2~": "test/stochastic/randpulse2~.md"
            },
            {
                "chance~": "objects/chance~.md"
            },
            {
                "lfnoise~": "objects/lfnoise~.md"
            },
            {
                "white~": "objects/white~.md"
            },
            {
                "grain.live~": "objects/grain.live~.md"
            },
            {
                "lfnoise": "objects/lfnoise.md"
            },
            {
                "ikeda~": "objects/ikeda~.md"
            },
            {
                "drunkard": "objects/drunkard.md"
            },
            {
                "standard~": "objects/standard~.md"
            },
            {
                "gray~": "objects/gray~.md"
            },
            {
                "dust~": "objects/dust~.md"
            },
            {
                "urn": "objects/urn.md"
            },
            {
                "oscnoise~": "objects/oscnoise~.md"
            },
            {
                "noisi~": "objects/noisi~.md"
            },
            {
                "lincong~": "objects/lincong~.md"
            },
            {
                "drunk": "objects/drunk.md"
            },
            {
                "rand.f~": "objects/rand.f~.md"
            },
            {
                "decide": "objects/decide.md"
            },
            {
                "rand.hist": "objects/rand.hist.md"
            },
            {
                "brown~": "objects/brown~.md"
            },
            {
                "scramble": "objects/scramble.md"
            },
            {
                "drunkard~": "objects/drunkard~.md"
            },
            {
                "rand.f": "objects/rand.f.md"
            },
            {
                "brown": "objects/brown.md"
            },
            {
                "prob": "objects/prob.md"
            },
            {
                "rampnoise~": "objects/rampnoise~.md"
            },
            {
                "gendyn~": "objects/gendyn~.md"
            },
            {
                "randpulse~": "objects/randpulse~.md"
            },
            {
                "rampnoise": "objects/rampnoise.md"
            },
            {
                "randpulse": "objects/randpulse.md"
            },
            {
                "stepnoise": "objects/stepnoise.md"
            },
            {
                "stepnoise~": "objects/stepnoise~.md"
            },
            {
                "rand.u": "objects/rand.u.md"
            },
            {
                "rand.list": "objects/rand.list.md"
            },
            {
                "pix_noise": "objects/pix_noise.md"
            },
            {
                "tempo~": "objects/tempo~.md"
            },
            {
                "dust2~": "objects/dust2~.md"
            },
            {
                "randpulse2": "objects/randpulse2.md"
            },
            {
                "noish~": "objects/noish~.md"
            },
            {
                "perlin~": "objects/perlin~.md"
            },
            {
                "pvgrain~": "objects/pvgrain~.md"
            },
            {
                "rand.dist": "objects/rand.dist.md"
            },
            {
                "rand.i~": "objects/rand.i~.md"
            },
            {
                "disarrain~": "objects/disarrain~.md"
            },
            {
                "crackle~": "objects/crackle~.md"
            },
            {
                "velvet~": "objects/velvet~.md"
            },
            {
                "pink~": "objects/pink~.md"
            },
            {
                "rand~": "objects/rand~.md"
            },
            {
                "chance": "objects/chance.md"
            },
            {
                "rand.i": "objects/rand.i.md"
            },
            {
                "randpulse2~": "objects/randpulse2~.md"
            }
        ],
        "Spectral / Resynthesis": []
    },
    "Analysis / Transform": {
        "FFT": [],
        "Spectral Processing": [],
        "Wavelets": []
    },
    "Plugins": {
        "VST2/VST3": [
            "test/vst2_vst3/index.md",
            {
                "vstplugin~": "test/vst2_vst3/vstplugin~.md"
            },
            {
                "vstplugin~": "objects/vstplugin~.md"
            }
        ],
        "Vamp": [],
        "LADSPA": [],
        "AU": []
    },
    "Spatialization": {
        "Ambisonics": [
            "test/ambisonics/index.md",
            {
                "saf.decoder~": "test/ambisonics/saf.decoder~.md"
            },
            {
                "saf.encoder~": "test/ambisonics/saf.encoder~.md"
            },
            {
                "saf.decoder~": "objects/saf.decoder~.md"
            },
            {
                "saf.encoder~": "objects/saf.encoder~.md"
            }
        ],
        "Binaural": [
            "test/binaural/index.md",
            {
                "sofalizer~": "test/binaural/sofalizer~.md"
            },
            {
                "earplug~": "test/binaural/earplug~.md"
            },
            {
                "sofalizer~": "objects/sofalizer~.md"
            },
            {
                "earplug~": "objects/earplug~.md"
            }
        ],
        "VBAP": []
    },
    "I/O": {
        "File I/O": [
            "test/file_i_o/index.md",
            {
                "presets": "test/file_i_o/presets.md"
            },
            {
                "midi": "test/file_i_o/midi.md"
            },
            {
                "model": "test/file_i_o/model.md"
            },
            {
                "brane.m~": "test/file_i_o/brane.m~.md"
            },
            {
                "scala": "test/file_i_o/scala.md"
            },
            {
                "sfload": "test/file_i_o/sfload.md"
            },
            {
                "sfont.m~": "test/file_i_o/sfont.m~.md"
            },
            {
                "pix_writer": "test/file_i_o/pix_writer.md"
            },
            {
                "gran.player~": "test/file_i_o/gran.player~.md"
            },
            {
                "capture~": "test/file_i_o/capture~.md"
            },
            {
                "sf-play_record": "test/file_i_o/sf-play_record.md"
            },
            {
                "rec": "test/file_i_o/rec.md"
            },
            {
                "sfont~": "test/file_i_o/sfont~.md"
            },
            {
                "pix_buffer_filmopen": "test/file_i_o/pix_buffer_filmopen.md"
            },
            {
                "glsl_geometry": "test/file_i_o/glsl_geometry.md"
            },
            {
                "msgfile": "test/file_i_o/msgfile.md"
            },
            {
                "pix_multiimage": "test/file_i_o/pix_multiimage.md"
            },
            {
                "pix_movie": "test/file_i_o/pix_movie.md"
            },
            {
                "score": "test/file_i_o/score.md"
            },
            {
                "presets.m": "test/file_i_o/presets.m.md"
            },
            {
                "modelfiler": "test/file_i_o/modelfiler.md"
            },
            {
                "pix_record": "test/file_i_o/pix_record.md"
            },
            {
                "freadln": "test/file_i_o/freadln.md"
            },
            {
                "buffer~": "test/file_i_o/buffer~.md"
            },
            {
                "play.file~": "test/file_i_o/play.file~.md"
            },
            {
                "sample~": "test/file_i_o/sample~.md"
            },
            {
                "text3d": "test/file_i_o/text3d.md"
            },
            {
                "funbuff": "test/file_i_o/funbuff.md"
            },
            {
                "multimodel": "test/file_i_o/multimodel.md"
            },
            {
                "seq": "test/file_i_o/seq.md"
            },
            {
                "pix_image": "test/file_i_o/pix_image.md"
            },
            {
                "pic": "test/file_i_o/pic.md"
            },
            {
                "pix_fiducialtrack": "test/file_i_o/pix_fiducialtrack.md"
            },
            {
                "coll": "test/file_i_o/coll.md"
            },
            {
                "pix_imageInPlace": "test/file_i_o/pix_imageInPlace.md"
            },
            {
                "mtr": "test/file_i_o/mtr.md"
            },
            {
                "dir": "test/file_i_o/dir.md"
            },
            {
                "pix_film": "test/file_i_o/pix_film.md"
            },
            {
                "capture": "test/file_i_o/capture.md"
            },
            {
                "glsl_vertex": "test/file_i_o/glsl_vertex.md"
            },
            {
                "openfile": "test/file_i_o/openfile.md"
            },
            {
                "batch.rec~": "test/file_i_o/batch.rec~.md"
            },
            {
                "sfz~": "test/file_i_o/sfz~.md"
            },
            {
                "rec.file~": "test/file_i_o/rec.file~.md"
            },
            {
                "sfinfo": "test/file_i_o/sfinfo.md"
            },
            {
                "pvoc.player~": "test/file_i_o/pvoc.player~.md"
            },
            {
                "player~": "test/file_i_o/player~.md"
            },
            {
                "pix_buffer": "test/file_i_o/pix_buffer.md"
            },
            {
                "fwriteln": "test/file_i_o/fwriteln.md"
            },
            {
                "score2": "test/file_i_o/score2.md"
            },
            {
                "pix_write": "test/file_i_o/pix_write.md"
            },
            {
                "presets": "objects/presets.md"
            },
            {
                "midi": "objects/midi.md"
            },
            {
                "model": "objects/model.md"
            },
            {
                "brane.m~": "objects/brane.m~.md"
            },
            {
                "scala": "objects/scala.md"
            },
            {
                "sfload": "objects/sfload.md"
            },
            {
                "sfont.m~": "objects/sfont.m~.md"
            },
            {
                "pix_writer": "objects/pix_writer.md"
            },
            {
                "gran.player~": "objects/gran.player~.md"
            },
            {
                "capture~": "objects/capture~.md"
            },
            {
                "sf-play_record": "objects/sf-play_record.md"
            },
            {
                "rec": "objects/rec.md"
            },
            {
                "sfont~": "objects/sfont~.md"
            },
            {
                "pix_buffer_filmopen": "objects/pix_buffer_filmopen.md"
            },
            {
                "glsl_geometry": "objects/glsl_geometry.md"
            },
            {
                "msgfile": "objects/msgfile.md"
            },
            {
                "pix_multiimage": "objects/pix_multiimage.md"
            },
            {
                "pix_movie": "objects/pix_movie.md"
            },
            {
                "score": "objects/score.md"
            },
            {
                "presets.m": "objects/presets.m.md"
            },
            {
                "modelfiler": "objects/modelfiler.md"
            },
            {
                "pix_record": "objects/pix_record.md"
            },
            {
                "freadln": "objects/freadln.md"
            },
            {
                "buffer~": "objects/buffer~.md"
            },
            {
                "play.file~": "objects/play.file~.md"
            },
            {
                "sample~": "objects/sample~.md"
            },
            {
                "text3d": "objects/text3d.md"
            },
            {
                "funbuff": "objects/funbuff.md"
            },
            {
                "multimodel": "objects/multimodel.md"
            },
            {
                "seq": "objects/seq.md"
            },
            {
                "pix_image": "objects/pix_image.md"
            },
            {
                "pic": "objects/pic.md"
            },
            {
                "pix_fiducialtrack": "objects/pix_fiducialtrack.md"
            },
            {
                "coll": "objects/coll.md"
            },
            {
                "pix_imageInPlace": "objects/pix_imageInPlace.md"
            },
            {
                "mtr": "objects/mtr.md"
            },
            {
                "dir": "objects/dir.md"
            },
            {
                "pix_film": "objects/pix_film.md"
            },
            {
                "capture": "objects/capture.md"
            },
            {
                "glsl_vertex": "objects/glsl_vertex.md"
            },
            {
                "openfile": "objects/openfile.md"
            },
            {
                "batch.rec~": "objects/batch.rec~.md"
            },
            {
                "sfz~": "objects/sfz~.md"
            },
            {
                "rec.file~": "objects/rec.file~.md"
            },
            {
                "sfinfo": "objects/sfinfo.md"
            },
            {
                "pvoc.player~": "objects/pvoc.player~.md"
            },
            {
                "player~": "objects/player~.md"
            },
            {
                "pix_buffer": "objects/pix_buffer.md"
            },
            {
                "fwriteln": "objects/fwriteln.md"
            },
            {
                "score2": "objects/score2.md"
            },
            {
                "pix_write": "objects/pix_write.md"
            }
        ],
        "Audio I/O": [
            "test/audio_i_o/index.md",
            {
                "out~": "test/audio_i_o/out~.md"
            },
            {
                "out8~": "test/audio_i_o/out8~.md"
            },
            {
                "metronome~": "test/audio_i_o/metronome~.md"
            },
            {
                "pix_pix2sig~": "test/audio_i_o/pix_pix2sig~.md"
            },
            {
                "out4~": "test/audio_i_o/out4~.md"
            },
            {
                "setdsp~": "test/audio_i_o/setdsp~.md"
            },
            {
                "bl.vsaw~": "test/audio_i_o/bl.vsaw~.md"
            },
            {
                "pvgrain~": "test/audio_i_o/pvgrain~.md"
            },
            {
                "out.mc~": "test/audio_i_o/out.mc~.md"
            },
            {
                "out~": "objects/out~.md"
            },
            {
                "out8~": "objects/out8~.md"
            },
            {
                "metronome~": "objects/metronome~.md"
            },
            {
                "pix_pix2sig~": "objects/pix_pix2sig~.md"
            },
            {
                "out4~": "objects/out4~.md"
            },
            {
                "setdsp~": "objects/setdsp~.md"
            },
            {
                "bl.vsaw~": "objects/bl.vsaw~.md"
            },
            {
                "pvgrain~": "objects/pvgrain~.md"
            },
            {
                "out.mc~": "objects/out.mc~.md"
            }
        ],
        "Control I/O": [
            "test/control_i_o/index.md",
            {
                "keyboard": "test/control_i_o/keyboard.md"
            },
            {
                "gemmouse": "test/control_i_o/gemmouse.md"
            },
            {
                "touch.in": "test/control_i_o/touch.in.md"
            },
            {
                "midi.in": "test/control_i_o/midi.in.md"
            },
            {
                "bend.in": "test/control_i_o/bend.in.md"
            },
            {
                "gemtablet": "test/control_i_o/gemtablet.md"
            },
            {
                "keypress": "test/control_i_o/keypress.md"
            },
            {
                "pix_video": "test/control_i_o/pix_video.md"
            },
            {
                "mousestate": "test/control_i_o/mousestate.md"
            },
            {
                "pad": "test/control_i_o/pad.md"
            },
            {
                "canvas.mouse": "test/control_i_o/canvas.mouse.md"
            },
            {
                "gemorb": "test/control_i_o/gemorb.md"
            },
            {
                "numbox~": "test/control_i_o/numbox~.md"
            },
            {
                "mouse": "test/control_i_o/mouse.md"
            },
            {
                "gemw32window": "test/control_i_o/gemw32window.md"
            },
            {
                "mousefilter": "test/control_i_o/mousefilter.md"
            },
            {
                "ctl.in": "test/control_i_o/ctl.in.md"
            },
            {
                "gemkeyboard": "test/control_i_o/gemkeyboard.md"
            },
            {
                "gemsdl2window": "test/control_i_o/gemsdl2window.md"
            },
            {
                "suspedal": "test/control_i_o/suspedal.md"
            },
            {
                "knob": "test/control_i_o/knob.md"
            },
            {
                "mpe.in": "test/control_i_o/mpe.in.md"
            },
            {
                "midi.learn": "test/control_i_o/midi.learn.md"
            },
            {
                "ptouch.in": "test/control_i_o/ptouch.in.md"
            },
            {
                "click": "test/control_i_o/click.md"
            },
            {
                "keymap": "test/control_i_o/keymap.md"
            },
            {
                "gemkeyname": "test/control_i_o/gemkeyname.md"
            },
            {
                "keycode": "test/control_i_o/keycode.md"
            },
            {
                "lpt": "test/control_i_o/lpt.md"
            },
            {
                "keyboard": "objects/keyboard.md"
            },
            {
                "gemmouse": "objects/gemmouse.md"
            },
            {
                "touch.in": "objects/touch.in.md"
            },
            {
                "midi.in": "objects/midi.in.md"
            },
            {
                "bend.in": "objects/bend.in.md"
            },
            {
                "gemtablet": "objects/gemtablet.md"
            },
            {
                "keypress": "objects/keypress.md"
            },
            {
                "pix_video": "objects/pix_video.md"
            },
            {
                "mousestate": "objects/mousestate.md"
            },
            {
                "pad": "objects/pad.md"
            },
            {
                "canvas.mouse": "objects/canvas.mouse.md"
            },
            {
                "gemorb": "objects/gemorb.md"
            },
            {
                "numbox~": "objects/numbox~.md"
            },
            {
                "mouse": "objects/mouse.md"
            },
            {
                "gemw32window": "objects/gemw32window.md"
            },
            {
                "mousefilter": "objects/mousefilter.md"
            },
            {
                "ctl.in": "objects/ctl.in.md"
            },
            {
                "gemkeyboard": "objects/gemkeyboard.md"
            },
            {
                "gemsdl2window": "objects/gemsdl2window.md"
            },
            {
                "suspedal": "objects/suspedal.md"
            },
            {
                "knob": "objects/knob.md"
            },
            {
                "mpe.in": "objects/mpe.in.md"
            },
            {
                "midi.learn": "objects/midi.learn.md"
            },
            {
                "ptouch.in": "objects/ptouch.in.md"
            },
            {
                "click": "objects/click.md"
            },
            {
                "keymap": "objects/keymap.md"
            },
            {
                "gemkeyname": "objects/gemkeyname.md"
            },
            {
                "keycode": "objects/keycode.md"
            },
            {
                "lpt": "objects/lpt.md"
            }
        ],
        "Networking": [
            "test/networking/index.md",
            {
                "pdlink": "test/networking/pdlink.md"
            },
            {
                "sfload": "test/networking/sfload.md"
            },
            {
                "pdlink~": "test/networking/pdlink~.md"
            },
            {
                "osc.receive": "test/networking/osc.receive.md"
            },
            {
                "play.file~": "test/networking/play.file~.md"
            },
            {
                "osc.send": "test/networking/osc.send.md"
            },
            {
                "pdlink": "objects/pdlink.md"
            },
            {
                "sfload": "objects/sfload.md"
            },
            {
                "pdlink~": "objects/pdlink~.md"
            },
            {
                "osc.receive": "objects/osc.receive.md"
            },
            {
                "play.file~": "objects/play.file~.md"
            },
            {
                "osc.send": "objects/osc.send.md"
            }
        ],
        "OSC": [
            "test/osc/index.md",
            {
                "osc.format": "test/osc/osc.format.md"
            },
            {
                "osc.receive": "test/osc/osc.receive.md"
            },
            {
                "osc.send": "test/osc/osc.send.md"
            },
            {
                "osc.route": "test/osc/osc.route.md"
            },
            {
                "osc.parse": "test/osc/osc.parse.md"
            },
            {
                "osc.format": "objects/osc.format.md"
            },
            {
                "osc.receive": "objects/osc.receive.md"
            },
            {
                "osc.send": "objects/osc.send.md"
            },
            {
                "osc.route": "objects/osc.route.md"
            },
            {
                "osc.parse": "objects/osc.parse.md"
            }
        ]
    },
    "Utilities": {
        "General Utilities": [
            "test/general_utilities/index.md",
            {
                "segregate": "test/general_utilities/segregate.md"
            },
            {
                "insert": "test/general_utilities/insert.md"
            },
            {
                "smooth~": "test/general_utilities/smooth~.md"
            },
            {
                "gate": "test/general_utilities/gate.md"
            },
            {
                "initmess": "test/general_utilities/initmess.md"
            },
            {
                "cents2scale": "test/general_utilities/cents2scale.md"
            },
            {
                "capture~": "test/general_utilities/capture~.md"
            },
            {
                "loop": "test/general_utilities/loop.md"
            },
            {
                "float2sig~": "test/general_utilities/float2sig~.md"
            },
            {
                "nop": "test/general_utilities/nop.md"
            },
            {
                "forward": "test/general_utilities/forward.md"
            },
            {
                "slice": "test/general_utilities/slice.md"
            },
            {
                "status": "test/general_utilities/status.md"
            },
            {
                "urn": "test/general_utilities/urn.md"
            },
            {
                "panic": "test/general_utilities/panic.md"
            },
            {
                "changed": "test/general_utilities/changed.md"
            },
            {
                "tabwriter~": "test/general_utilities/tabwriter~.md"
            },
            {
                "relay": "test/general_utilities/relay.md"
            },
            {
                "rawprint": "test/general_utilities/rawprint.md"
            },
            {
                "nyquist~": "test/general_utilities/nyquist~.md"
            },
            {
                "date": "test/general_utilities/date.md"
            },
            {
                "peak": "test/general_utilities/peak.md"
            },
            {
                "default": "test/general_utilities/default.md"
            },
            {
                "swap~": "test/general_utilities/swap~.md"
            },
            {
                "glide2": "test/general_utilities/glide2.md"
            },
            {
                "polymetro": "test/general_utilities/polymetro.md"
            },
            {
                "tosymbol": "test/general_utilities/tosymbol.md"
            },
            {
                "lastvalue~": "test/general_utilities/lastvalue~.md"
            },
            {
                "thresh": "test/general_utilities/thresh.md"
            },
            {
                "smooth2~": "test/general_utilities/smooth2~.md"
            },
            {
                "tabdump": "test/general_utilities/tabdump.md"
            },
            {
                "presets.m": "test/general_utilities/presets.m.md"
            },
            {
                "speedlim": "test/general_utilities/speedlim.md"
            },
            {
                "minmax": "test/general_utilities/minmax.md"
            },
            {
                "zl": "test/general_utilities/zl.md"
            },
            {
                "tap": "test/general_utilities/tap.md"
            },
            {
                "canvas.bounds": "test/general_utilities/canvas.bounds.md"
            },
            {
                "bpm": "test/general_utilities/bpm.md"
            },
            {
                "tabset": "test/general_utilities/tabset.md"
            },
            {
                "route2": "test/general_utilities/route2.md"
            },
            {
                "count": "test/general_utilities/count.md"
            },
            {
                "time": "test/general_utilities/time.md"
            },
            {
                "iterate": "test/general_utilities/iterate.md"
            },
            {
                "sh~": "test/general_utilities/sh~.md"
            },
            {
                "datetime": "test/general_utilities/datetime.md"
            },
            {
                "reverse": "test/general_utilities/reverse.md"
            },
            {
                "wrap": "test/general_utilities/wrap.md"
            },
            {
                "format": "test/general_utilities/format.md"
            },
            {
                "buddy": "test/general_utilities/buddy.md"
            },
            {
                "any2symbol": "test/general_utilities/any2symbol.md"
            },
            {
                "smooth": "test/general_utilities/smooth.md"
            },
            {
                "meter": "test/general_utilities/meter.md"
            },
            {
                "gaterelease": "test/general_utilities/gaterelease.md"
            },
            {
                "unite": "test/general_utilities/unite.md"
            },
            {
                "setdsp~": "test/general_utilities/setdsp~.md"
            },
            {
                "strcmp": "test/general_utilities/strcmp.md"
            },
            {
                "group": "test/general_utilities/group.md"
            },
            {
                "symbol2any": "test/general_utilities/symbol2any.md"
            },
            {
                "routeall": "test/general_utilities/routeall.md"
            },
            {
                "mux": "test/general_utilities/mux.md"
            },
            {
                "sr~": "test/general_utilities/sr~.md"
            },
            {
                "next": "test/general_utilities/next.md"
            },
            {
                "gatehold": "test/general_utilities/gatehold.md"
            },
            {
                "spell": "test/general_utilities/spell.md"
            },
            {
                "length": "test/general_utilities/length.md"
            },
            {
                "break": "test/general_utilities/break.md"
            },
            {
                "replace": "test/general_utilities/replace.md"
            },
            {
                "atoi": "test/general_utilities/atoi.md"
            },
            {
                "counter": "test/general_utilities/counter.md"
            },
            {
                "cycle": "test/general_utilities/cycle.md"
            },
            {
                "rad2hz": "test/general_utilities/rad2hz.md"
            },
            {
                "split": "test/general_utilities/split.md"
            },
            {
                "selector": "test/general_utilities/selector.md"
            },
            {
                "amean": "test/general_utilities/amean.md"
            },
            {
                "fontsize": "test/general_utilities/fontsize.md"
            },
            {
                "count~": "test/general_utilities/count~.md"
            },
            {
                "loadbanger": "test/general_utilities/loadbanger.md"
            },
            {
                "operating_system": "test/general_utilities/operating_system.md"
            },
            {
                "gatehold~": "test/general_utilities/gatehold~.md"
            },
            {
                "gaterelease~": "test/general_utilities/gaterelease~.md"
            },
            {
                "accum": "test/general_utilities/accum.md"
            },
            {
                "sig2float~": "test/general_utilities/sig2float~.md"
            },
            {
                "listfunnel": "test/general_utilities/listfunnel.md"
            },
            {
                "capture": "test/general_utilities/capture.md"
            },
            {
                "canvas.edit": "test/general_utilities/canvas.edit.md"
            },
            {
                "message": "test/general_utilities/message.md"
            },
            {
                "bangdiv": "test/general_utilities/bangdiv.md"
            },
            {
                "morph": "test/general_utilities/morph.md"
            },
            {
                "openfile": "test/general_utilities/openfile.md"
            },
            {
                "substitute": "test/general_utilities/substitute.md"
            },
            {
                "dec2hex": "test/general_utilities/dec2hex.md"
            },
            {
                "meter~": "test/general_utilities/meter~.md"
            },
            {
                "atof": "test/general_utilities/atof.md"
            },
            {
                "rand.dist": "test/general_utilities/rand.dist.md"
            },
            {
                "scale~": "test/general_utilities/scale~.md"
            },
            {
                "separate": "test/general_utilities/separate.md"
            },
            {
                "tempo": "test/general_utilities/tempo.md"
            },
            {
                "cents2ratio~": "test/general_utilities/cents2ratio~.md"
            },
            {
                "pick": "test/general_utilities/pick.md"
            },
            {
                "loadmess": "test/general_utilities/loadmess.md"
            },
            {
                "hex2dec": "test/general_utilities/hex2dec.md"
            },
            {
                "iter": "test/general_utilities/iter.md"
            },
            {
                "bangbang": "test/general_utilities/bangbang.md"
            },
            {
                "slew": "test/general_utilities/slew.md"
            },
            {
                "glide": "test/general_utilities/glide.md"
            },
            {
                "limit": "test/general_utilities/limit.md"
            },
            {
                "nop~": "test/general_utilities/nop~.md"
            },
            {
                "clip": "test/general_utilities/clip.md"
            },
            {
                "swap2": "test/general_utilities/swap2.md"
            },
            {
                "chrono": "test/general_utilities/chrono.md"
            },
            {
                "remove": "test/general_utilities/remove.md"
            },
            {
                "rescale~": "test/general_utilities/rescale~.md"
            },
            {
                "onebang": "test/general_utilities/onebang.md"
            },
            {
                "uzi": "test/general_utilities/uzi.md"
            },
            {
                "bitsafe~": "test/general_utilities/bitsafe~.md"
            },
            {
                "else": "test/general_utilities/else.md"
            },
            {
                "l2s": "test/general_utilities/l2s.md"
            },
            {
                "gemargs": "test/general_utilities/gemargs.md"
            },
            {
                "clock": "test/general_utilities/clock.md"
            },
            {
                "rescale": "test/general_utilities/rescale.md"
            },
            {
                "bitnormal~": "test/general_utilities/bitnormal~.md"
            },
            {
                "router": "test/general_utilities/router.md"
            },
            {
                "order": "test/general_utilities/order.md"
            },
            {
                "notedur2ratio": "test/general_utilities/notedur2ratio.md"
            },
            {
                "note2midi": "test/general_utilities/note2midi.md"
            },
            {
                "rad2deg": "test/general_utilities/rad2deg.md"
            },
            {
                "list2int": "test/general_utilities/list2int.md"
            },
            {
                "avg": "test/general_utilities/avg.md"
            },
            {
                "trig2bang": "test/general_utilities/trig2bang.md"
            },
            {
                "sprintf": "test/general_utilities/sprintf.md"
            },
            {
                "segregate": "objects/segregate.md"
            },
            {
                "insert": "objects/insert.md"
            },
            {
                "smooth~": "objects/smooth~.md"
            },
            {
                "gate": "objects/gate.md"
            },
            {
                "initmess": "objects/initmess.md"
            },
            {
                "cents2scale": "objects/cents2scale.md"
            },
            {
                "capture~": "objects/capture~.md"
            },
            {
                "loop": "objects/loop.md"
            },
            {
                "float2sig~": "objects/float2sig~.md"
            },
            {
                "nop": "objects/nop.md"
            },
            {
                "forward": "objects/forward.md"
            },
            {
                "slice": "objects/slice.md"
            },
            {
                "status": "objects/status.md"
            },
            {
                "urn": "objects/urn.md"
            },
            {
                "panic": "objects/panic.md"
            },
            {
                "changed": "objects/changed.md"
            },
            {
                "tabwriter~": "objects/tabwriter~.md"
            },
            {
                "relay": "objects/relay.md"
            },
            {
                "zexy_index": "objects/zexy_index.md"
            },
            {
                "rawprint": "objects/rawprint.md"
            },
            {
                "nyquist~": "objects/nyquist~.md"
            },
            {
                "date": "objects/date.md"
            },
            {
                "peak": "objects/peak.md"
            },
            {
                "default": "objects/default.md"
            },
            {
                "swap~": "objects/swap~.md"
            },
            {
                "glide2": "objects/glide2.md"
            },
            {
                "polymetro": "objects/polymetro.md"
            },
            {
                "tosymbol": "objects/tosymbol.md"
            },
            {
                "lastvalue~": "objects/lastvalue~.md"
            },
            {
                "thresh": "objects/thresh.md"
            },
            {
                "smooth2~": "objects/smooth2~.md"
            },
            {
                "tabdump": "objects/tabdump.md"
            },
            {
                "presets.m": "objects/presets.m.md"
            },
            {
                "speedlim": "objects/speedlim.md"
            },
            {
                "minmax": "objects/minmax.md"
            },
            {
                "zl": "objects/zl.md"
            },
            {
                "tap": "objects/tap.md"
            },
            {
                "canvas.bounds": "objects/canvas.bounds.md"
            },
            {
                "bpm": "objects/bpm.md"
            },
            {
                "tabset": "objects/tabset.md"
            },
            {
                "route2": "objects/route2.md"
            },
            {
                "count": "objects/count.md"
            },
            {
                "time": "objects/time.md"
            },
            {
                "iterate": "objects/iterate.md"
            },
            {
                "sh~": "objects/sh~.md"
            },
            {
                "datetime": "objects/datetime.md"
            },
            {
                "reverse": "objects/reverse.md"
            },
            {
                "wrap": "objects/wrap.md"
            },
            {
                "format": "objects/format.md"
            },
            {
                "buddy": "objects/buddy.md"
            },
            {
                "any2symbol": "objects/any2symbol.md"
            },
            {
                "smooth": "objects/smooth.md"
            },
            {
                "meter": "objects/meter.md"
            },
            {
                "gaterelease": "objects/gaterelease.md"
            },
            {
                "unite": "objects/unite.md"
            },
            {
                "setdsp~": "objects/setdsp~.md"
            },
            {
                "strcmp": "objects/strcmp.md"
            },
            {
                "group": "objects/group.md"
            },
            {
                "symbol2any": "objects/symbol2any.md"
            },
            {
                "routeall": "objects/routeall.md"
            },
            {
                "mux": "objects/mux.md"
            },
            {
                "sr~": "objects/sr~.md"
            },
            {
                "next": "objects/next.md"
            },
            {
                "gatehold": "objects/gatehold.md"
            },
            {
                "spell": "objects/spell.md"
            },
            {
                "length": "objects/length.md"
            },
            {
                "break": "objects/break.md"
            },
            {
                "replace": "objects/replace.md"
            },
            {
                "atoi": "objects/atoi.md"
            },
            {
                "counter": "objects/counter.md"
            },
            {
                "cycle": "objects/cycle.md"
            },
            {
                "rad2hz": "objects/rad2hz.md"
            },
            {
                "split": "objects/split.md"
            },
            {
                "selector": "objects/selector.md"
            },
            {
                "amean": "objects/amean.md"
            },
            {
                "fontsize": "objects/fontsize.md"
            },
            {
                "count~": "objects/count~.md"
            },
            {
                "loadbanger": "objects/loadbanger.md"
            },
            {
                "operating_system": "objects/operating_system.md"
            },
            {
                "gatehold~": "objects/gatehold~.md"
            },
            {
                "gaterelease~": "objects/gaterelease~.md"
            },
            {
                "accum": "objects/accum.md"
            },
            {
                "sig2float~": "objects/sig2float~.md"
            },
            {
                "listfunnel": "objects/listfunnel.md"
            },
            {
                "capture": "objects/capture.md"
            },
            {
                "canvas.edit": "objects/canvas.edit.md"
            },
            {
                "message": "objects/message.md"
            },
            {
                "bangdiv": "objects/bangdiv.md"
            },
            {
                "morph": "objects/morph.md"
            },
            {
                "openfile": "objects/openfile.md"
            },
            {
                "substitute": "objects/substitute.md"
            },
            {
                "dec2hex": "objects/dec2hex.md"
            },
            {
                "meter~": "objects/meter~.md"
            },
            {
                "atof": "objects/atof.md"
            },
            {
                "rand.dist": "objects/rand.dist.md"
            },
            {
                "scale~": "objects/scale~.md"
            },
            {
                "separate": "objects/separate.md"
            },
            {
                "tempo": "objects/tempo.md"
            },
            {
                "cents2ratio~": "objects/cents2ratio~.md"
            },
            {
                "pick": "objects/pick.md"
            },
            {
                "loadmess": "objects/loadmess.md"
            },
            {
                "hex2dec": "objects/hex2dec.md"
            },
            {
                "iter": "objects/iter.md"
            },
            {
                "bangbang": "objects/bangbang.md"
            },
            {
                "slew": "objects/slew.md"
            },
            {
                "glide": "objects/glide.md"
            },
            {
                "limit": "objects/limit.md"
            },
            {
                "nop~": "objects/nop~.md"
            },
            {
                "clip": "objects/clip.md"
            },
            {
                "swap2": "objects/swap2.md"
            },
            {
                "chrono": "objects/chrono.md"
            },
            {
                "remove": "objects/remove.md"
            },
            {
                "rescale~": "objects/rescale~.md"
            },
            {
                "onebang": "objects/onebang.md"
            },
            {
                "uzi": "objects/uzi.md"
            },
            {
                "bitsafe~": "objects/bitsafe~.md"
            },
            {
                "else": "objects/else.md"
            },
            {
                "l2s": "objects/l2s.md"
            },
            {
                "gemargs": "objects/gemargs.md"
            },
            {
                "clock": "objects/clock.md"
            },
            {
                "rescale": "objects/rescale.md"
            },
            {
                "bitnormal~": "objects/bitnormal~.md"
            },
            {
                "router": "objects/router.md"
            },
            {
                "order": "objects/order.md"
            },
            {
                "notedur2ratio": "objects/notedur2ratio.md"
            },
            {
                "note2midi": "objects/note2midi.md"
            },
            {
                "rad2deg": "objects/rad2deg.md"
            },
            {
                "list2int": "objects/list2int.md"
            },
            {
                "avg": "objects/avg.md"
            },
            {
                "trig2bang": "objects/trig2bang.md"
            },
            {
                "sprintf": "objects/sprintf.md"
            }
        ],
        "Data Structures": [
            "test/data_structures/index.md",
            {
                "pack": "test/data_structures/pack.md"
            },
            {
                "symbol2list": "test/data_structures/symbol2list.md"
            },
            {
                "presets": "test/data_structures/presets.md"
            },
            {
                "insert": "test/data_structures/insert.md"
            },
            {
                "sfload": "test/data_structures/sfload.md"
            },
            {
                "list2symbol": "test/data_structures/list2symbol.md"
            },
            {
                "glue": "test/data_structures/glue.md"
            },
            {
                "store": "test/data_structures/store.md"
            },
            {
                "s2l": "test/data_structures/s2l.md"
            },
            {
                "wave~": "test/data_structures/wave~.md"
            },
            {
                "any2list": "test/data_structures/any2list.md"
            },
            {
                "pack2": "test/data_structures/pack2.md"
            },
            {
                "lister": "test/data_structures/lister.md"
            },
            {
                "index~": "test/data_structures/index~.md"
            },
            {
                "slice": "test/data_structures/slice.md"
            },
            {
                "urn": "test/data_structures/urn.md"
            },
            {
                "buffer": "test/data_structures/buffer.md"
            },
            {
                "tabwriter~": "test/data_structures/tabwriter~.md"
            },
            {
                "lookup~": "test/data_structures/lookup~.md"
            },
            {
                "stack": "test/data_structures/stack.md"
            },
            {
                "unpack": "test/data_structures/unpack.md"
            },
            {
                "gemlist": "test/data_structures/gemlist.md"
            },
            {
                "msgfile": "test/data_structures/msgfile.md"
            },
            {
                "repack": "test/data_structures/repack.md"
            },
            {
                "merge": "test/data_structures/merge.md"
            },
            {
                "unpack~": "test/data_structures/unpack~.md"
            },
            {
                "pix_buffer_write": "test/data_structures/pix_buffer_write.md"
            },
            {
                "thresh": "test/data_structures/thresh.md"
            },
            {
                "tabdump": "test/data_structures/tabdump.md"
            },
            {
                "poke~": "test/data_structures/poke~.md"
            },
            {
                "sort": "test/data_structures/sort.md"
            },
            {
                "modelfiler": "test/data_structures/modelfiler.md"
            },
            {
                "niagara": "test/data_structures/niagara.md"
            },
            {
                "zl": "test/data_structures/zl.md"
            },
            {
                "float2bits": "test/data_structures/float2bits.md"
            },
            {
                "delace": "test/data_structures/delace.md"
            },
            {
                "pack~": "test/data_structures/pack~.md"
            },
            {
                "tabset": "test/data_structures/tabset.md"
            },
            {
                "iterate": "test/data_structures/iterate.md"
            },
            {
                "unmerge": "test/data_structures/unmerge.md"
            },
            {
                "join": "test/data_structures/join.md"
            },
            {
                "buffer~": "test/data_structures/buffer~.md"
            },
            {
                "multi.vsl": "test/data_structures/multi.vsl.md"
            },
            {
                "funbuff": "test/data_structures/funbuff.md"
            },
            {
                "histo": "test/data_structures/histo.md"
            },
            {
                "matchbox": "test/data_structures/matchbox.md"
            },
            {
                "group": "test/data_structures/group.md"
            },
            {
                "var": "test/data_structures/var.md"
            },
            {
                "l2i": "test/data_structures/l2i.md"
            },
            {
                "pak": "test/data_structures/pak.md"
            },
            {
                "l": "test/data_structures/l.md"
            },
            {
                "length": "test/data_structures/length.md"
            },
            {
                "break": "test/data_structures/break.md"
            },
            {
                "coll": "test/data_structures/coll.md"
            },
            {
                "record~": "test/data_structures/record~.md"
            },
            {
                "replace": "test/data_structures/replace.md"
            },
            {
                "tabreader": "test/data_structures/tabreader.md"
            },
            {
                "fifop": "test/data_structures/fifop.md"
            },
            {
                "unjoin": "test/data_structures/unjoin.md"
            },
            {
                "offer": "test/data_structures/offer.md"
            },
            {
                "capture": "test/data_structures/capture.md"
            },
            {
                "listfind": "test/data_structures/listfind.md"
            },
            {
                "lifop": "test/data_structures/lifop.md"
            },
            {
                "histogram": "test/data_structures/histogram.md"
            },
            {
                "lace": "test/data_structures/lace.md"
            },
            {
                "peek~": "test/data_structures/peek~.md"
            },
            {
                "tabgen": "test/data_structures/tabgen.md"
            },
            {
                "tabminmax": "test/data_structures/tabminmax.md"
            },
            {
                "a.rotate": "test/data_structures/a.rotate.md"
            },
            {
                "uniqsym": "test/data_structures/uniqsym.md"
            },
            {
                "remove": "test/data_structures/remove.md"
            },
            {
                "packel": "test/data_structures/packel.md"
            },
            {
                "pix_buffer": "test/data_structures/pix_buffer.md"
            },
            {
                "linear_path": "test/data_structures/linear_path.md"
            },
            {
                "l2s": "test/data_structures/l2s.md"
            },
            {
                "pmpd": "test/data_structures/pmpd.md"
            },
            {
                "order": "test/data_structures/order.md"
            },
            {
                "pv": "test/data_structures/pv.md"
            },
            {
                "table": "test/data_structures/table.md"
            },
            {
                "list2lists": "test/data_structures/list2lists.md"
            },
            {
                "batch.write~": "test/data_structures/batch.write~.md"
            },
            {
                "lastvalue": "test/data_structures/lastvalue.md"
            },
            {
                "pack": "objects/pack.md"
            },
            {
                "symbol2list": "objects/symbol2list.md"
            },
            {
                "presets": "objects/presets.md"
            },
            {
                "insert": "objects/insert.md"
            },
            {
                "sfload": "objects/sfload.md"
            },
            {
                "list2symbol": "objects/list2symbol.md"
            },
            {
                "glue": "objects/glue.md"
            },
            {
                "store": "objects/store.md"
            },
            {
                "s2l": "objects/s2l.md"
            },
            {
                "wave~": "objects/wave~.md"
            },
            {
                "any2list": "objects/any2list.md"
            },
            {
                "pack2": "objects/pack2.md"
            },
            {
                "lister": "objects/lister.md"
            },
            {
                "index~": "objects/index~.md"
            },
            {
                "slice": "objects/slice.md"
            },
            {
                "urn": "objects/urn.md"
            },
            {
                "buffer": "objects/buffer.md"
            },
            {
                "tabwriter~": "objects/tabwriter~.md"
            },
            {
                "lookup~": "objects/lookup~.md"
            },
            {
                "stack": "objects/stack.md"
            },
            {
                "zexy_index": "objects/zexy_index.md"
            },
            {
                "unpack": "objects/unpack.md"
            },
            {
                "gemlist": "objects/gemlist.md"
            },
            {
                "msgfile": "objects/msgfile.md"
            },
            {
                "repack": "objects/repack.md"
            },
            {
                "merge": "objects/merge.md"
            },
            {
                "unpack~": "objects/unpack~.md"
            },
            {
                "pix_buffer_write": "objects/pix_buffer_write.md"
            },
            {
                "thresh": "objects/thresh.md"
            },
            {
                "tabdump": "objects/tabdump.md"
            },
            {
                "poke~": "objects/poke~.md"
            },
            {
                "sort": "objects/sort.md"
            },
            {
                "modelfiler": "objects/modelfiler.md"
            },
            {
                "niagara": "objects/niagara.md"
            },
            {
                "zl": "objects/zl.md"
            },
            {
                "float2bits": "objects/float2bits.md"
            },
            {
                "delace": "objects/delace.md"
            },
            {
                "pack~": "objects/pack~.md"
            },
            {
                "tabset": "objects/tabset.md"
            },
            {
                "iterate": "objects/iterate.md"
            },
            {
                "unmerge": "objects/unmerge.md"
            },
            {
                "join": "objects/join.md"
            },
            {
                "buffer~": "objects/buffer~.md"
            },
            {
                "multi.vsl": "objects/multi.vsl.md"
            },
            {
                "funbuff": "objects/funbuff.md"
            },
            {
                "histo": "objects/histo.md"
            },
            {
                "matchbox": "objects/matchbox.md"
            },
            {
                "group": "objects/group.md"
            },
            {
                "var": "objects/var.md"
            },
            {
                "l2i": "objects/l2i.md"
            },
            {
                "pak": "objects/pak.md"
            },
            {
                "l": "objects/l.md"
            },
            {
                "length": "objects/length.md"
            },
            {
                "break": "objects/break.md"
            },
            {
                "coll": "objects/coll.md"
            },
            {
                "record~": "objects/record~.md"
            },
            {
                "replace": "objects/replace.md"
            },
            {
                "tabreader": "objects/tabreader.md"
            },
            {
                "fifop": "objects/fifop.md"
            },
            {
                "unjoin": "objects/unjoin.md"
            },
            {
                "offer": "objects/offer.md"
            },
            {
                "capture": "objects/capture.md"
            },
            {
                "listfind": "objects/listfind.md"
            },
            {
                "lifop": "objects/lifop.md"
            },
            {
                "histogram": "objects/histogram.md"
            },
            {
                "lace": "objects/lace.md"
            },
            {
                "peek~": "objects/peek~.md"
            },
            {
                "tabgen": "objects/tabgen.md"
            },
            {
                "tabminmax": "objects/tabminmax.md"
            },
            {
                "a.rotate": "objects/a.rotate.md"
            },
            {
                "uniqsym": "objects/uniqsym.md"
            },
            {
                "remove": "objects/remove.md"
            },
            {
                "packel": "objects/packel.md"
            },
            {
                "pix_buffer": "objects/pix_buffer.md"
            },
            {
                "linear_path": "objects/linear_path.md"
            },
            {
                "l2s": "objects/l2s.md"
            },
            {
                "pmpd": "objects/pmpd.md"
            },
            {
                "order": "objects/order.md"
            },
            {
                "pv": "objects/pv.md"
            },
            {
                "table": "objects/table.md"
            },
            {
                "list2lists": "objects/list2lists.md"
            },
            {
                "batch.write~": "objects/batch.write~.md"
            },
            {
                "lastvalue": "objects/lastvalue.md"
            }
        ],
        "MultiThreading": [
            "test/multithreading/index.md",
            {
                "abs.pd~": "test/multithreading/abs.pd~.md"
            },
            {
                "pix_image": "test/multithreading/pix_image.md"
            },
            {
                "coll": "test/multithreading/coll.md"
            },
            {
                "abs.pd~": "objects/abs.pd~.md"
            },
            {
                "pix_image": "objects/pix_image.md"
            },
            {
                "coll": "objects/coll.md"
            }
        ],
        "Patching": [
            "test/patching/index.md",
            {
                "universal": "test/patching/universal.md"
            },
            {
                "properties": "test/patching/properties.md"
            },
            {
                "canvas.setname": "test/patching/canvas.setname.md"
            },
            {
                "funnel": "test/patching/funnel.md"
            },
            {
                "canvas.zoom": "test/patching/canvas.zoom.md"
            },
            {
                "append": "test/patching/append.md"
            },
            {
                "retrieve": "test/patching/retrieve.md"
            },
            {
                "route2": "test/patching/route2.md"
            },
            {
                "buddy": "test/patching/buddy.md"
            },
            {
                "canvas.gop": "test/patching/canvas.gop.md"
            },
            {
                "canvas.vis": "test/patching/canvas.vis.md"
            },
            {
                "a2l": "test/patching/a2l.md"
            },
            {
                "canvas.active": "test/patching/canvas.active.md"
            },
            {
                "anal": "test/patching/anal.md"
            },
            {
                "synth~": "test/patching/synth~.md"
            },
            {
                "canvas.name": "test/patching/canvas.name.md"
            },
            {
                "args": "test/patching/args.md"
            },
            {
                "loadbanger": "test/patching/loadbanger.md"
            },
            {
                "canvas.edit": "test/patching/canvas.edit.md"
            },
            {
                "message": "test/patching/message.md"
            },
            {
                "dollsym": "test/patching/dollsym.md"
            },
            {
                "loadmess": "test/patching/loadmess.md"
            },
            {
                "click": "test/patching/click.md"
            },
            {
                "gemargs": "test/patching/gemargs.md"
            },
            {
                "active": "test/patching/active.md"
            },
            {
                "pv": "test/patching/pv.md"
            },
            {
                "universal": "objects/universal.md"
            },
            {
                "properties": "objects/properties.md"
            },
            {
                "canvas.setname": "objects/canvas.setname.md"
            },
            {
                "funnel": "objects/funnel.md"
            },
            {
                "canvas.zoom": "objects/canvas.zoom.md"
            },
            {
                "append": "objects/append.md"
            },
            {
                "retrieve": "objects/retrieve.md"
            },
            {
                "route2": "objects/route2.md"
            },
            {
                "buddy": "objects/buddy.md"
            },
            {
                "canvas.gop": "objects/canvas.gop.md"
            },
            {
                "canvas.vis": "objects/canvas.vis.md"
            },
            {
                "a2l": "objects/a2l.md"
            },
            {
                "canvas.active": "objects/canvas.active.md"
            },
            {
                "anal": "objects/anal.md"
            },
            {
                "synth~": "objects/synth~.md"
            },
            {
                "canvas.name": "objects/canvas.name.md"
            },
            {
                "args": "objects/args.md"
            },
            {
                "loadbanger": "objects/loadbanger.md"
            },
            {
                "canvas.edit": "objects/canvas.edit.md"
            },
            {
                "message": "objects/message.md"
            },
            {
                "dollsym": "objects/dollsym.md"
            },
            {
                "loadmess": "objects/loadmess.md"
            },
            {
                "click": "objects/click.md"
            },
            {
                "gemargs": "objects/gemargs.md"
            },
            {
                "active": "objects/active.md"
            },
            {
                "pv": "objects/pv.md"
            }
        ],
        "Multichannel": [
            "test/multichannel/index.md",
            {
                "out~": "test/multichannel/out~.md"
            },
            {
                "quantizer~": "test/multichannel/quantizer~.md"
            },
            {
                "unmerge~": "test/multichannel/unmerge~.md"
            },
            {
                "xgate~": "test/multichannel/xgate~.md"
            },
            {
                "out8~": "test/multichannel/out8~.md"
            },
            {
                "tabplayer~": "test/multichannel/tabplayer~.md"
            },
            {
                "wt2d~": "test/multichannel/wt2d~.md"
            },
            {
                "drive.m~": "test/multichannel/drive.m~.md"
            },
            {
                "trunc~": "test/multichannel/trunc~.md"
            },
            {
                "car2pol~": "test/multichannel/car2pol~.md"
            },
            {
                "xgate2~": "test/multichannel/xgate2~.md"
            },
            {
                "white~": "test/multichannel/white~.md"
            },
            {
                "smooth~": "test/multichannel/smooth~.md"
            },
            {
                "crusher.m~": "test/multichannel/crusher.m~.md"
            },
            {
                "cosine~": "test/multichannel/cosine~.md"
            },
            {
                "plate.rev~": "test/multichannel/plate.rev~.md"
            },
            {
                "envgen~": "test/multichannel/envgen~.md"
            },
            {
                "slew~": "test/multichannel/slew~.md"
            },
            {
                "free.rev~": "test/multichannel/free.rev~.md"
            },
            {
                "bl.tri~": "test/multichannel/bl.tri~.md"
            },
            {
                "bl.imp2~": "test/multichannel/bl.imp2~.md"
            },
            {
                "floor~": "test/multichannel/floor~.md"
            },
            {
                "float2sig~": "test/multichannel/float2sig~.md"
            },
            {
                "impulse~": "test/multichannel/impulse~.md"
            },
            {
                "wave~": "test/multichannel/wave~.md"
            },
            {
                "sf-play_record": "test/multichannel/sf-play_record.md"
            },
            {
                "gray~": "test/multichannel/gray~.md"
            },
            {
                "vocoder~": "test/multichannel/vocoder~.md"
            },
            {
                "mono.rev~": "test/multichannel/mono.rev~.md"
            },
            {
                "tabreader~": "test/multichannel/tabreader~.md"
            },
            {
                "resonbank~": "test/multichannel/resonbank~.md"
            },
            {
                "index~": "test/multichannel/index~.md"
            },
            {
                "stereo.rev~": "test/multichannel/stereo.rev~.md"
            },
            {
                "autofade.mc~": "test/multichannel/autofade.mc~.md"
            },
            {
                "vsaw~": "test/multichannel/vsaw~.md"
            },
            {
                "dust~": "test/multichannel/dust~.md"
            },
            {
                "autofade2.mc~": "test/multichannel/autofade2.mc~.md"
            },
            {
                "pan~": "test/multichannel/pan~.md"
            },
            {
                "pmpd~": "test/multichannel/pmpd~.md"
            },
            {
                "pan4~": "test/multichannel/pan4~.md"
            },
            {
                "trig.delay~": "test/multichannel/trig.delay~.md"
            },
            {
                "pm4~": "test/multichannel/pm4~.md"
            },
            {
                "delace~": "test/multichannel/delace~.md"
            },
            {
                "xgate.mc~": "test/multichannel/xgate.mc~.md"
            },
            {
                "nchs~": "test/multichannel/nchs~.md"
            },
            {
                "mag~": "test/multichannel/mag~.md"
            },
            {
                "tabwriter~": "test/multichannel/tabwriter~.md"
            },
            {
                "parabolic~": "test/multichannel/parabolic~.md"
            },
            {
                "rotate~": "test/multichannel/rotate~.md"
            },
            {
                "matrix~": "test/multichannel/matrix~.md"
            },
            {
                "slew2~": "test/multichannel/slew2~.md"
            },
            {
                "wavetable~": "test/multichannel/wavetable~.md"
            },
            {
                "scope3d~": "test/multichannel/scope3d~.md"
            },
            {
                "autofade2~": "test/multichannel/autofade2~.md"
            },
            {
                "oscbank~": "test/multichannel/oscbank~.md"
            },
            {
                "rand.f~": "test/multichannel/rand.f~.md"
            },
            {
                "sigs~": "test/multichannel/sigs~.md"
            },
            {
                "spread.mc~": "test/multichannel/spread.mc~.md"
            },
            {
                "bl.imp~": "test/multichannel/bl.imp~.md"
            },
            {
                "asr~": "test/multichannel/asr~.md"
            },
            {
                "fold~": "test/multichannel/fold~.md"
            },
            {
                "smooth2~": "test/multichannel/smooth2~.md"
            },
            {
                "pm2~": "test/multichannel/pm2~.md"
            },
            {
                "pm6~": "test/multichannel/pm6~.md"
            },
            {
                "balance~": "test/multichannel/balance~.md"
            },
            {
                "bl.saw~": "test/multichannel/bl.saw~.md"
            },
            {
                "gatedelay~": "test/multichannel/gatedelay~.md"
            },
            {
                "meter8~": "test/multichannel/meter8~.md"
            },
            {
                "xfade~": "test/multichannel/xfade~.md"
            },
            {
                "function~": "test/multichannel/function~.md"
            },
            {
                "lag~": "test/multichannel/lag~.md"
            },
            {
                "sin~": "test/multichannel/sin~.md"
            },
            {
                "adsr~": "test/multichannel/adsr~.md"
            },
            {
                "ping.pong~": "test/multichannel/ping.pong~.md"
            },
            {
                "out4~": "test/multichannel/out4~.md"
            },
            {
                "buffer~": "test/multichannel/buffer~.md"
            },
            {
                "ceil~": "test/multichannel/ceil~.md"
            },
            {
                "sample~": "test/multichannel/sample~.md"
            },
            {
                "db2lin~": "test/multichannel/db2lin~.md"
            },
            {
                "impulse2~": "test/multichannel/impulse2~.md"
            },
            {
                "gaussian~": "test/multichannel/gaussian~.md"
            },
            {
                "glide~": "test/multichannel/glide~.md"
            },
            {
                "xgate2.mc~": "test/multichannel/xgate2.mc~.md"
            },
            {
                "spread~": "test/multichannel/spread~.md"
            },
            {
                "mtx~": "test/multichannel/mtx~.md"
            },
            {
                "lace~": "test/multichannel/lace~.md"
            },
            {
                "play~": "test/multichannel/play~.md"
            },
            {
                "level.m~": "test/multichannel/level.m~.md"
            },
            {
                "pol2car~": "test/multichannel/pol2car~.md"
            },
            {
                "voices~": "test/multichannel/voices~.md"
            },
            {
                "xselect2.mc~": "test/multichannel/xselect2.mc~.md"
            },
            {
                "rampnoise~": "test/multichannel/rampnoise~.md"
            },
            {
                "synth~": "test/multichannel/synth~.md"
            },
            {
                "randpulse~": "test/multichannel/randpulse~.md"
            },
            {
                "glide2~": "test/multichannel/glide2~.md"
            },
            {
                "square~": "test/multichannel/square~.md"
            },
            {
                "merge~": "test/multichannel/merge~.md"
            },
            {
                "sum~": "test/multichannel/sum~.md"
            },
            {
                "cusp~": "test/multichannel/cusp~.md"
            },
            {
                "wrap2~": "test/multichannel/wrap2~.md"
            },
            {
                "stepnoise~": "test/multichannel/stepnoise~.md"
            },
            {
                "fm~": "test/multichannel/fm~.md"
            },
            {
                "lag2~": "test/multichannel/lag2~.md"
            },
            {
                "f2s~": "test/multichannel/f2s~.md"
            },
            {
                "dbgain~": "test/multichannel/dbgain~.md"
            },
            {
                "record~": "test/multichannel/record~.md"
            },
            {
                "pick~": "test/multichannel/pick~.md"
            },
            {
                "tabreader": "test/multichannel/tabreader.md"
            },
            {
                "pan.mc~": "test/multichannel/pan.mc~.md"
            },
            {
                "delay.m~": "test/multichannel/delay.m~.md"
            },
            {
                "pulse~": "test/multichannel/pulse~.md"
            },
            {
                "pm~": "test/multichannel/pm~.md"
            },
            {
                "selector": "test/multichannel/selector.md"
            },
            {
                "level~": "test/multichannel/level~.md"
            },
            {
                "ratio2cents~": "test/multichannel/ratio2cents~.md"
            },
            {
                "gbman~": "test/multichannel/gbman~.md"
            },
            {
                "gatehold~": "test/multichannel/gatehold~.md"
            },
            {
                "gaterelease~": "test/multichannel/gaterelease~.md"
            },
            {
                "sig2float~": "test/multichannel/sig2float~.md"
            },
            {
                "dust2~": "test/multichannel/dust2~.md"
            },
            {
                "select~": "test/multichannel/select~.md"
            },
            {
                "repeat~": "test/multichannel/repeat~.md"
            },
            {
                "mtx.mc~": "test/multichannel/mtx.mc~.md"
            },
            {
                "gain~": "test/multichannel/gain~.md"
            },
            {
                "tri~": "test/multichannel/tri~.md"
            },
            {
                "bl.square~": "test/multichannel/bl.square~.md"
            },
            {
                "batch.rec~": "test/multichannel/batch.rec~.md"
            },
            {
                "resonbank2~": "test/multichannel/resonbank2~.md"
            },
            {
                "bpbank~": "test/multichannel/bpbank~.md"
            },
            {
                "peek~": "test/multichannel/peek~.md"
            },
            {
                "gain2~": "test/multichannel/gain2~.md"
            },
            {
                "cents2ratio~": "test/multichannel/cents2ratio~.md"
            },
            {
                "send2~": "test/multichannel/send2~.md"
            },
            {
                "rotate.mc~": "test/multichannel/rotate.mc~.md"
            },
            {
                "decay~": "test/multichannel/decay~.md"
            },
            {
                "rand.i~": "test/multichannel/rand.i~.md"
            },
            {
                "fbsine~": "test/multichannel/fbsine~.md"
            },
            {
                "pvoc.player~": "test/multichannel/pvoc.player~.md"
            },
            {
                "saw~": "test/multichannel/saw~.md"
            },
            {
                "saw2~": "test/multichannel/saw2~.md"
            },
            {
                "limiter~": "test/multichannel/limiter~.md"
            },
            {
                "sine~": "test/multichannel/sine~.md"
            },
            {
                "vco.m~": "test/multichannel/vco.m~.md"
            },
            {
                "meter4~": "test/multichannel/meter4~.md"
            },
            {
                "velvet~": "test/multichannel/velvet~.md"
            },
            {
                "samps2ms~": "test/multichannel/samps2ms~.md"
            },
            {
                "rescale~": "test/multichannel/rescale~.md"
            },
            {
                "xselect.mc~": "test/multichannel/xselect.mc~.md"
            },
            {
                "xselect2~": "test/multichannel/xselect2~.md"
            },
            {
                "mix4~": "test/multichannel/mix4~.md"
            },
            {
                "vca.m~": "test/multichannel/vca.m~.md"
            },
            {
                "pimp~": "test/multichannel/pimp~.md"
            },
            {
                "bitnormal~": "test/multichannel/bitnormal~.md"
            },
            {
                "ms2samps~": "test/multichannel/ms2samps~.md"
            },
            {
                "lin2db~": "test/multichannel/lin2db~.md"
            },
            {
                "bl.osc~": "test/multichannel/bl.osc~.md"
            },
            {
                "xfade.mc~": "test/multichannel/xfade.mc~.md"
            },
            {
                "pmpd3d~": "test/multichannel/pmpd3d~.md"
            },
            {
                "out.mc~": "test/multichannel/out.mc~.md"
            },
            {
                "autofade~": "test/multichannel/autofade~.md"
            },
            {
                "multiline~": "test/multichannel/multiline~.md"
            },
            {
                "slice~": "test/multichannel/slice~.md"
            },
            {
                "randpulse2~": "test/multichannel/randpulse2~.md"
            },
            {
                "adsr.m~": "test/multichannel/adsr.m~.md"
            },
            {
                "op~": "test/multichannel/op~.md"
            },
            {
                "get~": "test/multichannel/get~.md"
            },
            {
                "out~": "objects/out~.md"
            },
            {
                "quantizer~": "objects/quantizer~.md"
            },
            {
                "unmerge~": "objects/unmerge~.md"
            },
            {
                "xgate~": "objects/xgate~.md"
            },
            {
                "out8~": "objects/out8~.md"
            },
            {
                "tabplayer~": "objects/tabplayer~.md"
            },
            {
                "wt2d~": "objects/wt2d~.md"
            },
            {
                "drive.m~": "objects/drive.m~.md"
            },
            {
                "trunc~": "objects/trunc~.md"
            },
            {
                "car2pol~": "objects/car2pol~.md"
            },
            {
                "xgate2~": "objects/xgate2~.md"
            },
            {
                "white~": "objects/white~.md"
            },
            {
                "smooth~": "objects/smooth~.md"
            },
            {
                "crusher.m~": "objects/crusher.m~.md"
            },
            {
                "cosine~": "objects/cosine~.md"
            },
            {
                "plate.rev~": "objects/plate.rev~.md"
            },
            {
                "envgen~": "objects/envgen~.md"
            },
            {
                "slew~": "objects/slew~.md"
            },
            {
                "free.rev~": "objects/free.rev~.md"
            },
            {
                "bl.tri~": "objects/bl.tri~.md"
            },
            {
                "bl.imp2~": "objects/bl.imp2~.md"
            },
            {
                "floor~": "objects/floor~.md"
            },
            {
                "float2sig~": "objects/float2sig~.md"
            },
            {
                "impulse~": "objects/impulse~.md"
            },
            {
                "wave~": "objects/wave~.md"
            },
            {
                "sf-play_record": "objects/sf-play_record.md"
            },
            {
                "gray~": "objects/gray~.md"
            },
            {
                "vocoder~": "objects/vocoder~.md"
            },
            {
                "mono.rev~": "objects/mono.rev~.md"
            },
            {
                "tabreader~": "objects/tabreader~.md"
            },
            {
                "resonbank~": "objects/resonbank~.md"
            },
            {
                "index~": "objects/index~.md"
            },
            {
                "stereo.rev~": "objects/stereo.rev~.md"
            },
            {
                "autofade.mc~": "objects/autofade.mc~.md"
            },
            {
                "vsaw~": "objects/vsaw~.md"
            },
            {
                "dust~": "objects/dust~.md"
            },
            {
                "autofade2.mc~": "objects/autofade2.mc~.md"
            },
            {
                "pan~": "objects/pan~.md"
            },
            {
                "pmpd~": "objects/pmpd~.md"
            },
            {
                "pan4~": "objects/pan4~.md"
            },
            {
                "trig.delay~": "objects/trig.delay~.md"
            },
            {
                "pm4~": "objects/pm4~.md"
            },
            {
                "delace~": "objects/delace~.md"
            },
            {
                "xgate.mc~": "objects/xgate.mc~.md"
            },
            {
                "nchs~": "objects/nchs~.md"
            },
            {
                "mag~": "objects/mag~.md"
            },
            {
                "tabwriter~": "objects/tabwriter~.md"
            },
            {
                "parabolic~": "objects/parabolic~.md"
            },
            {
                "rotate~": "objects/rotate~.md"
            },
            {
                "matrix~": "objects/matrix~.md"
            },
            {
                "slew2~": "objects/slew2~.md"
            },
            {
                "wavetable~": "objects/wavetable~.md"
            },
            {
                "scope3d~": "objects/scope3d~.md"
            },
            {
                "autofade2~": "objects/autofade2~.md"
            },
            {
                "oscbank~": "objects/oscbank~.md"
            },
            {
                "rand.f~": "objects/rand.f~.md"
            },
            {
                "sigs~": "objects/sigs~.md"
            },
            {
                "spread.mc~": "objects/spread.mc~.md"
            },
            {
                "bl.imp~": "objects/bl.imp~.md"
            },
            {
                "asr~": "objects/asr~.md"
            },
            {
                "fold~": "objects/fold~.md"
            },
            {
                "smooth2~": "objects/smooth2~.md"
            },
            {
                "pm2~": "objects/pm2~.md"
            },
            {
                "pm6~": "objects/pm6~.md"
            },
            {
                "balance~": "objects/balance~.md"
            },
            {
                "bl.saw~": "objects/bl.saw~.md"
            },
            {
                "gatedelay~": "objects/gatedelay~.md"
            },
            {
                "meter8~": "objects/meter8~.md"
            },
            {
                "xfade~": "objects/xfade~.md"
            },
            {
                "function~": "objects/function~.md"
            },
            {
                "lag~": "objects/lag~.md"
            },
            {
                "sin~": "objects/sin~.md"
            },
            {
                "adsr~": "objects/adsr~.md"
            },
            {
                "ping.pong~": "objects/ping.pong~.md"
            },
            {
                "out4~": "objects/out4~.md"
            },
            {
                "buffer~": "objects/buffer~.md"
            },
            {
                "ceil~": "objects/ceil~.md"
            },
            {
                "sample~": "objects/sample~.md"
            },
            {
                "db2lin~": "objects/db2lin~.md"
            },
            {
                "impulse2~": "objects/impulse2~.md"
            },
            {
                "gaussian~": "objects/gaussian~.md"
            },
            {
                "glide~": "objects/glide~.md"
            },
            {
                "xgate2.mc~": "objects/xgate2.mc~.md"
            },
            {
                "spread~": "objects/spread~.md"
            },
            {
                "mtx~": "objects/mtx~.md"
            },
            {
                "lace~": "objects/lace~.md"
            },
            {
                "play~": "objects/play~.md"
            },
            {
                "level.m~": "objects/level.m~.md"
            },
            {
                "pol2car~": "objects/pol2car~.md"
            },
            {
                "voices~": "objects/voices~.md"
            },
            {
                "xselect2.mc~": "objects/xselect2.mc~.md"
            },
            {
                "rampnoise~": "objects/rampnoise~.md"
            },
            {
                "synth~": "objects/synth~.md"
            },
            {
                "randpulse~": "objects/randpulse~.md"
            },
            {
                "glide2~": "objects/glide2~.md"
            },
            {
                "square~": "objects/square~.md"
            },
            {
                "merge~": "objects/merge~.md"
            },
            {
                "sum~": "objects/sum~.md"
            },
            {
                "cusp~": "objects/cusp~.md"
            },
            {
                "wrap2~": "objects/wrap2~.md"
            },
            {
                "stepnoise~": "objects/stepnoise~.md"
            },
            {
                "fm~": "objects/fm~.md"
            },
            {
                "lag2~": "objects/lag2~.md"
            },
            {
                "f2s~": "objects/f2s~.md"
            },
            {
                "dbgain~": "objects/dbgain~.md"
            },
            {
                "record~": "objects/record~.md"
            },
            {
                "pick~": "objects/pick~.md"
            },
            {
                "tabreader": "objects/tabreader.md"
            },
            {
                "pan.mc~": "objects/pan.mc~.md"
            },
            {
                "delay.m~": "objects/delay.m~.md"
            },
            {
                "pulse~": "objects/pulse~.md"
            },
            {
                "pm~": "objects/pm~.md"
            },
            {
                "selector": "objects/selector.md"
            },
            {
                "level~": "objects/level~.md"
            },
            {
                "ratio2cents~": "objects/ratio2cents~.md"
            },
            {
                "gbman~": "objects/gbman~.md"
            },
            {
                "gatehold~": "objects/gatehold~.md"
            },
            {
                "gaterelease~": "objects/gaterelease~.md"
            },
            {
                "sig2float~": "objects/sig2float~.md"
            },
            {
                "dust2~": "objects/dust2~.md"
            },
            {
                "select~": "objects/select~.md"
            },
            {
                "repeat~": "objects/repeat~.md"
            },
            {
                "mtx.mc~": "objects/mtx.mc~.md"
            },
            {
                "gain~": "objects/gain~.md"
            },
            {
                "tri~": "objects/tri~.md"
            },
            {
                "bl.square~": "objects/bl.square~.md"
            },
            {
                "batch.rec~": "objects/batch.rec~.md"
            },
            {
                "resonbank2~": "objects/resonbank2~.md"
            },
            {
                "bpbank~": "objects/bpbank~.md"
            },
            {
                "peek~": "objects/peek~.md"
            },
            {
                "gain2~": "objects/gain2~.md"
            },
            {
                "cents2ratio~": "objects/cents2ratio~.md"
            },
            {
                "send2~": "objects/send2~.md"
            },
            {
                "rotate.mc~": "objects/rotate.mc~.md"
            },
            {
                "decay~": "objects/decay~.md"
            },
            {
                "rand.i~": "objects/rand.i~.md"
            },
            {
                "fbsine~": "objects/fbsine~.md"
            },
            {
                "pvoc.player~": "objects/pvoc.player~.md"
            },
            {
                "saw~": "objects/saw~.md"
            },
            {
                "saw2~": "objects/saw2~.md"
            },
            {
                "limiter~": "objects/limiter~.md"
            },
            {
                "sine~": "objects/sine~.md"
            },
            {
                "vco.m~": "objects/vco.m~.md"
            },
            {
                "meter4~": "objects/meter4~.md"
            },
            {
                "velvet~": "objects/velvet~.md"
            },
            {
                "samps2ms~": "objects/samps2ms~.md"
            },
            {
                "rescale~": "objects/rescale~.md"
            },
            {
                "xselect.mc~": "objects/xselect.mc~.md"
            },
            {
                "xselect2~": "objects/xselect2~.md"
            },
            {
                "mix4~": "objects/mix4~.md"
            },
            {
                "vca.m~": "objects/vca.m~.md"
            },
            {
                "pimp~": "objects/pimp~.md"
            },
            {
                "bitnormal~": "objects/bitnormal~.md"
            },
            {
                "ms2samps~": "objects/ms2samps~.md"
            },
            {
                "lin2db~": "objects/lin2db~.md"
            },
            {
                "bl.osc~": "objects/bl.osc~.md"
            },
            {
                "xfade.mc~": "objects/xfade.mc~.md"
            },
            {
                "pmpd3d~": "objects/pmpd3d~.md"
            },
            {
                "out.mc~": "objects/out.mc~.md"
            },
            {
                "autofade~": "objects/autofade~.md"
            },
            {
                "multiline~": "objects/multiline~.md"
            },
            {
                "slice~": "objects/slice~.md"
            },
            {
                "randpulse2~": "objects/randpulse2~.md"
            },
            {
                "adsr.m~": "objects/adsr.m~.md"
            },
            {
                "op~": "objects/op~.md"
            },
            {
                "get~": "objects/get~.md"
            }
        ],
        "Text": [
            "test/text/index.md",
            {
                "symbol2list": "test/text/symbol2list.md"
            },
            {
                "regex-help": "test/text/regex-help.md"
            },
            {
                "list2symbol": "test/text/list2symbol.md"
            },
            {
                "s2l": "test/text/s2l.md"
            },
            {
                "makesymbol": "test/text/makesymbol.md"
            },
            {
                "fromsymbol": "test/text/fromsymbol.md"
            },
            {
                "stack": "test/text/stack.md"
            },
            {
                "msgfile": "test/text/msgfile.md"
            },
            {
                "tosymbol": "test/text/tosymbol.md"
            },
            {
                "regex": "test/text/regex.md"
            },
            {
                "freadln": "test/text/freadln.md"
            },
            {
                "format": "test/text/format.md"
            },
            {
                "text3d": "test/text/text3d.md"
            },
            {
                "unite": "test/text/unite.md"
            },
            {
                "comment": "test/text/comment.md"
            },
            {
                "strcmp": "test/text/strcmp.md"
            },
            {
                "spell": "test/text/spell.md"
            },
            {
                "messbox": "test/text/messbox.md"
            },
            {
                "atoi": "test/text/atoi.md"
            },
            {
                "midi2note": "test/text/midi2note.md"
            },
            {
                "dollsym": "test/text/dollsym.md"
            },
            {
                "lace": "test/text/lace.md"
            },
            {
                "atof": "test/text/atof.md"
            },
            {
                "display": "test/text/display.md"
            },
            {
                "textextruded": "test/text/textextruded.md"
            },
            {
                "separate": "test/text/separate.md"
            },
            {
                "uniqsym": "test/text/uniqsym.md"
            },
            {
                "fwriteln": "test/text/fwriteln.md"
            },
            {
                "note2midi": "test/text/note2midi.md"
            },
            {
                "sprintf": "test/text/sprintf.md"
            },
            {
                "note": "test/text/note.md"
            },
            {
                "symbol2list": "objects/symbol2list.md"
            },
            {
                "regex-help": "objects/regex-help.md"
            },
            {
                "list2symbol": "objects/list2symbol.md"
            },
            {
                "s2l": "objects/s2l.md"
            },
            {
                "makesymbol": "objects/makesymbol.md"
            },
            {
                "fromsymbol": "objects/fromsymbol.md"
            },
            {
                "stack": "objects/stack.md"
            },
            {
                "msgfile": "objects/msgfile.md"
            },
            {
                "tosymbol": "objects/tosymbol.md"
            },
            {
                "regex": "objects/regex.md"
            },
            {
                "freadln": "objects/freadln.md"
            },
            {
                "format": "objects/format.md"
            },
            {
                "text3d": "objects/text3d.md"
            },
            {
                "unite": "objects/unite.md"
            },
            {
                "comment": "objects/comment.md"
            },
            {
                "strcmp": "objects/strcmp.md"
            },
            {
                "spell": "objects/spell.md"
            },
            {
                "messbox": "objects/messbox.md"
            },
            {
                "atoi": "objects/atoi.md"
            },
            {
                "midi2note": "objects/midi2note.md"
            },
            {
                "dollsym": "objects/dollsym.md"
            },
            {
                "lace": "objects/lace.md"
            },
            {
                "atof": "objects/atof.md"
            },
            {
                "display": "objects/display.md"
            },
            {
                "textextruded": "objects/textextruded.md"
            },
            {
                "separate": "objects/separate.md"
            },
            {
                "uniqsym": "objects/uniqsym.md"
            },
            {
                "fwriteln": "objects/fwriteln.md"
            },
            {
                "note2midi": "objects/note2midi.md"
            },
            {
                "sprintf": "objects/sprintf.md"
            },
            {
                "note": "objects/note.md"
            }
        ],
        "Debugging": []
    },
    "Interfaces": {
        "GUI": [
            "test/gui/index.md",
            {
                "keyboard": "test/gui/keyboard.md"
            },
            {
                "universal": "test/gui/universal.md"
            },
            {
                "mtx.ctl": "test/gui/mtx.ctl.md"
            },
            {
                "canvas.zoom": "test/gui/canvas.zoom.md"
            },
            {
                "range.hsl": "test/gui/range.hsl.md"
            },
            {
                "drum.seq": "test/gui/drum.seq.md"
            },
            {
                "button": "test/gui/button.md"
            },
            {
                "scope3d~": "test/gui/scope3d~.md"
            },
            {
                "number~": "test/gui/number~.md"
            },
            {
                "pad": "test/gui/pad.md"
            },
            {
                "meter8~": "test/gui/meter8~.md"
            },
            {
                "canvas.mouse": "test/gui/canvas.mouse.md"
            },
            {
                "numbox~": "test/gui/numbox~.md"
            },
            {
                "multi.vsl": "test/gui/multi.vsl.md"
            },
            {
                "function": "test/gui/function.md"
            },
            {
                "meter": "test/gui/meter.md"
            },
            {
                "setdsp~": "test/gui/setdsp~.md"
            },
            {
                "comment": "test/gui/comment.md"
            },
            {
                "pic": "test/gui/pic.md"
            },
            {
                "messbox": "test/gui/messbox.md"
            },
            {
                "bicoeff": "test/gui/bicoeff.md"
            },
            {
                "scope~": "test/gui/scope~.md"
            },
            {
                "biplot": "test/gui/biplot.md"
            },
            {
                "popmenu": "test/gui/popmenu.md"
            },
            {
                "canvas.pos": "test/gui/canvas.pos.md"
            },
            {
                "knob": "test/gui/knob.md"
            },
            {
                "display": "test/gui/display.md"
            },
            {
                "graph~": "test/gui/graph~.md"
            },
            {
                "slider2d": "test/gui/slider2d.md"
            },
            {
                "meter2~": "test/gui/meter2~.md"
            },
            {
                "meter4~": "test/gui/meter4~.md"
            },
            {
                "colors": "test/gui/colors.md"
            },
            {
                "zbiplot": "test/gui/zbiplot.md"
            },
            {
                "note": "test/gui/note.md"
            },
            {
                "keyboard": "objects/keyboard.md"
            },
            {
                "universal": "objects/universal.md"
            },
            {
                "mtx.ctl": "objects/mtx.ctl.md"
            },
            {
                "canvas.zoom": "objects/canvas.zoom.md"
            },
            {
                "range.hsl": "objects/range.hsl.md"
            },
            {
                "drum.seq": "objects/drum.seq.md"
            },
            {
                "button": "objects/button.md"
            },
            {
                "scope3d~": "objects/scope3d~.md"
            },
            {
                "number~": "objects/number~.md"
            },
            {
                "pad": "objects/pad.md"
            },
            {
                "meter8~": "objects/meter8~.md"
            },
            {
                "canvas.mouse": "objects/canvas.mouse.md"
            },
            {
                "numbox~": "objects/numbox~.md"
            },
            {
                "multi.vsl": "objects/multi.vsl.md"
            },
            {
                "function": "objects/function.md"
            },
            {
                "meter": "objects/meter.md"
            },
            {
                "setdsp~": "objects/setdsp~.md"
            },
            {
                "comment": "objects/comment.md"
            },
            {
                "pic": "objects/pic.md"
            },
            {
                "messbox": "objects/messbox.md"
            },
            {
                "bicoeff": "objects/bicoeff.md"
            },
            {
                "scope~": "objects/scope~.md"
            },
            {
                "biplot": "objects/biplot.md"
            },
            {
                "popmenu": "objects/popmenu.md"
            },
            {
                "canvas.pos": "objects/canvas.pos.md"
            },
            {
                "knob": "objects/knob.md"
            },
            {
                "display": "objects/display.md"
            },
            {
                "graph~": "objects/graph~.md"
            },
            {
                "slider2d": "objects/slider2d.md"
            },
            {
                "meter2~": "objects/meter2~.md"
            },
            {
                "meter4~": "objects/meter4~.md"
            },
            {
                "colors": "objects/colors.md"
            },
            {
                "zbiplot": "objects/zbiplot.md"
            },
            {
                "note": "objects/note.md"
            }
        ],
        "Graphics": [
            "test/graphics/index.md",
            {
                "pix_rgb2hsv": "test/graphics/pix_rgb2hsv.md"
            },
            {
                "pix_zoom": "test/graphics/pix_zoom.md"
            },
            {
                "gemreceive": "test/graphics/gemreceive.md"
            },
            {
                "pix_threshold_bernsen": "test/graphics/pix_threshold_bernsen.md"
            },
            {
                "gemcocoawindow": "test/graphics/gemcocoawindow.md"
            },
            {
                "gemmouse": "test/graphics/gemmouse.md"
            },
            {
                "cuboid": "test/graphics/cuboid.md"
            },
            {
                "pix_roi": "test/graphics/pix_roi.md"
            },
            {
                "gemwin": "test/graphics/gemwin.md"
            },
            {
                "rectangle": "test/graphics/rectangle.md"
            },
            {
                "model": "test/graphics/model.md"
            },
            {
                "pix_flip": "test/graphics/pix_flip.md"
            },
            {
                "spectrograph~": "test/graphics/spectrograph~.md"
            },
            {
                "pix_normalize": "test/graphics/pix_normalize.md"
            },
            {
                "pix_share_read": "test/graphics/pix_share_read.md"
            },
            {
                "pix_coordinate": "test/graphics/pix_coordinate.md"
            },
            {
                "GLdefine": "test/graphics/GLdefine.md"
            },
            {
                "pix_writer": "test/graphics/pix_writer.md"
            },
            {
                "pix_delay": "test/graphics/pix_delay.md"
            },
            {
                "color": "test/graphics/color.md"
            },
            {
                "circle": "test/graphics/circle.md"
            },
            {
                "part_head": "test/graphics/part_head.md"
            },
            {
                "pix_color": "test/graphics/pix_color.md"
            },
            {
                "gemlist_info": "test/graphics/gemlist_info.md"
            },
            {
                "pix_texture": "test/graphics/pix_texture.md"
            },
            {
                "pix_multiblob": "test/graphics/pix_multiblob.md"
            },
            {
                "gemglxwindow": "test/graphics/gemglxwindow.md"
            },
            {
                "gemhead": "test/graphics/gemhead.md"
            },
            {
                "mtx.ctl": "test/graphics/mtx.ctl.md"
            },
            {
                "ambient": "test/graphics/ambient.md"
            },
            {
                "pix_blobtracker": "test/graphics/pix_blobtracker.md"
            },
            {
                "gemframebuffer": "test/graphics/gemframebuffer.md"
            },
            {
                "hsv2rgb": "test/graphics/hsv2rgb.md"
            },
            {
                "pix_refraction": "test/graphics/pix_refraction.md"
            },
            {
                "pix_biquad": "test/graphics/pix_biquad.md"
            },
            {
                "cone": "test/graphics/cone.md"
            },
            {
                "polygon": "test/graphics/polygon.md"
            },
            {
                "pix_multitexture": "test/graphics/pix_multitexture.md"
            },
            {
                "shininess": "test/graphics/shininess.md"
            },
            {
                "pix_add": "test/graphics/pix_add.md"
            },
            {
                "teapot": "test/graphics/teapot.md"
            },
            {
                "pix_blur": "test/graphics/pix_blur.md"
            },
            {
                "GEMgl": "test/graphics/GEMgl.md"
            },
            {
                "pix_video": "test/graphics/pix_video.md"
            },
            {
                "pix_convolve": "test/graphics/pix_convolve.md"
            },
            {
                "pix_hsv2rgb": "test/graphics/pix_hsv2rgb.md"
            },
            {
                "vertex_program": "test/graphics/vertex_program.md"
            },
            {
                "colorSquare": "test/graphics/colorSquare.md"
            },
            {
                "pix_equal": "test/graphics/pix_equal.md"
            },
            {
                "pix_buffer_filmopen": "test/graphics/pix_buffer_filmopen.md"
            },
            {
                "pix_a_2grey": "test/graphics/pix_a_2grey.md"
            },
            {
                "pix_grey": "test/graphics/pix_grey.md"
            },
            {
                "glsl_geometry": "test/graphics/glsl_geometry.md"
            },
            {
                "scope3d~": "test/graphics/scope3d~.md"
            },
            {
                "pix_metaimage": "test/graphics/pix_metaimage.md"
            },
            {
                "pix_coloralpha": "test/graphics/pix_coloralpha.md"
            },
            {
                "ambientRGB": "test/graphics/ambientRGB.md"
            },
            {
                "gemlist": "test/graphics/gemlist.md"
            },
            {
                "pix_colormatrix": "test/graphics/pix_colormatrix.md"
            },
            {
                "scopeXYZ~": "test/graphics/scopeXYZ~.md"
            },
            {
                "pix_multiimage": "test/graphics/pix_multiimage.md"
            },
            {
                "sphere": "test/graphics/sphere.md"
            },
            {
                "ortho": "test/graphics/ortho.md"
            },
            {
                "pix_movie": "test/graphics/pix_movie.md"
            },
            {
                "pix_duotone": "test/graphics/pix_duotone.md"
            },
            {
                "rubber": "test/graphics/rubber.md"
            },
            {
                "diffuseRGB": "test/graphics/diffuseRGB.md"
            },
            {
                "pix_hit": "test/graphics/pix_hit.md"
            },
            {
                "pix_buffer_write": "test/graphics/pix_buffer_write.md"
            },
            {
                "mesh_square": "test/graphics/mesh_square.md"
            },
            {
                "yuv2rgb": "test/graphics/yuv2rgb.md"
            },
            {
                "rgb2hsv": "test/graphics/rgb2hsv.md"
            },
            {
                "scale": "test/graphics/scale.md"
            },
            {
                "pix_indycam": "test/graphics/pix_indycam.md"
            },
            {
                "pix_colorclassify": "test/graphics/pix_colorclassify.md"
            },
            {
                "pix_rgba": "test/graphics/pix_rgba.md"
            },
            {
                "part_targetcolor": "test/graphics/part_targetcolor.md"
            },
            {
                "curve": "test/graphics/curve.md"
            },
            {
                "part_gravity": "test/graphics/part_gravity.md"
            },
            {
                "modelfiler": "test/graphics/modelfiler.md"
            },
            {
                "torus": "test/graphics/torus.md"
            },
            {
                "gemmacoswindow": "test/graphics/gemmacoswindow.md"
            },
            {
                "tLink3D": "test/graphics/tLink3D.md"
            },
            {
                "pix_invert": "test/graphics/pix_invert.md"
            },
            {
                "part_information": "test/graphics/part_information.md"
            },
            {
                "pix_buffer_read": "test/graphics/pix_buffer_read.md"
            },
            {
                "part_targetsize": "test/graphics/part_targetsize.md"
            },
            {
                "part_follow": "test/graphics/part_follow.md"
            },
            {
                "pix_dot": "test/graphics/pix_dot.md"
            },
            {
                "pix_motionblur": "test/graphics/pix_motionblur.md"
            },
            {
                "shearYZ": "test/graphics/shearYZ.md"
            },
            {
                "part_source": "test/graphics/part_source.md"
            },
            {
                "gemorb": "test/graphics/gemorb.md"
            },
            {
                "shearZX": "test/graphics/shearZX.md"
            },
            {
                "part_damp": "test/graphics/part_damp.md"
            },
            {
                "render_trigger": "test/graphics/render_trigger.md"
            },
            {
                "pmpd3d": "test/graphics/pmpd3d.md"
            },
            {
                "pix_draw": "test/graphics/pix_draw.md"
            },
            {
                "pix_record": "test/graphics/pix_record.md"
            },
            {
                "fragment_program": "test/graphics/fragment_program.md"
            },
            {
                "pix_pix2sig~": "test/graphics/pix_pix2sig~.md"
            },
            {
                "pix_subtract": "test/graphics/pix_subtract.md"
            },
            {
                "sphere3d": "test/graphics/sphere3d.md"
            },
            {
                "pix_posterize": "test/graphics/pix_posterize.md"
            },
            {
                "translate": "test/graphics/translate.md"
            },
            {
                "pix_roll": "test/graphics/pix_roll.md"
            },
            {
                "shearXZ": "test/graphics/shearXZ.md"
            },
            {
                "part_info": "test/graphics/part_info.md"
            },
            {
                "light": "test/graphics/light.md"
            },
            {
                "shearYX": "test/graphics/shearYX.md"
            },
            {
                "pix_gain": "test/graphics/pix_gain.md"
            },
            {
                "pix_composite": "test/graphics/pix_composite.md"
            },
            {
                "part_sink": "test/graphics/part_sink.md"
            },
            {
                "newWave": "test/graphics/newWave.md"
            },
            {
                "part_orbitpoint": "test/graphics/part_orbitpoint.md"
            },
            {
                "text3d": "test/graphics/text3d.md"
            },
            {
                "pix_diff": "test/graphics/pix_diff.md"
            },
            {
                "pix_aging": "test/graphics/pix_aging.md"
            },
            {
                "gemmacwindow": "test/graphics/gemmacwindow.md"
            },
            {
                "multimodel": "test/graphics/multimodel.md"
            },
            {
                "part_render": "test/graphics/part_render.md"
            },
            {
                "primTri": "test/graphics/primTri.md"
            },
            {
                "gemw32window": "test/graphics/gemw32window.md"
            },
            {
                "gemrepeat": "test/graphics/gemrepeat.md"
            },
            {
                "accumrotate": "test/graphics/accumrotate.md"
            },
            {
                "pix_convert": "test/graphics/pix_convert.md"
            },
            {
                "gemlist_matrix": "test/graphics/gemlist_matrix.md"
            },
            {
                "pix_bitmask": "test/graphics/pix_bitmask.md"
            },
            {
                "rotate": "test/graphics/rotate.md"
            },
            {
                "world_light": "test/graphics/world_light.md"
            },
            {
                "pix_rtx": "test/graphics/pix_rtx.md"
            },
            {
                "part_size": "test/graphics/part_size.md"
            },
            {
                "gemmanager": "test/graphics/gemmanager.md"
            },
            {
                "scaleXYZ": "test/graphics/scaleXYZ.md"
            },
            {
                "pix_image": "test/graphics/pix_image.md"
            },
            {
                "pic": "test/graphics/pic.md"
            },
            {
                "pix_offset": "test/graphics/pix_offset.md"
            },
            {
                "pix_deinterlace": "test/graphics/pix_deinterlace.md"
            },
            {
                "pix_fiducialtrack": "test/graphics/pix_fiducialtrack.md"
            },
            {
                "disk": "test/graphics/disk.md"
            },
            {
                "pix_clearblock": "test/graphics/pix_clearblock.md"
            },
            {
                "part_velcone": "test/graphics/part_velcone.md"
            },
            {
                "pix_set": "test/graphics/pix_set.md"
            },
            {
                "mesh_line": "test/graphics/mesh_line.md"
            },
            {
                "part_killold": "test/graphics/part_killold.md"
            },
            {
                "surface3d": "test/graphics/surface3d.md"
            },
            {
                "pix_drum": "test/graphics/pix_drum.md"
            },
            {
                "pix_mix": "test/graphics/pix_mix.md"
            },
            {
                "pix_histo": "test/graphics/pix_histo.md"
            },
            {
                "pix_sig2pix~": "test/graphics/pix_sig2pix~.md"
            },
            {
                "pix_background": "test/graphics/pix_background.md"
            },
            {
                "pqtorusknots": "test/graphics/pqtorusknots.md"
            },
            {
                "pix_noise": "test/graphics/pix_noise.md"
            },
            {
                "pix_imageInPlace": "test/graphics/pix_imageInPlace.md"
            },
            {
                "pix_movement": "test/graphics/pix_movement.md"
            },
            {
                "separator": "test/graphics/separator.md"
            },
            {
                "pix_frei0r": "test/graphics/pix_frei0r.md"
            },
            {
                "emission": "test/graphics/emission.md"
            },
            {
                "depth": "test/graphics/depth.md"
            },
            {
                "diffuse": "test/graphics/diffuse.md"
            },
            {
                "part_killslow": "test/graphics/part_killslow.md"
            },
            {
                "Gem": "test/graphics/Gem.md"
            },
            {
                "polygon_smooth": "test/graphics/polygon_smooth.md"
            },
            {
                "glsl": "test/graphics/glsl.md"
            },
            {
                "pix_chroma_key": "test/graphics/pix_chroma_key.md"
            },
            {
                "pix_contrast": "test/graphics/pix_contrast.md"
            },
            {
                "rgb2yuv": "test/graphics/rgb2yuv.md"
            },
            {
                "textoutline": "test/graphics/textoutline.md"
            },
            {
                "part_draw": "test/graphics/part_draw.md"
            },
            {
                "alpha": "test/graphics/alpha.md"
            },
            {
                "pix_2grey": "test/graphics/pix_2grey.md"
            },
            {
                "pix_colorreduce": "test/graphics/pix_colorreduce.md"
            },
            {
                "shearZY": "test/graphics/shearZY.md"
            },
            {
                "imageVert": "test/graphics/imageVert.md"
            },
            {
                "trapezoid": "test/graphics/trapezoid.md"
            },
            {
                "pix_film": "test/graphics/pix_film.md"
            },
            {
                "scope~": "test/graphics/scope~.md"
            },
            {
                "pix_mask": "test/graphics/pix_mask.md"
            },
            {
                "part_vertex": "test/graphics/part_vertex.md"
            },
            {
                "biplot": "test/graphics/biplot.md"
            },
            {
                "ripple": "test/graphics/ripple.md"
            },
            {
                "gemsdl2window": "test/graphics/gemsdl2window.md"
            },
            {
                "pix_threshold": "test/graphics/pix_threshold.md"
            },
            {
                "spline_path": "test/graphics/spline_path.md"
            },
            {
                "glsl_vertex": "test/graphics/glsl_vertex.md"
            },
            {
                "cylinder": "test/graphics/cylinder.md"
            },
            {
                "pix_levels": "test/graphics/pix_levels.md"
            },
            {
                "slideSquares": "test/graphics/slideSquares.md"
            },
            {
                "curve3d": "test/graphics/curve3d.md"
            },
            {
                "pix_backlight": "test/graphics/pix_backlight.md"
            },
            {
                "part_velsphere": "test/graphics/part_velsphere.md"
            },
            {
                "canvas.pos": "test/graphics/canvas.pos.md"
            },
            {
                "emissionRGB": "test/graphics/emissionRGB.md"
            },
            {
                "translateXYZ": "test/graphics/translateXYZ.md"
            },
            {
                "triangle": "test/graphics/triangle.md"
            },
            {
                "pix_freeframe": "test/graphics/pix_freeframe.md"
            },
            {
                "pix_share_write": "test/graphics/pix_share_write.md"
            },
            {
                "gemsdlwindow": "test/graphics/gemsdlwindow.md"
            },
            {
                "gemglfw3window": "test/graphics/gemglfw3window.md"
            },
            {
                "pix_buf": "test/graphics/pix_buf.md"
            },
            {
                "graph~": "test/graphics/graph~.md"
            },
            {
                "textextruded": "test/graphics/textextruded.md"
            },
            {
                "pix_rectangle": "test/graphics/pix_rectangle.md"
            },
            {
                "glsl_fragment": "test/graphics/glsl_fragment.md"
            },
            {
                "pix_mean_color": "test/graphics/pix_mean_color.md"
            },
            {
                "pix_multiply": "test/graphics/pix_multiply.md"
            },
            {
                "pix_lumaoffset": "test/graphics/pix_lumaoffset.md"
            },
            {
                "pix_resize": "test/graphics/pix_resize.md"
            },
            {
                "rotateXYZ": "test/graphics/rotateXYZ.md"
            },
            {
                "pix_dump": "test/graphics/pix_dump.md"
            },
            {
                "glsl_program": "test/graphics/glsl_program.md"
            },
            {
                "slider2d": "test/graphics/slider2d.md"
            },
            {
                "pix_compare": "test/graphics/pix_compare.md"
            },
            {
                "gemglutwindow": "test/graphics/gemglutwindow.md"
            },
            {
                "pix_info": "test/graphics/pix_info.md"
            },
            {
                "pix_data": "test/graphics/pix_data.md"
            },
            {
                "pix_crop": "test/graphics/pix_crop.md"
            },
            {
                "cube": "test/graphics/cube.md"
            },
            {
                "pix_rds": "test/graphics/pix_rds.md"
            },
            {
                "pix_tIIR": "test/graphics/pix_tIIR.md"
            },
            {
                "specularRGB": "test/graphics/specularRGB.md"
            },
            {
                "pix_blob": "test/graphics/pix_blob.md"
            },
            {
                "pix_yuv": "test/graphics/pix_yuv.md"
            },
            {
                "pix_buffer": "test/graphics/pix_buffer.md"
            },
            {
                "linear_path": "test/graphics/linear_path.md"
            },
            {
                "pix_snap": "test/graphics/pix_snap.md"
            },
            {
                "text2d": "test/graphics/text2d.md"
            },
            {
                "shearXY": "test/graphics/shearXY.md"
            },
            {
                "specular": "test/graphics/specular.md"
            },
            {
                "colorRGB": "test/graphics/colorRGB.md"
            },
            {
                "pix_puzzle": "test/graphics/pix_puzzle.md"
            },
            {
                "spot_light": "test/graphics/spot_light.md"
            },
            {
                "square": "test/graphics/square.md"
            },
            {
                "pix_scanline": "test/graphics/pix_scanline.md"
            },
            {
                "pix_kaleidoscope": "test/graphics/pix_kaleidoscope.md"
            },
            {
                "camera": "test/graphics/camera.md"
            },
            {
                "gemcubeframebuffer": "test/graphics/gemcubeframebuffer.md"
            },
            {
                "pix_movement2": "test/graphics/pix_movement2.md"
            },
            {
                "gemglfw2window": "test/graphics/gemglfw2window.md"
            },
            {
                "pix_alpha": "test/graphics/pix_alpha.md"
            },
            {
                "_textbbox": "test/graphics/_textbbox.md"
            },
            {
                "part_color": "test/graphics/part_color.md"
            },
            {
                "pix_halftone": "test/graphics/pix_halftone.md"
            },
            {
                "pix_curve": "test/graphics/pix_curve.md"
            },
            {
                "pix_mano": "test/graphics/pix_mano.md"
            },
            {
                "part_velocity": "test/graphics/part_velocity.md"
            },
            {
                "pix_write": "test/graphics/pix_write.md"
            },
            {
                "gemvertexbuffer": "test/graphics/gemvertexbuffer.md"
            },
            {
                "tube": "test/graphics/tube.md"
            },
            {
                "part_move": "test/graphics/part_move.md"
            },
            {
                "pix_takealpha": "test/graphics/pix_takealpha.md"
            },
            {
                "pix_snap2tex": "test/graphics/pix_snap2tex.md"
            },
            {
                "pix_test": "test/graphics/pix_test.md"
            },
            {
                "pix_rgb2hsv": "objects/pix_rgb2hsv.md"
            },
            {
                "pix_zoom": "objects/pix_zoom.md"
            },
            {
                "gemreceive": "objects/gemreceive.md"
            },
            {
                "pix_threshold_bernsen": "objects/pix_threshold_bernsen.md"
            },
            {
                "gemcocoawindow": "objects/gemcocoawindow.md"
            },
            {
                "gemmouse": "objects/gemmouse.md"
            },
            {
                "cuboid": "objects/cuboid.md"
            },
            {
                "pix_roi": "objects/pix_roi.md"
            },
            {
                "gemwin": "objects/gemwin.md"
            },
            {
                "rectangle": "objects/rectangle.md"
            },
            {
                "model": "objects/model.md"
            },
            {
                "pix_flip": "objects/pix_flip.md"
            },
            {
                "spectrograph~": "objects/spectrograph~.md"
            },
            {
                "pix_normalize": "objects/pix_normalize.md"
            },
            {
                "pix_share_read": "objects/pix_share_read.md"
            },
            {
                "pix_coordinate": "objects/pix_coordinate.md"
            },
            {
                "GLdefine": "objects/GLdefine.md"
            },
            {
                "pix_writer": "objects/pix_writer.md"
            },
            {
                "pix_delay": "objects/pix_delay.md"
            },
            {
                "color": "objects/color.md"
            },
            {
                "circle": "objects/circle.md"
            },
            {
                "part_head": "objects/part_head.md"
            },
            {
                "pix_color": "objects/pix_color.md"
            },
            {
                "gemlist_info": "objects/gemlist_info.md"
            },
            {
                "pix_texture": "objects/pix_texture.md"
            },
            {
                "pix_multiblob": "objects/pix_multiblob.md"
            },
            {
                "gemglxwindow": "objects/gemglxwindow.md"
            },
            {
                "gemhead": "objects/gemhead.md"
            },
            {
                "mtx.ctl": "objects/mtx.ctl.md"
            },
            {
                "ambient": "objects/ambient.md"
            },
            {
                "pix_blobtracker": "objects/pix_blobtracker.md"
            },
            {
                "gemframebuffer": "objects/gemframebuffer.md"
            },
            {
                "hsv2rgb": "objects/hsv2rgb.md"
            },
            {
                "pix_refraction": "objects/pix_refraction.md"
            },
            {
                "pix_biquad": "objects/pix_biquad.md"
            },
            {
                "cone": "objects/cone.md"
            },
            {
                "polygon": "objects/polygon.md"
            },
            {
                "pix_multitexture": "objects/pix_multitexture.md"
            },
            {
                "shininess": "objects/shininess.md"
            },
            {
                "pix_add": "objects/pix_add.md"
            },
            {
                "teapot": "objects/teapot.md"
            },
            {
                "pix_blur": "objects/pix_blur.md"
            },
            {
                "GEMgl": "objects/GEMgl.md"
            },
            {
                "pix_video": "objects/pix_video.md"
            },
            {
                "pix_convolve": "objects/pix_convolve.md"
            },
            {
                "pix_hsv2rgb": "objects/pix_hsv2rgb.md"
            },
            {
                "vertex_program": "objects/vertex_program.md"
            },
            {
                "colorSquare": "objects/colorSquare.md"
            },
            {
                "pix_equal": "objects/pix_equal.md"
            },
            {
                "pix_buffer_filmopen": "objects/pix_buffer_filmopen.md"
            },
            {
                "pix_a_2grey": "objects/pix_a_2grey.md"
            },
            {
                "pix_grey": "objects/pix_grey.md"
            },
            {
                "glsl_geometry": "objects/glsl_geometry.md"
            },
            {
                "scope3d~": "objects/scope3d~.md"
            },
            {
                "pix_metaimage": "objects/pix_metaimage.md"
            },
            {
                "pix_coloralpha": "objects/pix_coloralpha.md"
            },
            {
                "ambientRGB": "objects/ambientRGB.md"
            },
            {
                "gemlist": "objects/gemlist.md"
            },
            {
                "pix_colormatrix": "objects/pix_colormatrix.md"
            },
            {
                "scopeXYZ~": "objects/scopeXYZ~.md"
            },
            {
                "pix_multiimage": "objects/pix_multiimage.md"
            },
            {
                "sphere": "objects/sphere.md"
            },
            {
                "ortho": "objects/ortho.md"
            },
            {
                "pix_movie": "objects/pix_movie.md"
            },
            {
                "pix_duotone": "objects/pix_duotone.md"
            },
            {
                "rubber": "objects/rubber.md"
            },
            {
                "diffuseRGB": "objects/diffuseRGB.md"
            },
            {
                "pix_hit": "objects/pix_hit.md"
            },
            {
                "pix_buffer_write": "objects/pix_buffer_write.md"
            },
            {
                "mesh_square": "objects/mesh_square.md"
            },
            {
                "yuv2rgb": "objects/yuv2rgb.md"
            },
            {
                "rgb2hsv": "objects/rgb2hsv.md"
            },
            {
                "scale": "objects/scale.md"
            },
            {
                "pix_indycam": "objects/pix_indycam.md"
            },
            {
                "pix_colorclassify": "objects/pix_colorclassify.md"
            },
            {
                "pix_rgba": "objects/pix_rgba.md"
            },
            {
                "part_targetcolor": "objects/part_targetcolor.md"
            },
            {
                "curve": "objects/curve.md"
            },
            {
                "part_gravity": "objects/part_gravity.md"
            },
            {
                "modelfiler": "objects/modelfiler.md"
            },
            {
                "torus": "objects/torus.md"
            },
            {
                "gemmacoswindow": "objects/gemmacoswindow.md"
            },
            {
                "tLink3D": "objects/tLink3D.md"
            },
            {
                "pix_invert": "objects/pix_invert.md"
            },
            {
                "part_information": "objects/part_information.md"
            },
            {
                "pix_buffer_read": "objects/pix_buffer_read.md"
            },
            {
                "part_targetsize": "objects/part_targetsize.md"
            },
            {
                "part_follow": "objects/part_follow.md"
            },
            {
                "pix_dot": "objects/pix_dot.md"
            },
            {
                "pix_motionblur": "objects/pix_motionblur.md"
            },
            {
                "shearYZ": "objects/shearYZ.md"
            },
            {
                "part_source": "objects/part_source.md"
            },
            {
                "gemorb": "objects/gemorb.md"
            },
            {
                "shearZX": "objects/shearZX.md"
            },
            {
                "part_damp": "objects/part_damp.md"
            },
            {
                "render_trigger": "objects/render_trigger.md"
            },
            {
                "pmpd3d": "objects/pmpd3d.md"
            },
            {
                "pix_draw": "objects/pix_draw.md"
            },
            {
                "pix_record": "objects/pix_record.md"
            },
            {
                "fragment_program": "objects/fragment_program.md"
            },
            {
                "pix_pix2sig~": "objects/pix_pix2sig~.md"
            },
            {
                "pix_subtract": "objects/pix_subtract.md"
            },
            {
                "sphere3d": "objects/sphere3d.md"
            },
            {
                "pix_posterize": "objects/pix_posterize.md"
            },
            {
                "translate": "objects/translate.md"
            },
            {
                "pix_roll": "objects/pix_roll.md"
            },
            {
                "shearXZ": "objects/shearXZ.md"
            },
            {
                "part_info": "objects/part_info.md"
            },
            {
                "light": "objects/light.md"
            },
            {
                "shearYX": "objects/shearYX.md"
            },
            {
                "pix_gain": "objects/pix_gain.md"
            },
            {
                "pix_composite": "objects/pix_composite.md"
            },
            {
                "part_sink": "objects/part_sink.md"
            },
            {
                "newWave": "objects/newWave.md"
            },
            {
                "part_orbitpoint": "objects/part_orbitpoint.md"
            },
            {
                "text3d": "objects/text3d.md"
            },
            {
                "pix_diff": "objects/pix_diff.md"
            },
            {
                "pix_aging": "objects/pix_aging.md"
            },
            {
                "gemmacwindow": "objects/gemmacwindow.md"
            },
            {
                "multimodel": "objects/multimodel.md"
            },
            {
                "part_render": "objects/part_render.md"
            },
            {
                "primTri": "objects/primTri.md"
            },
            {
                "gemw32window": "objects/gemw32window.md"
            },
            {
                "gemrepeat": "objects/gemrepeat.md"
            },
            {
                "accumrotate": "objects/accumrotate.md"
            },
            {
                "pix_convert": "objects/pix_convert.md"
            },
            {
                "gemlist_matrix": "objects/gemlist_matrix.md"
            },
            {
                "pix_bitmask": "objects/pix_bitmask.md"
            },
            {
                "rotate": "objects/rotate.md"
            },
            {
                "world_light": "objects/world_light.md"
            },
            {
                "pix_rtx": "objects/pix_rtx.md"
            },
            {
                "part_size": "objects/part_size.md"
            },
            {
                "gemmanager": "objects/gemmanager.md"
            },
            {
                "scaleXYZ": "objects/scaleXYZ.md"
            },
            {
                "pix_image": "objects/pix_image.md"
            },
            {
                "pic": "objects/pic.md"
            },
            {
                "pix_offset": "objects/pix_offset.md"
            },
            {
                "pix_deinterlace": "objects/pix_deinterlace.md"
            },
            {
                "pix_fiducialtrack": "objects/pix_fiducialtrack.md"
            },
            {
                "disk": "objects/disk.md"
            },
            {
                "pix_clearblock": "objects/pix_clearblock.md"
            },
            {
                "part_velcone": "objects/part_velcone.md"
            },
            {
                "pix_set": "objects/pix_set.md"
            },
            {
                "mesh_line": "objects/mesh_line.md"
            },
            {
                "part_killold": "objects/part_killold.md"
            },
            {
                "surface3d": "objects/surface3d.md"
            },
            {
                "pix_drum": "objects/pix_drum.md"
            },
            {
                "pix_mix": "objects/pix_mix.md"
            },
            {
                "pix_histo": "objects/pix_histo.md"
            },
            {
                "pix_sig2pix~": "objects/pix_sig2pix~.md"
            },
            {
                "pix_background": "objects/pix_background.md"
            },
            {
                "pqtorusknots": "objects/pqtorusknots.md"
            },
            {
                "pix_noise": "objects/pix_noise.md"
            },
            {
                "pix_imageInPlace": "objects/pix_imageInPlace.md"
            },
            {
                "pix_movement": "objects/pix_movement.md"
            },
            {
                "separator": "objects/separator.md"
            },
            {
                "pix_frei0r": "objects/pix_frei0r.md"
            },
            {
                "emission": "objects/emission.md"
            },
            {
                "depth": "objects/depth.md"
            },
            {
                "diffuse": "objects/diffuse.md"
            },
            {
                "part_killslow": "objects/part_killslow.md"
            },
            {
                "Gem": "objects/Gem.md"
            },
            {
                "polygon_smooth": "objects/polygon_smooth.md"
            },
            {
                "glsl": "objects/glsl.md"
            },
            {
                "pix_chroma_key": "objects/pix_chroma_key.md"
            },
            {
                "pix_contrast": "objects/pix_contrast.md"
            },
            {
                "rgb2yuv": "objects/rgb2yuv.md"
            },
            {
                "textoutline": "objects/textoutline.md"
            },
            {
                "part_draw": "objects/part_draw.md"
            },
            {
                "alpha": "objects/alpha.md"
            },
            {
                "pix_2grey": "objects/pix_2grey.md"
            },
            {
                "pix_colorreduce": "objects/pix_colorreduce.md"
            },
            {
                "shearZY": "objects/shearZY.md"
            },
            {
                "imageVert": "objects/imageVert.md"
            },
            {
                "trapezoid": "objects/trapezoid.md"
            },
            {
                "pix_film": "objects/pix_film.md"
            },
            {
                "scope~": "objects/scope~.md"
            },
            {
                "pix_mask": "objects/pix_mask.md"
            },
            {
                "part_vertex": "objects/part_vertex.md"
            },
            {
                "biplot": "objects/biplot.md"
            },
            {
                "ripple": "objects/ripple.md"
            },
            {
                "gemsdl2window": "objects/gemsdl2window.md"
            },
            {
                "pix_threshold": "objects/pix_threshold.md"
            },
            {
                "spline_path": "objects/spline_path.md"
            },
            {
                "glsl_vertex": "objects/glsl_vertex.md"
            },
            {
                "cylinder": "objects/cylinder.md"
            },
            {
                "pix_levels": "objects/pix_levels.md"
            },
            {
                "slideSquares": "objects/slideSquares.md"
            },
            {
                "curve3d": "objects/curve3d.md"
            },
            {
                "pix_backlight": "objects/pix_backlight.md"
            },
            {
                "part_velsphere": "objects/part_velsphere.md"
            },
            {
                "canvas.pos": "objects/canvas.pos.md"
            },
            {
                "emissionRGB": "objects/emissionRGB.md"
            },
            {
                "translateXYZ": "objects/translateXYZ.md"
            },
            {
                "triangle": "objects/triangle.md"
            },
            {
                "pix_freeframe": "objects/pix_freeframe.md"
            },
            {
                "pix_share_write": "objects/pix_share_write.md"
            },
            {
                "gemsdlwindow": "objects/gemsdlwindow.md"
            },
            {
                "gemglfw3window": "objects/gemglfw3window.md"
            },
            {
                "pix_buf": "objects/pix_buf.md"
            },
            {
                "graph~": "objects/graph~.md"
            },
            {
                "textextruded": "objects/textextruded.md"
            },
            {
                "pix_rectangle": "objects/pix_rectangle.md"
            },
            {
                "glsl_fragment": "objects/glsl_fragment.md"
            },
            {
                "pix_mean_color": "objects/pix_mean_color.md"
            },
            {
                "pix_multiply": "objects/pix_multiply.md"
            },
            {
                "pix_lumaoffset": "objects/pix_lumaoffset.md"
            },
            {
                "pix_resize": "objects/pix_resize.md"
            },
            {
                "rotateXYZ": "objects/rotateXYZ.md"
            },
            {
                "pix_dump": "objects/pix_dump.md"
            },
            {
                "glsl_program": "objects/glsl_program.md"
            },
            {
                "slider2d": "objects/slider2d.md"
            },
            {
                "pix_compare": "objects/pix_compare.md"
            },
            {
                "gemglutwindow": "objects/gemglutwindow.md"
            },
            {
                "pix_info": "objects/pix_info.md"
            },
            {
                "pix_data": "objects/pix_data.md"
            },
            {
                "pix_crop": "objects/pix_crop.md"
            },
            {
                "cube": "objects/cube.md"
            },
            {
                "pix_rds": "objects/pix_rds.md"
            },
            {
                "pix_tIIR": "objects/pix_tIIR.md"
            },
            {
                "specularRGB": "objects/specularRGB.md"
            },
            {
                "pix_blob": "objects/pix_blob.md"
            },
            {
                "pix_yuv": "objects/pix_yuv.md"
            },
            {
                "pix_buffer": "objects/pix_buffer.md"
            },
            {
                "linear_path": "objects/linear_path.md"
            },
            {
                "pix_snap": "objects/pix_snap.md"
            },
            {
                "text2d": "objects/text2d.md"
            },
            {
                "shearXY": "objects/shearXY.md"
            },
            {
                "specular": "objects/specular.md"
            },
            {
                "colorRGB": "objects/colorRGB.md"
            },
            {
                "pix_puzzle": "objects/pix_puzzle.md"
            },
            {
                "spot_light": "objects/spot_light.md"
            },
            {
                "square": "objects/square.md"
            },
            {
                "pix_scanline": "objects/pix_scanline.md"
            },
            {
                "pix_kaleidoscope": "objects/pix_kaleidoscope.md"
            },
            {
                "camera": "objects/camera.md"
            },
            {
                "gemcubeframebuffer": "objects/gemcubeframebuffer.md"
            },
            {
                "pix_movement2": "objects/pix_movement2.md"
            },
            {
                "gemglfw2window": "objects/gemglfw2window.md"
            },
            {
                "pix_alpha": "objects/pix_alpha.md"
            },
            {
                "_textbbox": "objects/_textbbox.md"
            },
            {
                "part_color": "objects/part_color.md"
            },
            {
                "pix_halftone": "objects/pix_halftone.md"
            },
            {
                "pix_curve": "objects/pix_curve.md"
            },
            {
                "pix_mano": "objects/pix_mano.md"
            },
            {
                "part_velocity": "objects/part_velocity.md"
            },
            {
                "pix_write": "objects/pix_write.md"
            },
            {
                "gemvertexbuffer": "objects/gemvertexbuffer.md"
            },
            {
                "tube": "objects/tube.md"
            },
            {
                "part_move": "objects/part_move.md"
            },
            {
                "pix_takealpha": "objects/pix_takealpha.md"
            },
            {
                "pix_snap2tex": "objects/pix_snap2tex.md"
            },
            {
                "pix_test": "objects/pix_test.md"
            }
        ]
    },
    "Scripting": {
        "Python": [],
        "Lua": [
            "test/lua/index.md",
            {
                "hello": "test/lua/hello.md"
            },
            {
                "lua": "test/lua/lua.md"
            },
            {
                "hello": "objects/hello.md"
            },
            {
                "lua": "objects/lua.md"
            }
        ]
    }
}